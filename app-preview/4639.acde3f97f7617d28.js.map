{"version":3,"file":"4639.acde3f97f7617d28.js","mappings":"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","names":["hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassMap","classes","map","getClassList","undefined","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","_ref","_asyncToGenerator","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push","_x","_x2","_x3","_x4","apply","this","arguments","Radio","constructor","hostRef","registerInstance","ionFocus","createEvent","ionBlur","inputId","radioButtonIds","radioGroup","checked","buttonTabindex","name","disabled","labelPlacement","updateState","compareWith","value","radioGroupValue","isOptionSelected","onClick","allowEmptySelection","onFocus","emit","onBlur","valueChanged","componentDidLoad","setFocus","_this","stopPropagation","focus","setButtonTabindex","_this2","connectedCallback","addEventListener","disconnectedCallback","removeEventListener","hasLabel","textContent","renderRadioControl","h","class","part","render","justify","alignment","mode","getIonMode","inItem","Host","key","T","role","tabindex","getElement","watchers","style","ios","md","RadioGroup","ionChange","ionValueChange","radioGroupIds","helperTextId","errorTextId","labelId","setRadioTabindex","radios","getRadios","first","find","radio","focusable","selectedRadio","target","newValue","emitValueChange","_this3","header","label","id","from","querySelectorAll","event","onKeydown","inSelectInterface","contains","includes","index","findIndex","current","next","previousValue","_this4","radioToFocus","r","tabIndex","renderHintText","helperText","errorText","getHintTextID","classList","renderHiddenInput"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/theme-DiVJyqlX.js","./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, h, d as Host, g as getElement } from './index-4DxY6_gG.js';\nimport { f as addEventListener, m as removeEventListener, a as renderHiddenInput } from './helpers-8KSQQGQy.js';\nimport { i as isOptionSelected } from './compare-with-utils-sObYyvOy.js';\nimport { h as hostContext, c as createColorClasses } from './theme-DiVJyqlX.js';\nimport { b as getIonMode } from './ionic-global-CTSyufhF.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;max-width:100%;min-height:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}.radio-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;min-height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.radio-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.radio-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between) .radio-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.radio-justify-start) .radio-wrapper{-ms-flex-pack:start;justify-content:start}:host(.radio-justify-end) .radio-wrapper{-ms-flex-pack:end;justify-content:end}:host(.radio-alignment-start) .radio-wrapper{-ms-flex-align:start;align-items:start}:host(.radio-alignment-center) .radio-wrapper{-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between),:host(.radio-justify-start),:host(.radio-justify-end),:host(.radio-alignment-start),:host(.radio-alignment-center){display:block}:host(.radio-label-placement-start) .radio-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.radio-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-end) .radio-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.radio-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.radio-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px}:host(.radio-label-placement-stacked) .radio-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.radio-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host{--color-checked:var(--ion-color-primary, #0054e9)}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{-webkit-margin-start:0;margin-inline-start:0}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:0.125rem;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #1a65eb);content:\\\"\\\";opacity:0.2}:host(.ion-focused) .radio-icon::after{inset-inline-start:-9px}.native-wrapper .radio-icon{width:0.9375rem;height:1.5rem}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;max-width:100%;min-height:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}.radio-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;min-height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.radio-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.radio-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between) .radio-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.radio-justify-start) .radio-wrapper{-ms-flex-pack:start;justify-content:start}:host(.radio-justify-end) .radio-wrapper{-ms-flex-pack:end;justify-content:end}:host(.radio-alignment-start) .radio-wrapper{-ms-flex-align:start;align-items:start}:host(.radio-alignment-center) .radio-wrapper{-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between),:host(.radio-justify-start),:host(.radio-justify-end),:host(.radio-alignment-start),:host(.radio-alignment-center){display:block}:host(.radio-label-placement-start) .radio-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.radio-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-end) .radio-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.radio-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.radio-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px}:host(.radio-label-placement-stacked) .radio-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.radio-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host{--color:rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #0054e9);--border-width:0.125rem;--border-style:solid;--border-radius:50%}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled) .label-text-wrapper{opacity:0.38}:host(.radio-disabled) .native-wrapper{opacity:0.63}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #1a65eb);content:\\\"\\\";opacity:0.2}.native-wrapper .radio-icon{width:1.25rem;height:1.25rem}\";\n\nconst Radio = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        this.radioGroup = null;\n        /**\n         * If `true`, the radio is selected.\n         */\n        this.checked = false;\n        /**\n         * The tabindex of the radio button.\n         * @internal\n         */\n        this.buttonTabindex = -1;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the radio.\n         */\n        this.disabled = false;\n        /**\n         * Where to place the label relative to the radio.\n         * `\"start\"`: The label will appear to the left of the radio in LTR and to the right in RTL.\n         * `\"end\"`: The label will appear to the right of the radio in LTR and to the left in RTL.\n         * `\"fixed\"`: The label has the same behavior as `\"start\"` except it also has a fixed width. Long text will be truncated with ellipses (\"...\").\n         * `\"stacked\"`: The label will appear above the radio regardless of the direction. The alignment of the label can be controlled with the `alignment` property.\n         */\n        this.labelPlacement = 'start';\n        this.updateState = () => {\n            if (this.radioGroup) {\n                const { compareWith, value: radioGroupValue } = this.radioGroup;\n                this.checked = isOptionSelected(radioGroupValue, this.value, compareWith);\n            }\n        };\n        this.onClick = () => {\n            const { radioGroup, checked, disabled } = this;\n            if (disabled) {\n                return;\n            }\n            /**\n             * The modern control does not use a native input\n             * inside of the radio host, so we cannot rely on the\n             * ev.preventDefault() behavior above. If the radio\n             * is checked and the parent radio group allows for empty\n             * selection, then we can set the checked state to false.\n             * Otherwise, the checked state should always be set\n             * to true because the checked state cannot be toggled.\n             */\n            if (checked && (radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.allowEmptySelection)) {\n                this.checked = false;\n            }\n            else {\n                this.checked = true;\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n    }\n    valueChanged() {\n        /**\n         * The new value of the radio may\n         * match the radio group's value,\n         * so we see if it should be checked.\n         */\n        this.updateState();\n    }\n    componentDidLoad() {\n        /**\n         * The value may be `undefined` if it\n         * gets set before the radio is\n         * rendered. This ensures that the radio\n         * is checked if the value matches. This\n         * happens most often when Angular is\n         * rendering the radio.\n         */\n        this.updateState();\n    }\n    /** @internal */\n    async setFocus(ev) {\n        if (ev !== undefined) {\n            ev.stopPropagation();\n            ev.preventDefault();\n        }\n        this.el.focus();\n    }\n    /** @internal */\n    async setButtonTabindex(value) {\n        this.buttonTabindex = value;\n    }\n    connectedCallback() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        const radioGroup = (this.radioGroup = this.el.closest('ion-radio-group'));\n        if (radioGroup) {\n            this.updateState();\n            addEventListener(radioGroup, 'ionValueChange', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const radioGroup = this.radioGroup;\n        if (radioGroup) {\n            removeEventListener(radioGroup, 'ionValueChange', this.updateState);\n            this.radioGroup = null;\n        }\n    }\n    get hasLabel() {\n        return this.el.textContent !== '';\n    }\n    renderRadioControl() {\n        return (h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" }), h(\"div\", { class: \"radio-ripple\" })));\n    }\n    render() {\n        const { checked, disabled, color, el, justify, labelPlacement, hasLabel, buttonTabindex, alignment } = this;\n        const mode = getIonMode(this);\n        const inItem = hostContext('ion-item', el);\n        return (h(Host, { key: '3353b28172b7f837d4b38964169b5b5f4ba02788', onFocus: this.onFocus, onBlur: this.onBlur, onClick: this.onClick, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': inItem,\n                'radio-checked': checked,\n                'radio-disabled': disabled,\n                [`radio-justify-${justify}`]: justify !== undefined,\n                [`radio-alignment-${alignment}`]: alignment !== undefined,\n                [`radio-label-placement-${labelPlacement}`]: true,\n                // Focus and active styling should not apply when the radio is in an item\n                'ion-activatable': !inItem,\n                'ion-focusable': !inItem,\n            }), role: \"radio\", \"aria-checked\": checked ? 'true' : 'false', \"aria-disabled\": disabled ? 'true' : null, tabindex: buttonTabindex }, h(\"label\", { key: '418a0a48366ff900e97da123abf665bbbda87fb7', class: \"radio-wrapper\" }, h(\"div\", { key: '6e5acdd8c8f5d0ad26632a65396afef8094153d1', class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': !hasLabel,\n            }, part: \"label\" }, h(\"slot\", { key: '10b157162cd283d624153c747679609cf0bbf11e' })), h(\"div\", { key: '4c45cca95cb105cd6df1025a26e3c045272184a0', class: \"native-wrapper\" }, this.renderRadioControl()))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n    ios: radioIosCss,\n    md: radioMdCss\n};\n\nconst radioGroupIosCss = \"ion-radio-group{vertical-align:top}.radio-group-wrapper{display:inline}.radio-group-top{line-height:1.5}.radio-group-top .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.radio-group-top .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid .radio-group-top .error-text{display:block}.ion-touched.ion-invalid .radio-group-top .helper-text{display:none}ion-list .radio-group-top{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}\";\n\nconst radioGroupMdCss = \"ion-radio-group{vertical-align:top}.radio-group-wrapper{display:inline}.radio-group-top{line-height:1.5}.radio-group-top .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.radio-group-top .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid .radio-group-top .error-text{display:block}.ion-touched.ion-invalid .radio-group-top .helper-text{display:none}ion-list .radio-group-top{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}\";\n\nconst RadioGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.helperTextId = `${this.inputId}-helper-text`;\n        this.errorTextId = `${this.inputId}-error-text`;\n        this.labelId = `${this.inputId}-lbl`;\n        /**\n         * If `true`, the radios can be deselected.\n         */\n        this.allowEmptySelection = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        this.setRadioTabindex = (value) => {\n            const radios = this.getRadios();\n            // Get the first radio that is not disabled and the checked one\n            const first = radios.find((radio) => !radio.disabled);\n            const checked = radios.find((radio) => radio.value === value && !radio.disabled);\n            if (!first && !checked) {\n                return;\n            }\n            // If an enabled checked radio exists, set it to be the focusable radio\n            // otherwise we default to focus the first radio\n            const focusable = checked || first;\n            for (const radio of radios) {\n                const tabindex = radio === focusable ? 0 : -1;\n                radio.setButtonTabindex(tabindex);\n            }\n        };\n        this.onClick = (ev) => {\n            ev.preventDefault();\n            /**\n             * The Radio Group component mandates that only one radio button\n             * within the group can be selected at any given time. Since `ion-radio`\n             * is a shadow DOM component, it cannot natively perform this behavior\n             * using the `name` attribute.\n             */\n            const selectedRadio = ev.target && ev.target.closest('ion-radio');\n            /**\n             * Our current disabled prop definition causes Stencil to mark it\n             * as optional. While this is not desired, fixing this behavior\n             * in Stencil is a significant breaking change, so this effort is\n             * being de-risked in STENCIL-917. Until then, we compromise\n             * here by checking for falsy `disabled` values instead of strictly\n             * checking `disabled === false`.\n             */\n            if (selectedRadio && !selectedRadio.disabled) {\n                const currentValue = this.value;\n                const newValue = selectedRadio.value;\n                if (newValue !== currentValue) {\n                    this.value = newValue;\n                    this.emitValueChange(ev);\n                }\n                else if (this.allowEmptySelection) {\n                    this.value = undefined;\n                    this.emitValueChange(ev);\n                }\n            }\n        };\n    }\n    valueChanged(value) {\n        this.setRadioTabindex(value);\n        this.ionValueChange.emit({ value });\n    }\n    componentDidLoad() {\n        /**\n         * There's an issue when assigning a value to the radio group\n         * within the Angular primary content (rendering within the\n         * app component template). When the template is isolated to a route,\n         * the value is assigned correctly.\n         * To address this issue, we need to ensure that the watcher is\n         * called after the component has finished loading,\n         * allowing the emit to be dispatched correctly.\n         */\n        this.valueChanged(this.value);\n    }\n    async connectedCallback() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n        if (header) {\n            const label = (this.label = header.querySelector('ion-label'));\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n    }\n    getRadios() {\n        return Array.from(this.el.querySelectorAll('ion-radio'));\n    }\n    /**\n     * Emits an `ionChange` event.\n     *\n     * This API should be called for user committed changes.\n     * This API should not be used for external value changes.\n     */\n    emitValueChange(event) {\n        const { value } = this;\n        this.ionChange.emit({ value, event });\n    }\n    onKeydown(ev) {\n        // We don't want the value to automatically change/emit when the radio group is part of a select interface\n        // as this will cause the interface to close when navigating through the radio group options\n        const inSelectInterface = !!this.el.closest('ion-select-popover') || !!this.el.closest('ion-select-modal');\n        if (ev.target && !this.el.contains(ev.target)) {\n            return;\n        }\n        // Get all radios inside of the radio group and then\n        // filter out disabled radios since we need to skip those\n        const radios = this.getRadios().filter((radio) => !radio.disabled);\n        // Only move the radio if the current focus is in the radio group\n        if (ev.target && radios.includes(ev.target)) {\n            const index = radios.findIndex((radio) => radio === ev.target);\n            const current = radios[index];\n            let next;\n            // If hitting arrow down or arrow right, move to the next radio\n            // If we're on the last radio, move to the first radio\n            if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n                next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n            }\n            // If hitting arrow up or arrow left, move to the previous radio\n            // If we're on the first radio, move to the last radio\n            if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n                next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n            }\n            if (next && radios.includes(next)) {\n                next.setFocus(ev);\n                if (!inSelectInterface) {\n                    this.value = next.value;\n                    this.emitValueChange(ev);\n                }\n            }\n            // Update the radio group value when a user presses the\n            // space bar on top of a selected radio\n            if ([' '].includes(ev.key)) {\n                const previousValue = this.value;\n                this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\n                if (previousValue !== this.value || this.allowEmptySelection) {\n                    /**\n                     * Value change should only be emitted if the value is different,\n                     * such as selecting a new radio with the space bar or if\n                     * the radio group allows for empty selection and the user\n                     * is deselecting a checked radio.\n                     */\n                    this.emitValueChange(ev);\n                }\n                // Prevent browsers from jumping\n                // to the bottom of the screen\n                ev.preventDefault();\n            }\n        }\n    }\n    /** @internal */\n    async setFocus() {\n        const radioToFocus = this.getRadios().find((r) => r.tabIndex !== -1);\n        radioToFocus === null || radioToFocus === void 0 ? void 0 : radioToFocus.setFocus();\n    }\n    /**\n     * Renders the helper text or error text values\n     */\n    renderHintText() {\n        const { helperText, errorText, helperTextId, errorTextId } = this;\n        const hasHintText = !!helperText || !!errorText;\n        if (!hasHintText) {\n            return;\n        }\n        return (h(\"div\", { class: \"radio-group-top\" }, h(\"div\", { id: helperTextId, class: \"helper-text\" }, helperText), h(\"div\", { id: errorTextId, class: \"error-text\" }, errorText)));\n    }\n    getHintTextID() {\n        const { el, helperText, errorText, helperTextId, errorTextId } = this;\n        if (el.classList.contains('ion-touched') && el.classList.contains('ion-invalid') && errorText) {\n            return errorTextId;\n        }\n        if (helperText) {\n            return helperTextId;\n        }\n        return undefined;\n    }\n    render() {\n        const { label, labelId, el, name, value } = this;\n        const mode = getIonMode(this);\n        renderHiddenInput(true, el, name, value, false);\n        return (h(Host, { key: '81b8ebc96b2f383c36717f290d2959cc921ad6e8', role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, \"aria-describedby\": this.getHintTextID(), \"aria-invalid\": this.getHintTextID() === this.errorTextId, onClick: this.onClick, class: mode }, this.renderHintText(), h(\"div\", { key: '45b09efc10776b889a8f372cba80d25a3fc849da', class: \"radio-group-wrapper\" }, h(\"slot\", { key: '58714934542c2fdd7396de160364f3f06b32e8f8' }))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioGroupIds = 0;\nRadioGroup.style = {\n    ios: radioGroupIosCss,\n    md: radioGroupMdCss\n};\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"],"x_google_ignoreList":[0,1]}