{"version":3,"file":"5427.eee9335918b7356f.js","mappings":"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","names":["Tab","constructor","hostRef","registerInstance","this","loaded","active","componentWillLoad","_this","_asyncToGenerator","setActive","_this2","prepareLazyLoaded","changeActive","isActive","component","attachComponent","delegate","el","e","printIonError","Promise","resolve","undefined","render","tab","h","Host","key","role","class","getElement","watchers","style","Tabs","ionNavWillLoad","createEvent","ionTabsWillChange","ionTabsDidChange","transitioning","useRouter","onTabClicked","ev","href","detail","router","document","querySelector","push","select","_this3","closest","tabs","length","emit","componentWillRender","tabBar","selectedTab","window","currentPath","location","pathname","tabButtons","querySelectorAll","tabButton","tabId","getAttribute","includes","_this4","getTab","shouldSwitch","notifyRouter","tabSwitch","_this5","getSelected","setRouteId","id","_this6","changed","element","markVisible","getRouteId","_this7","_a","reject","leavingTab","navChanged","Array","from","onIonTabButtonClick","name","tabEl","find","t"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, j as printIonError, h, d as Host, g as getElement, c as createEvent } from './index-4DxY6_gG.js';\nimport { a as attachComponent } from './framework-delegate-BLEBgH06.js';\nimport './helpers-8KSQQGQy.js';\n\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\n\nconst Tab = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.loaded = false;\n        /** @internal */\n        this.active = false;\n    }\n    async componentWillLoad() {\n        if (this.active) {\n            await this.setActive();\n        }\n    }\n    /** Set the active component for the tab */\n    async setActive() {\n        await this.prepareLazyLoaded();\n        this.active = true;\n    }\n    changeActive(isActive) {\n        if (isActive) {\n            this.prepareLazyLoaded();\n        }\n    }\n    prepareLazyLoaded() {\n        if (!this.loaded && this.component != null) {\n            this.loaded = true;\n            try {\n                return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n            }\n            catch (e) {\n                printIonError('[ion-tab] - Exception in prepareLazyLoaded:', e);\n            }\n        }\n        return Promise.resolve(undefined);\n    }\n    render() {\n        const { tab, active, component } = this;\n        return (h(Host, { key: 'dbad8fe9f1566277d14647626308eaf1601ab01f', role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\n                'ion-page': component === undefined,\n                'tab-hidden': !active,\n            } }, h(\"slot\", { key: '3be64f4e7161f6769aaf8e4dcb5293fcaa09af45' })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"active\": [\"changeActive\"]\n    }; }\n};\nTab.style = tabCss;\n\nconst tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\n\nconst Tabs = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n        this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n        this.transitioning = false;\n        /** @internal */\n        this.useRouter = false;\n        this.onTabClicked = (ev) => {\n            const { href, tab } = ev.detail;\n            if (this.useRouter && href !== undefined) {\n                const router = document.querySelector('ion-router');\n                if (router) {\n                    router.push(href);\n                }\n            }\n            else {\n                this.select(tab);\n            }\n        };\n    }\n    async componentWillLoad() {\n        if (!this.useRouter) {\n            /**\n             * JavaScript and StencilJS use `ion-router`, while\n             * the other frameworks use `ion-router-outlet`.\n             *\n             * If either component is present then tabs will not use\n             * a basic tab-based navigation. It will use the history\n             * stack or URL updates associated with the router.\n             */\n            this.useRouter =\n                (!!this.el.querySelector('ion-router-outlet') || !!document.querySelector('ion-router')) &&\n                    !this.el.closest('[no-router]');\n        }\n        if (!this.useRouter) {\n            const tabs = this.tabs;\n            if (tabs.length > 0) {\n                await this.select(tabs[0]);\n            }\n        }\n        this.ionNavWillLoad.emit();\n    }\n    componentWillRender() {\n        const tabBar = this.el.querySelector('ion-tab-bar');\n        if (tabBar) {\n            let tab = this.selectedTab ? this.selectedTab.tab : undefined;\n            // Fallback: if no selectedTab is set but we're using router mode,\n            // determine the active tab from the current URL. This works around\n            // timing issues in React Router integration where setRouteId may not\n            // be called in time for the initial render.\n            // TODO(FW-6724): Remove this with React Router upgrade\n            if (!tab && this.useRouter && typeof window !== 'undefined') {\n                const currentPath = window.location.pathname;\n                const tabButtons = this.el.querySelectorAll('ion-tab-button');\n                // Look for a tab button that matches the current path pattern\n                for (const tabButton of tabButtons) {\n                    const tabId = tabButton.getAttribute('tab');\n                    if (tabId && currentPath.includes(tabId)) {\n                        tab = tabId;\n                        break;\n                    }\n                }\n            }\n            tabBar.selectedTab = tab;\n        }\n    }\n    /**\n     * Select a tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async select(tab) {\n        const selectedTab = getTab(this.tabs, tab);\n        if (!this.shouldSwitch(selectedTab)) {\n            return false;\n        }\n        await this.setActive(selectedTab);\n        await this.notifyRouter();\n        this.tabSwitch();\n        return true;\n    }\n    /**\n     * Get a specific tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async getTab(tab) {\n        return getTab(this.tabs, tab);\n    }\n    /**\n     * Get the currently selected tab. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n     */\n    getSelected() {\n        return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n    }\n    /** @internal */\n    async setRouteId(id) {\n        const selectedTab = getTab(this.tabs, id);\n        if (!this.shouldSwitch(selectedTab)) {\n            return { changed: false, element: this.selectedTab };\n        }\n        await this.setActive(selectedTab);\n        return {\n            changed: true,\n            element: this.selectedTab,\n            markVisible: () => this.tabSwitch(),\n        };\n    }\n    /** @internal */\n    async getRouteId() {\n        var _a;\n        const tabId = (_a = this.selectedTab) === null || _a === void 0 ? void 0 : _a.tab;\n        return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n    }\n    setActive(selectedTab) {\n        if (this.transitioning) {\n            return Promise.reject('transitioning already happening');\n        }\n        this.transitioning = true;\n        this.leavingTab = this.selectedTab;\n        this.selectedTab = selectedTab;\n        this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n        selectedTab.active = true;\n        return Promise.resolve();\n    }\n    tabSwitch() {\n        const selectedTab = this.selectedTab;\n        const leavingTab = this.leavingTab;\n        this.leavingTab = undefined;\n        this.transitioning = false;\n        if (!selectedTab) {\n            return;\n        }\n        if (leavingTab !== selectedTab) {\n            if (leavingTab) {\n                leavingTab.active = false;\n            }\n            this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n        }\n    }\n    notifyRouter() {\n        if (this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                return router.navChanged('forward');\n            }\n        }\n        return Promise.resolve(false);\n    }\n    shouldSwitch(selectedTab) {\n        const leavingTab = this.selectedTab;\n        return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n    }\n    get tabs() {\n        return Array.from(this.el.querySelectorAll('ion-tab'));\n    }\n    render() {\n        return (h(Host, { key: '6dd1d17cc5a7aff4b910303006b4478080ca97af', onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { key: 'db54a692d1a825498a116f090eb305f7cceceb5a', name: \"top\" }), h(\"div\", { key: 'e1b7d49ba7032e9071de2029695254e2a8303be9', class: \"tabs-inner\" }, h(\"slot\", { key: '4c3b58d5292c8c834e7532c51de0861068943d79' })), h(\"slot\", { key: 'dd59c0b9b217dfbfb0fccdbc6896b593278549cc', name: \"bottom\" })));\n    }\n    get el() { return getElement(this); }\n};\nconst getTab = (tabs, tab) => {\n    const tabEl = typeof tab === 'string' ? tabs.find((t) => t.tab === tab) : tab;\n    if (!tabEl) {\n        printIonError(`[ion-tabs] - Tab with id: \"${tabEl}\" does not exist`);\n    }\n    return tabEl;\n};\nTabs.style = tabsCss;\n\nexport { Tab as ion_tab, Tabs as ion_tabs };\n"],"x_google_ignoreList":[0]}