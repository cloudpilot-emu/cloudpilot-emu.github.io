{"version":3,"file":"8022.fd478da8334e4c36.js","mappings":"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","names":["Breadcrumb","constructor","hostRef","registerInstance","this","ionFocus","createEvent","ionBlur","collapsedClick","inheritedAttributes","onFocus","emit","onBlur","collapsedIndicatorClick","ionShadowTarget","collapsedRef","collapsed","last","undefined","showCollapsedIndicator","color","active","disabled","download","href","rel","separator","target","routerDirection","routerAnimation","componentWillLoad","inheritAriaAttributes","el","isClickable","render","clickable","TagType","mode","getIonMode","attrs","showSeparator","h","Host","onClick","ev","openURL","class","createColorClasses","A","hostContext","Object","assign","part","name","ref","collapsedEl","icon","ellipsisHorizontal","lazy","chevronForwardOutline","getElement","style","ios","md","Breadcrumbs","ionCollapsedClick","breadcrumbsInit","setBreadcrumbSeparator","setMaxItems","resetActiveBreadcrumb","activeBreadcrumb","getBreadcrumbs","find","breadcrumb","activeChanged","itemsAfterCollapse","itemsBeforeCollapse","maxItems","breadcrumbs","length","forEach","index","Array","from","querySelectorAll","slotChanged","onCollapsedClick","collapsedBreadcrumbs","filter","detail","maxItemsChanged","i","onSlotchange","watchers","selector","closest","cssClassMap","getClassMap","classes","map","getClassList","isArray","split","c","trim","SCHEME","_ref","_asyncToGenerator","url","direction","animation","test","router","document","querySelector","preventDefault","push","_x","_x2","_x3","_x4","apply","arguments"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-breadcrumb_2.entry.js","./node_modules/@ionic/core/dist/esm/theme-17531cdf.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, H as Host, f as getElement } from './index-847f2fde.js';\nimport { i as inheritAriaAttributes } from './helpers-3379ba19.js';\nimport { o as openURL, c as createColorClasses, h as hostContext } from './theme-17531cdf.js';\nimport { m as chevronForwardOutline, n as ellipsisHorizontal } from './index-ecfc2c9f.js';\nimport { b as getIonMode } from './ionic-global-1ef19007.js';\n\nconst breadcrumbIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-850, #2d4665);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--color-active);--background-focused:var(--ion-color-step-50, rgba(233, 237, 243, 0.7))}:host(.breadcrumb-active){font-weight:600}.breadcrumb-native{border-radius:4px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:5px;padding-bottom:5px;border:1px solid transparent}:host(.ion-focused) .breadcrumb-native{border-radius:8px}:host(.in-breadcrumbs-color.ion-focused) .breadcrumb-native,:host(.ion-color.ion-focused) .breadcrumb-native{background:rgba(var(--ion-color-base-rgb), 0.1);color:var(--ion-color-base)}:host(.ion-focused) ::slotted(ion-icon),:host(.in-breadcrumbs-color.ion-focused) ::slotted(ion-icon),:host(.ion-color.ion-focused) ::slotted(ion-icon){color:var(--ion-color-step-750, #445b78)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-400, #92a0b3);font-size:18px}::slotted(ion-icon[slot=start]){-webkit-margin-end:8px;margin-inline-end:8px}::slotted(ion-icon[slot=end]){-webkit-margin-start:8px;margin-inline-start:8px}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #242d39)}.breadcrumbs-collapsed-indicator{border-radius:4px;background:var(--ion-color-step-100, #e9edf3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.45}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #d9e0ea)}\";\n\nconst breadcrumbMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-600, #677483);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--ion-color-step-800, #35404e);--background-focused:var(--ion-color-step-50, #fff)}:host(.breadcrumb-active){font-weight:500}.breadcrumb-native{-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px}.breadcrumb-separator{-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px;margin-top:-1px}:host(.ion-focused) .breadcrumb-native{border-radius:4px;-webkit-box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12);box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-550, #7d8894);font-size:18px}::slotted(ion-icon[slot=start]){-webkit-margin-end:8px;margin-inline-end:8px}::slotted(ion-icon[slot=end]){-webkit-margin-start:8px;margin-inline-start:8px}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #222d3a)}.breadcrumbs-collapsed-indicator{border-radius:2px;background:var(--ion-color-step-100, #eef1f3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.7}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #dfe5e8)}\";\n\nconst Breadcrumb = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.collapsedClick = createEvent(this, \"collapsedClick\", 7);\n    this.inheritedAttributes = {};\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.collapsedIndicatorClick = () => {\n      this.collapsedClick.emit({ ionShadowTarget: this.collapsedRef });\n    };\n    this.collapsed = false;\n    this.last = undefined;\n    this.showCollapsedIndicator = undefined;\n    this.color = undefined;\n    this.active = false;\n    this.disabled = false;\n    this.download = undefined;\n    this.href = undefined;\n    this.rel = undefined;\n    this.separator = undefined;\n    this.target = undefined;\n    this.routerDirection = 'forward';\n    this.routerAnimation = undefined;\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  isClickable() {\n    return this.href !== undefined;\n  }\n  render() {\n    const { color, active, collapsed, disabled, download, el, inheritedAttributes, last, routerAnimation, routerDirection, separator, showCollapsedIndicator, target, } = this;\n    const clickable = this.isClickable();\n    const TagType = this.href === undefined ? 'span' : 'a';\n    // Links can still be tabbed to when set to disabled if they have an href\n    // in order to truly disable them we can keep it as an anchor but remove the href\n    const href = disabled ? undefined : this.href;\n    const mode = getIonMode(this);\n    const attrs = TagType === 'span'\n      ? {}\n      : {\n        download,\n        href,\n        target,\n      };\n    // If the breadcrumb is collapsed, check if it contains the collapsed indicator\n    // to show the separator as long as it isn't also the last breadcrumb\n    // otherwise if not collapsed use the value in separator\n    const showSeparator = last ? false : collapsed ? (showCollapsedIndicator && !last ? true : false) : separator;\n    return (h(Host, { onClick: (ev) => openURL(href, ev, routerDirection, routerAnimation), \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses(color, {\n        [mode]: true,\n        'breadcrumb-active': active,\n        'breadcrumb-collapsed': collapsed,\n        'breadcrumb-disabled': disabled,\n        'in-breadcrumbs-color': hostContext('ion-breadcrumbs[color]', el),\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': clickable,\n        'ion-focusable': clickable,\n      }) }, h(TagType, Object.assign({}, attrs, { class: \"breadcrumb-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }, inheritedAttributes), h(\"slot\", { name: \"start\" }), h(\"slot\", null), h(\"slot\", { name: \"end\" })), showCollapsedIndicator && (h(\"button\", { part: \"collapsed-indicator\", \"aria-label\": \"Show more breadcrumbs\", onClick: () => this.collapsedIndicatorClick(), ref: (collapsedEl) => (this.collapsedRef = collapsedEl), class: {\n        'breadcrumbs-collapsed-indicator': true,\n      } }, h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: ellipsisHorizontal, lazy: false }))), showSeparator && (\n    /**\n     * Separators should not be announced by narrators.\n     * We add aria-hidden on the span so that this applies\n     * to any custom separators too.\n     */\n    h(\"span\", { class: \"breadcrumb-separator\", part: \"separator\", \"aria-hidden\": \"true\" }, h(\"slot\", { name: \"separator\" }, mode === 'ios' ? (h(\"ion-icon\", { icon: chevronForwardOutline, lazy: false, \"flip-rtl\": true })) : (h(\"span\", null, \"/\")))))));\n  }\n  get el() { return getElement(this); }\n};\nBreadcrumb.style = {\n  ios: breadcrumbIosCss,\n  md: breadcrumbMdCss\n};\n\nconst breadcrumbsIosCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:0;padding-bottom:0;-ms-flex-pack:center;justify-content:center}\";\n\nconst breadcrumbsMdCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0}\";\n\nconst Breadcrumbs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionCollapsedClick = createEvent(this, \"ionCollapsedClick\", 7);\n    this.breadcrumbsInit = () => {\n      this.setBreadcrumbSeparator();\n      this.setMaxItems();\n    };\n    this.resetActiveBreadcrumb = () => {\n      const breadcrumbs = this.getBreadcrumbs();\n      // Only reset the active breadcrumb if we were the ones to change it\n      // otherwise use the one set on the component\n      const activeBreadcrumb = breadcrumbs.find((breadcrumb) => breadcrumb.active);\n      if (activeBreadcrumb && this.activeChanged) {\n        activeBreadcrumb.active = false;\n      }\n    };\n    this.setMaxItems = () => {\n      const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\n      const breadcrumbs = this.getBreadcrumbs();\n      for (const breadcrumb of breadcrumbs) {\n        breadcrumb.showCollapsedIndicator = false;\n        breadcrumb.collapsed = false;\n      }\n      // If the number of breadcrumbs exceeds the maximum number of items\n      // that should show and the items before / after collapse do not\n      // exceed the maximum items then we need to collapse the breadcrumbs\n      const shouldCollapse = maxItems !== undefined && breadcrumbs.length > maxItems && itemsBeforeCollapse + itemsAfterCollapse <= maxItems;\n      if (shouldCollapse) {\n        // Show the collapsed indicator in the first breadcrumb that collapses\n        breadcrumbs.forEach((breadcrumb, index) => {\n          if (index === itemsBeforeCollapse) {\n            breadcrumb.showCollapsedIndicator = true;\n          }\n          // Collapse all breadcrumbs that have an index greater than or equal to\n          // the number before collapse and an index less than the total number\n          // of breadcrumbs minus the items that should show after the collapse\n          if (index >= itemsBeforeCollapse && index < breadcrumbs.length - itemsAfterCollapse) {\n            breadcrumb.collapsed = true;\n          }\n        });\n      }\n    };\n    this.setBreadcrumbSeparator = () => {\n      const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\n      const breadcrumbs = this.getBreadcrumbs();\n      // Check if an active breadcrumb exists already\n      const active = breadcrumbs.find((breadcrumb) => breadcrumb.active);\n      // Set the separator on all but the last breadcrumb\n      for (const breadcrumb of breadcrumbs) {\n        // The only time the last breadcrumb changes is when\n        // itemsAfterCollapse is set to 0, in this case the\n        // last breadcrumb will be the collapsed indicator\n        const last = maxItems !== undefined && itemsAfterCollapse === 0\n          ? breadcrumb === breadcrumbs[itemsBeforeCollapse]\n          : breadcrumb === breadcrumbs[breadcrumbs.length - 1];\n        breadcrumb.last = last;\n        // If the breadcrumb has defined whether or not to show the\n        // separator then use that value, otherwise check if it's the\n        // last breadcrumb\n        const separator = breadcrumb.separator !== undefined ? breadcrumb.separator : last ? undefined : true;\n        breadcrumb.separator = separator;\n        // If there is not an active breadcrumb already\n        // set the last one to active\n        if (!active && last) {\n          breadcrumb.active = true;\n          this.activeChanged = true;\n        }\n      }\n    };\n    this.getBreadcrumbs = () => {\n      return Array.from(this.el.querySelectorAll('ion-breadcrumb'));\n    };\n    this.slotChanged = () => {\n      this.resetActiveBreadcrumb();\n      this.breadcrumbsInit();\n    };\n    this.collapsed = undefined;\n    this.activeChanged = undefined;\n    this.color = undefined;\n    this.maxItems = undefined;\n    this.itemsBeforeCollapse = 1;\n    this.itemsAfterCollapse = 1;\n  }\n  onCollapsedClick(ev) {\n    const breadcrumbs = this.getBreadcrumbs();\n    const collapsedBreadcrumbs = breadcrumbs.filter((breadcrumb) => breadcrumb.collapsed);\n    this.ionCollapsedClick.emit(Object.assign(Object.assign({}, ev.detail), { collapsedBreadcrumbs }));\n  }\n  maxItemsChanged() {\n    this.resetActiveBreadcrumb();\n    this.breadcrumbsInit();\n  }\n  componentWillLoad() {\n    this.breadcrumbsInit();\n  }\n  render() {\n    const { color, collapsed } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(color, {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'breadcrumbs-collapsed': collapsed,\n      }) }, h(\"slot\", { onSlotchange: this.slotChanged })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"maxItems\": [\"maxItemsChanged\"],\n    \"itemsBeforeCollapse\": [\"maxItemsChanged\"],\n    \"itemsAfterCollapse\": [\"maxItemsChanged\"]\n  }; }\n};\nBreadcrumbs.style = {\n  ios: breadcrumbsIosCss,\n  md: breadcrumbsMdCss\n};\n\nexport { Breadcrumb as ion_breadcrumb, Breadcrumbs as ion_breadcrumbs };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}