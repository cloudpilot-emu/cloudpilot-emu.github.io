{"version":3,"file":"654.a9621c259e56a283.js","mappings":"wJAOA,MAEMA,EAAM,MACRC,YAAYC,IACRC,OAAiBC,KAAMF,GACvBE,KAAKC,kBAAiBC,KAAYF,KAAM,iBAAkB,GAC1DA,KAAKG,iBAAgBD,KAAYF,KAAM,gBAAiB,GACxDA,KAAKI,YAAWF,KAAYF,KAAM,WAAY,GAC9CA,KAAKK,oBAAsB,CAAC,EAC5BL,KAAKM,OAAS,KACVN,KAAKG,cAAcI,QAEvBP,KAAKQ,QAAU,KACXR,KAAKI,SAASG,OAEtB,CACAE,aACIT,KAAKU,OACT,CACAC,oBACIX,KAAKK,uBAAsBO,KAAkBZ,KAAKa,GAAI,CAAC,aAC3D,CACAC,mBACId,KAAKU,OACT,CACAA,aACqBK,IAAbf,KAAKgB,aAGEC,OAAW,KAClB,yBAA0BA,QAC1B,8BAA+BA,QAC/B,mBAAoBA,OAAOC,0BAA0BC,WACrDnB,KAAKoB,WACLpB,KAAKqB,GAAK,IAAIC,qBAAsBC,IAM5BA,EAAKA,EAAKC,OAAS,GAAGC,iBACtBzB,KAAK0B,OACL1B,KAAKoB,cAGbpB,KAAKqB,GAAGM,QAAQ3B,KAAKa,KAIrBe,WAAW,IAAM5B,KAAK0B,OAAQ,KAEtC,CACAA,OACI1B,KAAK6B,UAAY7B,KAAKQ,QACtBR,KAAK8B,QAAU9B,KAAKgB,IACpBhB,KAAKC,eAAeM,MACxB,CACAa,WACQpB,KAAKqB,KACLrB,KAAKqB,GAAGU,aACR/B,KAAKqB,QAAKN,EAElB,CACAiB,SACI,MAAQF,UAASG,MAAK3B,SAAQuB,YAAWxB,uBAAwBL,MACzDkC,aAAc7B,EACtB,SAAQ8B,KAAEC,IAAM,CAAEC,IAAK,2CAA4CC,SAAOC,KAAWvC,QAAM,EAAGmC,KAAE,MAAO,CAAEE,IAAK,2CAA4CG,SAAU,QAASxB,IAAKc,EAASG,IAAKA,EAAK3B,OAAQA,EAAQE,QAASqB,EAAWY,KAAM,QAASP,UAAWQ,EAAYR,KACnR,CACA,MAAIrB,GAAO,SAAO8B,KAAW3C,KAAO,CACpC,mBAAW4C,GAAa,MAAO,CAC3B5B,IAAO,CAAC,cACT,GASD0B,EAAeR,IACjB,OAAQA,GACJ,IAAK,OACD,OAAO,EACX,IAAK,QACD,OAAO,EACX,QACI,SAGZtC,EAAIiD,MA1FW","names":["Img","constructor","hostRef","registerInstance","this","ionImgWillLoad","createEvent","ionImgDidLoad","ionError","inheritedAttributes","onLoad","emit","onError","srcChanged","addIO","componentWillLoad","inheritAttributes","el","componentDidLoad","undefined","src","window","IntersectionObserverEntry","prototype","removeIO","io","IntersectionObserver","data","length","isIntersecting","load","observe","setTimeout","loadError","loadSrc","disconnect","render","alt","draggable","h","Host","key","class","getIonMode","decoding","part","isDraggable","getElement","watchers","style"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, h, d as Host, g as getElement } from './index-4DxY6_gG.js';\nimport { b as inheritAttributes } from './helpers-8KSQQGQy.js';\nimport { b as getIonMode } from './ionic-global-CTSyufhF.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n        this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n        this.ionError = createEvent(this, \"ionError\", 7);\n        this.inheritedAttributes = {};\n        this.onLoad = () => {\n            this.ionImgDidLoad.emit();\n        };\n        this.onError = () => {\n            this.ionError.emit();\n        };\n    }\n    srcChanged() {\n        this.addIO();\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAttributes(this.el, ['draggable']);\n    }\n    componentDidLoad() {\n        this.addIO();\n    }\n    addIO() {\n        if (this.src === undefined) {\n            return;\n        }\n        if (typeof window !== 'undefined' &&\n            'IntersectionObserver' in window &&\n            'IntersectionObserverEntry' in window &&\n            'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n            this.removeIO();\n            this.io = new IntersectionObserver((data) => {\n                /**\n                 * On slower devices, it is possible for an intersection observer entry to contain multiple\n                 * objects in the array. This happens when quickly scrolling an image into view and then out of\n                 * view. In this case, the last object represents the current state of the component.\n                 */\n                if (data[data.length - 1].isIntersecting) {\n                    this.load();\n                    this.removeIO();\n                }\n            });\n            this.io.observe(this.el);\n        }\n        else {\n            // fall back to setTimeout for Safari and IE\n            setTimeout(() => this.load(), 200);\n        }\n    }\n    load() {\n        this.loadError = this.onError;\n        this.loadSrc = this.src;\n        this.ionImgWillLoad.emit();\n    }\n    removeIO() {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    }\n    render() {\n        const { loadSrc, alt, onLoad, loadError, inheritedAttributes } = this;\n        const { draggable } = inheritedAttributes;\n        return (h(Host, { key: 'da600442894427dee1974a28e545613afac69fca', class: getIonMode(this) }, h(\"img\", { key: '16df0c7069af86c0fa7ce5af598bc0f63b4eb71a', decoding: \"async\", src: loadSrc, alt: alt, onLoad: onLoad, onError: loadError, part: \"image\", draggable: isDraggable(draggable) })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"src\": [\"srcChanged\"]\n    }; }\n};\n/**\n * Enumerated strings must be set as booleans\n * as Stencil will not render 'false' in the DOM.\n * The need to explicitly render draggable=\"true\"\n * as only certain elements are draggable by default.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable.\n */\nconst isDraggable = (draggable) => {\n    switch (draggable) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        default:\n            return undefined;\n    }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"],"x_google_ignoreList":[0]}