{"version":3,"file":"3592.9138d5d36d19b75b.js","mappings":"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","names":["Radio","constructor","hostRef","registerInstance","this","ionStyle","createEvent","ionFocus","ionBlur","inputId","radioButtonIds","radioGroup","checked","buttonTabindex","name","disabled","updateState","value","onClick","nativeInput","onFocus","emit","onBlur","setFocus","ev","stopPropagation","preventDefault","_this","el","focus","setButtonTabindex","_this2","connectedCallback","undefined","closest","addEventListener","disconnectedCallback","removeEventListener","componentWillLoad","emitStyle","render","color","mode","getIonMode","label","labelId","labelText","getAriaLabel","h","Host","role","tabindex","class","createColorClasses","l","hostContext","interactive","part","htmlFor","type","id","ref","nativeEl","getElement","watchers","style","ios","md","RadioGroup","ionChange","radioGroupIds","allowEmptySelection","setRadioTabindex","radios","getRadios","first","find","radio","focusable","selectedRadio","target","newValue","valueChanged","componentDidLoad","header","_this3","querySelector","Array","from","querySelectorAll","onKeydown","inSelectPopover","contains","filter","includes","index","findIndex","current","next","code","length","selector","cssClassMap","Object","assign","getClassMap","classes","map","getClassList","isArray","split","c","trim","forEach","SCHEME","openURL","url","direction","animation","test","router","document","push","_x"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js","./node_modules/@ionic/core/dist/esm/theme-7670341c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-8e692445.js';\nimport { b as getIonMode } from './ionic-global-c74e4951.js';\nimport { a as addEventListener, b as removeEventListener, d as getAriaLabel } from './helpers-3b390e48.js';\nimport { c as createColorClasses, h as hostContext } from './theme-7670341c.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Radio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.inputId = `ion-rb-${radioButtonIds++}`;\n    this.radioGroup = null;\n    /**\n     * If `true`, the radio is selected.\n     */\n    this.checked = false;\n    /**\n     * The tabindex of the radio button.\n     * @internal\n     */\n    this.buttonTabindex = -1;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n    this.disabled = false;\n    this.updateState = () => {\n      if (this.radioGroup) {\n        this.checked = this.radioGroup.value === this.value;\n      }\n    };\n    this.onClick = () => {\n      this.checked = this.nativeInput.checked;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  /** @internal */\n  async setFocus(ev) {\n    // TODO(FW-2832): type (using Event triggers a build error due to conflict with Stencil Event import)\n    ev.stopPropagation();\n    ev.preventDefault();\n    this.el.focus();\n  }\n  /** @internal */\n  async setButtonTabindex(value) {\n    this.buttonTabindex = value;\n  }\n  connectedCallback() {\n    if (this.value === undefined) {\n      this.value = this.inputId;\n    }\n    const radioGroup = (this.radioGroup = this.el.closest('ion-radio-group'));\n    if (radioGroup) {\n      this.updateState();\n      addEventListener(radioGroup, 'ionChange', this.updateState);\n    }\n  }\n  disconnectedCallback() {\n    const radioGroup = this.radioGroup;\n    if (radioGroup) {\n      removeEventListener(radioGroup, 'ionChange', this.updateState);\n      this.radioGroup = null;\n    }\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'radio-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  render() {\n    const { inputId, disabled, checked, color, el, buttonTabindex } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    return (h(Host, { \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, \"aria-labelledby\": label ? labelId : null, role: \"radio\", tabindex: buttonTabindex, onFocus: this.onFocus, onBlur: this.onBlur, onClick: this.onClick, class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        interactive: true,\n        'radio-checked': checked,\n        'radio-disabled': disabled,\n      }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" }), h(\"div\", { class: \"radio-ripple\" })), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"radio\", checked: checked, disabled: disabled, tabindex: \"-1\", id: inputId, ref: (nativeEl) => (this.nativeInput = nativeEl) })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"color\": [\"emitStyle\"],\n    \"checked\": [\"emitStyle\"],\n    \"disabled\": [\"emitStyle\"]\n  }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n  ios: radioIosCss,\n  md: radioMdCss\n};\n\nconst RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    this.setRadioTabindex = (value) => {\n      const radios = this.getRadios();\n      // Get the first radio that is not disabled and the checked one\n      const first = radios.find((radio) => !radio.disabled);\n      const checked = radios.find((radio) => radio.value === value && !radio.disabled);\n      if (!first && !checked) {\n        return;\n      }\n      // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n      const focusable = checked || first;\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      /**\n       * The Radio Group component mandates that only one radio button\n       * within the group can be selected at any given time. Since `ion-radio`\n       * is a shadow DOM component, it cannot natively perform this behavior\n       * using the `name` attribute.\n       */\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        }\n        else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n  }\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionChange.emit({ value });\n  }\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n    if (header) {\n      const label = (this.label = header.querySelector('ion-label'));\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n  onKeydown(ev) {\n    // TODO(FW-2832): type\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = this.getRadios().filter((radio) => !radio.disabled);\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex((radio) => radio === ev.target);\n      const current = radios[index];\n      let next;\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\n        next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n      }\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\n        next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n      }\n      if (next && radios.includes(next)) {\n        next.setFocus(ev);\n        if (!inSelectPopover) {\n          this.value = next.value;\n        }\n      }\n      // Update the radio group value when a user presses the\n      // space bar on top of a selected radio\n      if (['Space'].includes(ev.code)) {\n        this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\n        // Prevent browsers from jumping\n        // to the bottom of the screen\n        ev.preventDefault();\n      }\n    }\n  }\n  render() {\n    const { label, labelId } = this;\n    const mode = getIonMode(this);\n    return h(Host, { role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, onClick: this.onClick, class: mode });\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}