{"version":3,"file":"4950.6410c61643243b6d.js","mappings":"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","names":["focusableQueryString","Menu","constructor","hostRef","registerInstance","this","ionWillOpen","createEvent","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","didLoad","operationCancelled","isAnimating","_isOpen","inheritedAttributes","handleFocus","ev","lastOverlay","getPresentedOverlay","document","contains","el","trapKeyboardFocus","isPaneVisible","isEndSide","contentId","undefined","menuId","type","disabled","side","swipeGesture","maxEdgeStart","typeChanged","oldType","contentEl","classList","remove","add","removeAttribute","menuInnerEl","animation","disabledChanged","updateState","emit","open","sideChanged","swipeGestureChanged","connectedCallback","_this","_asyncToGenerator","customElements","whenDefined","config","get","content","getElementById","console","error","menuController","_register","menuChanged","gesture","Promise","resolve","then","__webpack_require__","bind","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","componentWillLoad","inheritAriaAttributes","componentDidLoad","_this2","disconnectedCallback","_this3","close","destroy","_unregister","onSplitPaneChanged","target","closest","detail","isPane","onBackdropClick","timeStamp","composedPath","includes","preventDefault","stopPropagation","onKeydown","key","isOpen","isActive","_isActive","animated","setOpen","toggle","shouldOpen","_setOpen","focusFirstDescendant","firstInput","querySelector","focus","focusLastDescendant","inputs","Array","from","querySelectorAll","lastInput","length","doc","lastFocus","activeElement","_this4","beforeAnimation","loadAnimation","startAnimation","afterAnimation","_this5","width","offsetWidth","isEndSide$1","_createAnimation","getBoolean","duration","fill","_this6","isReversed","mode","getIonMode","easing","easingReverse","ani","direction","play","sync","getDirection","canSwipe","_getOpenSync","checkEdgeSide","window","currentX","progressStart","assert","stepValue","computeDelta","deltaX","progressStep","delta","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","getTimeGivenProgression","clamp","playTo","onFinish","oneTimeCallback","progressEnd","SHOW_MENU","setAttribute","backdropEl","SHOW_BACKDROP","MENU_CONTENT_OPEN","block","_a","unblock","addEventListener","stop","removeEventListener","enable","render","h","Host","role","class","p","part","ref","tappable","getElement","watchers","Math","max","win","posX","innerWidth","style","ios","md","updateVisibility","_ref","menu","menuEl","_x","apply","arguments","MenuButton","_this7","onClick","visible","color","autoHide","visibilityChanged","_this8","menuIcon","menuOutline","menuSharp","hidden","attrs","ariaLabel","createColorClasses","a","button","hostContext","Object","assign","icon","lazy","MenuToggle","_this9","t","selector","cssClassMap","getClassMap","classes","map","getClassList","isArray","split","filter","c","trim","forEach","SCHEME","openURL","url","test","router","push","_x2","_x3","_x4"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js","./node_modules/@ionic/core/dist/esm/theme-01f3f29c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, H as Host, f as getElement } from './index-b7d870cf.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-fe2083dc.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-1bf57181.js';\nimport { p as isEndSide, i as inheritAriaAttributes, o as assert, l as clamp } from './helpers-ae653409.js';\nimport { m as menuController } from './index-1193f005.js';\nimport { q as getPresentedOverlay } from './overlays-b33f6bca.js';\nimport { c as config, b as getIonMode } from './ionic-global-1f99b929.js';\nimport { c as createColorClasses, h as hostContext } from './theme-01f3f29c.js';\nimport { u as menuOutline, v as menuSharp } from './index-c132c5f1.js';\nimport './index-a5d50daf.js';\nimport './hardware-back-button-b2bc76db.js';\nimport './index-9b0d46f4.js';\nimport './animation-dde8cc0d.js';\nimport './framework-delegate-bc1fd82a.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}@supports (inset-inline-start: 0){:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}}@supports not (inset-inline-start: 0){:host(.menu-side-start) .menu-inner{left:0;right:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{left:unset;right:unset;left:auto;right:0}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{left:unset;right:unset;left:auto;right:0}}}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}@supports (inset-inline-start: 0){:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}}@supports not (inset-inline-start: 0){:host(.menu-side-end) .menu-inner{left:auto;right:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{left:unset;right:unset;left:0;right:auto}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{left:unset;right:unset;left:0;right:auto}}}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}@supports (inset-inline-start: 0){:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}}@supports not (inset-inline-start: 0){:host(.menu-side-start) .menu-inner{left:0;right:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{left:unset;right:unset;left:auto;right:0}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{left:unset;right:unset;left:auto;right:0}}}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}@supports (inset-inline-start: 0){:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}}@supports not (inset-inline-start: 0){:host(.menu-side-end) .menu-inner{left:auto;right:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{left:unset;right:unset;left:0;right:auto}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{left:unset;right:unset;left:0;right:auto}}}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]), input:not([type=hidden]):not([tabindex^=\"-\"]), textarea:not([tabindex^=\"-\"]), button:not([tabindex^=\"-\"]), select:not([tabindex^=\"-\"]), .ion-focusable:not([tabindex^=\"-\"])';\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.didLoad = false;\n        /**\n         * Flag used to determine if an open/close\n         * operation was cancelled. For example, if\n         * an app calls \"menu.open\" then disables the menu\n         * part way through the animation, then this would\n         * be considered a cancelled operation.\n         */\n        this.operationCancelled = false;\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.inheritedAttributes = {};\n        this.handleFocus = (ev) => {\n            /**\n             * Overlays have their own focus trapping listener\n             * so we do not want the two listeners to conflict\n             * with each other. If the top-most overlay that is\n             * open does not contain this ion-menu, then ion-menu's\n             * focus trapping should not run.\n             */\n            const lastOverlay = getPresentedOverlay(document);\n            if (lastOverlay && !lastOverlay.contains(this.el)) {\n                return;\n            }\n            this.trapKeyboardFocus(ev, document);\n        };\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        this.contentId = undefined;\n        this.menuId = undefined;\n        this.type = undefined;\n        this.disabled = false;\n        this.side = 'start';\n        this.swipeGesture = true;\n        this.maxEdgeStart = 50;\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen,\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        this.animation = undefined;\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        // TODO: connectedCallback is fired in CE build\n        // before WC is defined. This needs to be fixed in Stencil.\n        if (typeof customElements !== 'undefined' && customElements != null) {\n            await customElements.whenDefined('ion-menu');\n        }\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n        if (content === null) {\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        if (this.el.contains(content)) {\n            console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.menuChanged();\n        this.gesture = (await import('./index-2cf77112.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            blurOnStart: true,\n            canStart: (ev) => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    async componentDidLoad() {\n        this.didLoad = true;\n        this.menuChanged();\n        this.updateState();\n    }\n    menuChanged() {\n        /**\n         * Inform dependent components such as ion-menu-button\n         * that the menu is ready. Note that we only want to do this\n         * once the menu has been rendered which is why we check for didLoad.\n         */\n        if (this.didLoad) {\n            this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        }\n    }\n    async disconnectedCallback() {\n        /**\n         * The menu should be closed when it is\n         * unmounted from the DOM.\n         * This is an async call, so we need to wait for\n         * this to finish otherwise contentEl\n         * will not have MENU_CONTENT_OPEN removed.\n         */\n        await this.close(false);\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        const { target } = ev;\n        const closestSplitPane = this.el.closest('ion-split-pane');\n        /**\n         * Menu listens on the body for \"ionSplitPaneVisible\".\n         * However, this means the callback will run any time\n         * a SplitPane changes visibility. As a result, we only want\n         * Menu's visibility state to update if its parent SplitPane\n         * changes visibility.\n         */\n        if (target !== closestSplitPane) {\n            return;\n        }\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    onKeydown(ev) {\n        if (ev.key === 'Escape') {\n            this.close();\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    focusFirstDescendant() {\n        const { el } = this;\n        const firstInput = el.querySelector(focusableQueryString);\n        if (firstInput) {\n            firstInput.focus();\n        }\n        else {\n            el.focus();\n        }\n    }\n    focusLastDescendant() {\n        const { el } = this;\n        const inputs = Array.from(el.querySelectorAll(focusableQueryString));\n        const lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\n        if (lastInput) {\n            lastInput.focus();\n        }\n        else {\n            el.focus();\n        }\n    }\n    trapKeyboardFocus(ev, doc) {\n        const target = ev.target;\n        if (!target) {\n            return;\n        }\n        /**\n         * If the target is inside the menu contents, let the browser\n         * focus as normal and keep a log of the last focused element.\n         */\n        if (this.el.contains(target)) {\n            this.lastFocus = target;\n        }\n        else {\n            /**\n             * Otherwise, we are about to have focus go out of the menu.\n             * Wrap the focus to either the first or last element.\n             */\n            /**\n             * Once we call `focusFirstDescendant`, another focus event\n             * will fire, which will cause `lastFocus` to be updated\n             * before we can run the code after that. We cache the value\n             * here to avoid that.\n             */\n            this.focusFirstDescendant();\n            /**\n             * If the cached last focused element is the same as the now-\n             * active element, that means the user was on the first element\n             * already and pressed Shift + Tab, so we need to wrap to the\n             * last descendant.\n             */\n            if (this.lastFocus === doc.activeElement) {\n                this.focusLastDescendant();\n            }\n        }\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        /**\n         * If the animation was cancelled then\n         * return false because the operation\n         * did not succeed.\n         */\n        if (this.operationCancelled) {\n            this.operationCancelled = false;\n            return false;\n        }\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        const isEndSide$1 = isEndSide(this.side);\n        if (width === this.width && this.animation !== undefined && isEndSide$1 === this.isEndSide) {\n            return;\n        }\n        this.width = width;\n        this.isEndSide = isEndSide$1;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        const animation = (this.animation = await menuController._createAnimation(this.type, this));\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction(isReversed ? 'reverse' : 'normal')\n            .easing(isReversed ? easingReverse : easing);\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n        /**\n         * We run this after the play invocation\n         * instead of using ani.onFinish so that\n         * multiple onFinish callbacks do not get\n         * run if an animation is played, stopped,\n         * and then played again.\n         */\n        if (ani.getDirection() === 'reverse') {\n            ani.direction('normal');\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, this._isOpen ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide\n                ? shouldCompleteRight\n                : shouldCompleteLeft\n            : isEndSide\n                ? shouldCompleteLeft\n                : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = shouldComplete ? 0.001 : -0.001;\n        /**\n         * stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         */\n        const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue +=\n            getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        /**\n         * We add a tabindex here so that focus trapping\n         * still works even if the menu does not have\n         * any focusable elements slotted inside. The\n         * focus trapping utility will fallback to focusing\n         * the menu so focus does not leave when the menu\n         * is open.\n         */\n        this.el.setAttribute('tabindex', '0');\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        // add css class and hide content behind menu from screen readers\n        if (this.contentEl) {\n            this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            /**\n             * When the menu is open and overlaying the main\n             * content, the main content should not be announced\n             * by the screenreader as the menu is the main\n             * focus. This is useful with screenreaders that have\n             * \"read from top\" gestures that read the entire\n             * page from top to bottom when activated.\n             * This should be done before the animation starts\n             * so that users cannot accidentally scroll\n             * the content while dragging a menu open.\n             */\n            this.contentEl.setAttribute('aria-hidden', 'true');\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        var _a;\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // emit open event\n            this.ionDidOpen.emit();\n            /**\n             * Move focus to the menu to prepare focus trapping, as long as\n             * it isn't already focused. Use the host element instead of the\n             * first descendant to avoid the scroll position jumping around.\n             */\n            const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n            if (focusedMenu !== this.el) {\n                this.el.focus();\n            }\n            // start focus trapping\n            document.addEventListener('focus', this.handleFocus, true);\n        }\n        else {\n            // remove css classes and unhide content from screen readers\n            this.el.classList.remove(SHOW_MENU);\n            /**\n             * Remove tabindex from the menu component\n             * so that is cannot be tabbed to.\n             */\n            this.el.removeAttribute('tabindex');\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n                /**\n                 * Remove aria-hidden so screen readers\n                 * can announce the main content again\n                 * now that the menu is not the main focus.\n                 */\n                this.contentEl.removeAttribute('aria-hidden');\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n            // undo focus trapping so multiple menus don't collide\n            document.removeEventListener('focus', this.handleFocus, true);\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        /**\n         * If the menu is disabled but it is still open\n         * then we should close the menu immediately.\n         * Additionally, if the menu is in the process\n         * of animating {open, close} and the menu is disabled\n         * then it should still be closed immediately.\n         */\n        if (!isActive) {\n            /**\n             * It is possible to disable the menu while\n             * it is mid-animation. When this happens, we\n             * need to set the operationCancelled flag\n             * so that this._setOpen knows to return false\n             * and not run the \"afterAnimation\" callback.\n             */\n            if (this.isAnimating) {\n                this.operationCancelled = true;\n            }\n            /**\n             * If the menu is disabled then we should\n             * forcibly close the menu even if it is open.\n             */\n            this.afterAnimation(false);\n        }\n    }\n    render() {\n        const { type, disabled, isPaneVisible, inheritedAttributes, side } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                [`menu-side-${side}`]: true,\n                'menu-pane-visible': isPaneVisible,\n            } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n    ios: menuIosCss,\n    md: menuMdCss\n};\n\n// Given a menu, return whether or not the menu toggle should be visible\nconst updateVisibility = async (menu) => {\n    const menuEl = await menuController.get(menu);\n    return !!(menuEl && (await menuEl.isActive()));\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;min-height:32px;font-size:clamp(31px, 1.9375rem, 38.13px)}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\n\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:3rem;height:3rem;font-size:1.5rem}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inheritedAttributes = {};\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n        this.visible = false;\n        this.color = undefined;\n        this.disabled = false;\n        this.menu = undefined;\n        this.autoHide = true;\n        this.type = 'button';\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled, inheritedAttributes } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? menuOutline : menuSharp);\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type,\n        };\n        const ariaLabel = inheritedAttributes['aria-label'] || 'menu';\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                button: true,\n                'menu-button-hidden': hidden,\n                'menu-button-disabled': disabled,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    get el() { return getElement(this); }\n};\nMenuButton.style = {\n    ios: menuButtonIosCss,\n    md: menuButtonMdCss\n};\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n        this.visible = false;\n        this.menu = undefined;\n        this.autoHide = true;\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n};\nMenuToggle.style = menuToggleCss;\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}