{"version":3,"sources":["webpack:///src/app/page/emulation/context-menu/context-menu.component.ts","webpack:///src/app/service/event-handling.service.ts","webpack:///src/app/page/emulation/context-menu/context-menu.component.html","webpack:///src/app/page/emulation/emulation.page.html","webpack:///src/app/page/emulation/emulation-routing.module.ts","webpack:///src/app/page/emulation/emulation.page.ts","webpack:///src/app/page/emulation/emulation.module.ts"],"names":["ContextMenuComponent","EventHandlingService","emulationService","onClick","showHelp","this","reset","resetNoExtensions","resetHard","engagePower","power","help","canvasDisplayService","ngZone","handleMouseDown","e","button","coords","eventToPalmCoordinates","area","determineArea","interactionMouse","handlePointerMove","determineButton","handleButtonDown","handleMouseMove","buttons","handeMouseUp","interaction","handleButtonUp","handlePointerUp","handleTouchStart","i","changedTouches","length","touch","item","interactionsTouch","set","identifier","cancelable","preventDefault","handleTouchMove","get","handleTouchEnd","handleKeyDown","isToggleGameMode","run","gameMode","buttonFromEvent","keyCode","keyCodeFromEvent","handleKeyUp","key","activeButtons","btn","clear","drawButtons","Map","Set","canvas","release","runOutsideAngular","addEventListener","window","removeEventListener","clip","contentX","contentY","contentWidth","contentHeight","bb","getBoundingClientRect","width","height","top","left","x","Math","floor","clientX","y","clientY","has","add","Array","from","values","ctrlKey","shiftKey","isGameModeActive","charCodeAt","EmulationPage","EmulationPageRoutingModule","EmulationPageModule","routes","path","component","emulationState","storageService","eventHandlingService","kvsService","audioService","popoverController","modalController","alertService","fileService","loadingController","snapshotService","onSnapshot","statistics","kvs","showStatistics","drawStatistics","getStatistics","onNewFrame","drawEmulationCanvas","canvasWidth","devicePixelRatio","canvasHeight","session","getCurrentSession","storedSession","getSession","initialize","canvasRef","nativeElement","then","getCanvas","newFrameEvent","addHandler","snapshotEvent","resume","bind","pause","removeHandler","popover","create","event","backdropDismiss","showBackdrop","componentProps","dismiss","present","openFiles","processFilesForInstallation","modal","url","message","Help","isRunning","isPowerOff","isUiInitialized","name","isInitialized","isMuted","volume","muted","mute","files","loader","waitForPendingSnapshot","filesSuccess","filesFail","file","test","installFile","content","push","Promise","r","setTimeout","slice","join","header","installFiles","openContextMenu","forChild"],"mappings":"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","file":"x","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\nimport { EmulationService } from './../../../service/emulation.service';\n\n@Component({\n    selector: 'app-emulation-context-menu',\n    templateUrl: './context-menu.component.html',\n    styleUrls: ['./context-menu.component.scss'],\n})\nexport class ContextMenuComponent implements OnInit {\n    constructor(public emulationService: EmulationService) {}\n\n    ngOnInit(): void {}\n\n    reset(): void {\n        this.emulationService.reset();\n\n        this.onClick();\n    }\n\n    resetNoExtensions(): void {\n        this.emulationService.resetNoExtensions();\n\n        this.onClick();\n    }\n\n    resetHard(): void {\n        this.emulationService.resetHard();\n\n        this.onClick();\n    }\n\n    power(): void {\n        this.emulationService.engagePower();\n\n        this.onClick();\n    }\n\n    help(): void {\n        this.showHelp();\n\n        this.onClick();\n    }\n\n    @Input()\n    onClick: () => void = () => undefined;\n\n    @Input()\n    showHelp: () => void = () => undefined;\n}\n","import { BORDER, CanvasDisplayService, HEIGHT, SCALE, WIDTH } from './canvas-display.service';\nimport { Injectable, NgZone } from '@angular/core';\n\nimport { EmulationService } from './emulation.service';\nimport { PalmButton } from '../helper/Cloudpilot';\n\nconst enum Area {\n    silkscreen,\n    buttons,\n}\n\ninterface InteractionSilkscreen {\n    area: Area.silkscreen;\n}\n\ninterface InteractionButton {\n    area: Area.buttons;\n    button: PalmButton;\n}\n\ntype Interaction = InteractionSilkscreen | InteractionButton;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventHandlingService {\n    constructor(\n        private emulationService: EmulationService,\n        private canvasDisplayService: CanvasDisplayService,\n        private ngZone: NgZone\n    ) {}\n\n    bind(canvas: HTMLCanvasElement): void {\n        if (this.canvas) {\n            this.release();\n        }\n\n        this.canvas = canvas;\n\n        this.ngZone.runOutsideAngular(() => {\n            canvas.addEventListener('mousedown', this.handleMouseDown);\n            window.addEventListener('mouseup', this.handeMouseUp);\n            window.addEventListener('mousemove', this.handleMouseMove);\n\n            canvas.addEventListener('touchstart', this.handleTouchStart);\n            canvas.addEventListener('touchmove', this.handleTouchMove);\n            canvas.addEventListener('touchend', this.handleTouchEnd);\n            canvas.addEventListener('touchcancel', this.handleTouchEnd);\n\n            window.addEventListener('keydown', this.handleKeyDown);\n            window.addEventListener('keyup', this.handleKeyUp);\n        });\n    }\n\n    release(): void {\n        if (!this.canvas) return;\n\n        this.canvas.removeEventListener('mousedown', this.handleMouseDown);\n        window.removeEventListener('mouseup', this.handeMouseUp);\n        window.removeEventListener('mousemove', this.handleMouseMove);\n\n        this.canvas.removeEventListener('touchstart', this.handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this.handleTouchMove);\n        this.canvas.removeEventListener('touchend', this.handleTouchEnd);\n        this.canvas.removeEventListener('touchcancel', this.handleTouchEnd);\n\n        window.removeEventListener('keydown', this.handleKeyDown);\n        window.removeEventListener('keyup', this.handleKeyUp);\n\n        for (const button of this.activeButtons) {\n            this.handleButtonUp(button);\n        }\n\n        this.activeButtons.clear();\n        this.interactionsTouch.clear();\n        this.interactionMouse = undefined;\n\n        this.canvas = undefined;\n    }\n\n    isGameMode(): boolean {\n        return this.gameMode;\n    }\n\n    private handleMouseDown = (e: MouseEvent): void => {\n        if (e.button !== 0) return;\n\n        const coords = this.eventToPalmCoordinates(e);\n        if (!coords) return;\n\n        const area = this.determineArea(coords);\n\n        if (area === Area.silkscreen) {\n            this.interactionMouse = { area };\n            this.emulationService.handlePointerMove(...coords);\n        } else {\n            const button = this.determineButton(coords);\n            this.interactionMouse = { area, button };\n\n            this.handleButtonDown(button);\n        }\n    };\n\n    private handleMouseMove = (e: MouseEvent): void => {\n        // tslint:disable-next-line: no-bitwise\n        if (!(e.buttons & 0x01) || this.interactionMouse?.area !== Area.silkscreen) return;\n\n        const coords = this.eventToPalmCoordinates(e, true);\n        if (!coords) return;\n\n        this.emulationService.handlePointerMove(...coords);\n    };\n\n    private handeMouseUp = (e: MouseEvent): void => {\n        if (e.button !== 0) return;\n\n        const interaction = this.interactionMouse;\n        this.interactionMouse = undefined;\n\n        switch (interaction?.area) {\n            case Area.buttons:\n                this.handleButtonUp(interaction.button);\n\n                break;\n\n            case Area.silkscreen:\n                this.emulationService.handlePointerUp();\n\n                break;\n        }\n    };\n\n    private handleTouchStart = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!touch) continue;\n\n            const coords = this.eventToPalmCoordinates(touch);\n            if (!coords) continue;\n\n            const area = this.determineArea(coords);\n            if (area === Area.silkscreen) {\n                this.interactionsTouch.set(touch.identifier, { area });\n                this.emulationService.handlePointerMove(...coords);\n            } else {\n                const button = this.determineButton(coords);\n                this.interactionsTouch.set(touch.identifier, { area, button });\n\n                this.handleButtonDown(button);\n            }\n        }\n\n        if (e.cancelable !== false) e.preventDefault();\n    };\n\n    private handleTouchMove = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!touch) continue;\n\n            if (this.interactionsTouch.get(touch.identifier)?.area === Area.silkscreen) {\n                const coords = this.eventToPalmCoordinates(touch, true);\n                if (!coords) continue;\n\n                this.emulationService.handlePointerMove(...coords);\n            }\n        }\n\n        if (e.cancelable !== false) e.preventDefault();\n    };\n\n    private handleTouchEnd = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!touch) continue;\n\n            const interaction = this.interactionsTouch.get(touch.identifier);\n            this.interactionsTouch.delete(touch.identifier);\n\n            switch (interaction?.area) {\n                case Area.buttons:\n                    this.handleButtonUp(interaction.button);\n\n                    break;\n\n                case Area.silkscreen:\n                    this.emulationService.handlePointerUp();\n\n                    break;\n            }\n        }\n\n        if (e.cancelable !== false) e.preventDefault();\n    };\n\n    private handleKeyDown = (e: KeyboardEvent): void => {\n        if (this.isToggleGameMode(e)) {\n            e.preventDefault();\n\n            this.ngZone.run(() => (this.gameMode = !this.gameMode));\n\n            return;\n        }\n\n        const button = this.buttonFromEvent(e);\n        if (button !== undefined) {\n            this.handleButtonDown(button);\n            e.preventDefault();\n\n            return;\n        }\n\n        const keyCode = this.keyCodeFromEvent(e);\n        if (keyCode !== undefined) {\n            this.emulationService.handleKeyDown(keyCode);\n            e.preventDefault();\n        }\n    };\n\n    private handleKeyUp = (e: KeyboardEvent): void => {\n        const button = this.buttonFromEvent(e);\n        if (button !== undefined) {\n            this.handleButtonUp(button);\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.key === 'Control') {\n            for (const btn of this.activeButtons) {\n                this.emulationService.handleButtonUp(btn);\n            }\n\n            this.activeButtons.clear();\n            this.canvasDisplayService.drawButtons([]);\n        }\n    };\n\n    private eventToPalmCoordinates(e: MouseEvent | Touch, clip = false): [number, number] | undefined {\n        if (!this.canvas) return;\n\n        const bb = this.canvas.getBoundingClientRect();\n\n        let contentX: number;\n        let contentY: number;\n        let contentWidth: number;\n        let contentHeight: number;\n\n        // CSS object-fit keeps the aspect ratio of the canvas content, but the canvas itself\n        // looses aspect and fills the container -> manually calculate the metrics for the content\n        if (bb.width / bb.height > WIDTH / HEIGHT) {\n            contentHeight = bb.height;\n            contentWidth = (WIDTH / HEIGHT) * bb.height;\n            contentY = bb.top;\n            contentX = bb.left + (bb.width - contentWidth) / 2;\n        } else {\n            contentWidth = bb.width;\n            contentHeight = (HEIGHT / WIDTH) * bb.width;\n            contentX = bb.left;\n            contentY = bb.top + (bb.height - contentHeight) / 2;\n        }\n\n        // Compensate for the border\n        let x = Math.floor((((e.clientX - contentX) / contentWidth) * WIDTH) / SCALE) - BORDER / SCALE;\n        let y = Math.floor((((e.clientY - contentY) / contentHeight) * HEIGHT) / SCALE) - BORDER / SCALE;\n\n        // The canvas layout inside the border is as follows:\n        //\n        // * 0 .. 159   : LCD\n        // * 160        : separator\n        // * 161 .. 220 : silkscreen\n        // * 221 .. 250 : buttons\n        //\n        // we map this to 160x250 lines by mapping the separator to the silkscreen\n\n        if (y >= 161) y -= 1;\n\n        if (clip) {\n            if (x < 0) x = 0;\n            if (x > 159) x = 159;\n            if (y < 0) y = 0;\n            if (y > 249) y = 249;\n        } else {\n            if (x < 0 || x >= 160 || y < 0 || y >= 250) return undefined;\n        }\n\n        return [x, y];\n    }\n\n    private determineArea([, y]: [number, number]): Area {\n        return y >= 220 ? Area.buttons : Area.silkscreen;\n    }\n\n    private determineButton([x, y]: [number, number]): PalmButton {\n        if (x >= 130) return PalmButton.notes;\n        if (x >= 100) return PalmButton.todo;\n        if (x >= 60) return y >= 236 ? PalmButton.down : PalmButton.up;\n        if (x >= 30) return PalmButton.phone;\n\n        return PalmButton.cal;\n    }\n\n    private handleButtonDown(button: PalmButton): void {\n        if (this.activeButtons.has(button)) return;\n\n        this.activeButtons.add(button);\n        this.emulationService.handleButtonDown(button);\n        this.canvasDisplayService.drawButtons(Array.from(this.activeButtons.values()));\n    }\n\n    private handleButtonUp(button: PalmButton): void {\n        if (!this.activeButtons.has(button)) return;\n\n        this.activeButtons.delete(button);\n        this.emulationService.handleButtonUp(button);\n        this.canvasDisplayService.drawButtons(Array.from(this.activeButtons.values()));\n    }\n\n    private isToggleGameMode(e: KeyboardEvent): boolean {\n        return (e.key === 'Shift' && e.ctrlKey) || (e.key === 'Control' && e.shiftKey);\n    }\n\n    private isGameModeActive(e: KeyboardEvent): boolean {\n        return (!this.gameMode && e.ctrlKey) || (this.gameMode && !e.ctrlKey);\n    }\n\n    private buttonFromEvent(e: KeyboardEvent): PalmButton | undefined {\n        switch (e.key) {\n            case 'PageUp':\n                return PalmButton.up;\n\n            case 'PageDown':\n                return PalmButton.down;\n        }\n\n        if (!this.isGameModeActive(e)) return;\n\n        switch (e.key) {\n            case 'w':\n            case 'i':\n            case 'ArrowUp':\n                return PalmButton.up;\n\n            case 's':\n            case 'k':\n            case 'ArrowDown':\n                return PalmButton.down;\n\n            case 'a':\n            case 'j':\n            case 'y':\n            case 'z':\n            case 'ArrowLeft':\n                return PalmButton.cal;\n\n            case 'q':\n            case 'u':\n            case 'x':\n                return PalmButton.phone;\n\n            case 'e':\n            case 'o':\n            case 'c':\n                return PalmButton.todo;\n\n            case 'd':\n            case 'l':\n            case 'v':\n            case 'ArrowRight':\n                return PalmButton.notes;\n        }\n\n        return undefined;\n    }\n\n    private keyCodeFromEvent(e: KeyboardEvent): number | undefined {\n        if (this.isGameModeActive(e)) return;\n\n        if (e.key.length === 1 && e.key.charCodeAt(0) <= 255) return e.key.charCodeAt(0);\n\n        switch (e.key) {\n            case 'ArrowLeft':\n                return 0x1c;\n\n            case 'ArrowRight':\n                return 0x1d;\n\n            case 'ArrowUp':\n                return 0x1e;\n\n            case 'ArrowDown':\n                return 0x1f;\n\n            case 'Backspace':\n                return 0x08;\n\n            case 'Tab':\n                return 0x09;\n\n            case 'Enter':\n                return 0x0a;\n\n            default:\n                return undefined;\n        }\n    }\n\n    private canvas: HTMLCanvasElement | undefined;\n    private interactionMouse: Interaction | undefined;\n    private interactionsTouch = new Map<number, Interaction>();\n    private activeButtons = new Set<PalmButton>();\n    private gameMode = false;\n}\n","<ion-list>\n  <ion-item button [detail]=\"false\" (click)=\"power()\" [disabled]=\"!emulationService.isRunning()\">\n    Power\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"reset()\" [disabled]=\"!emulationService.isRunning()\">\n    Reset\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"resetNoExtensions()\" [disabled]=\"!emulationService.isRunning()\">\n    Reset (no extensions)\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"resetHard()\" [disabled]=\"!emulationService.isRunning()\">\n    Hard reset\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"help()\">\n    Help\n  </ion-item>\n</ion-list>\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>{{title}}</ion-title>\n\n    <ion-buttons slot=\"end\">\n      <ion-button [disabled]=\"installFileDisabled\" (click)=\"installFiles()\">\n        <ion-icon name=\"download-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"openContextMenu($event)\">\n        <ion-icon name=\"ellipsis-vertical-outline\"></ion-icon>\n      </ion-button>\n\n      <ion-button *ngIf=\"isMuted && !isAudioOff\" (click)=\"mute(false)\">\n        <ion-icon name=\"volume-mute-outline\"></ion-icon>\n      </ion-button>\n      <ion-button *ngIf=\"!isMuted && !isAudioOff\" (click)=\"mute(true)\">\n        <ion-icon name=\"volume-high-outline\"></ion-icon>\n      </ion-button>\n      <ion-button *ngIf=\"eventHandlingService.isGameMode()\" (click)=\"showGameModeHint()\">\n        <ion-icon name=\"game-controller-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <div class=\"container running-session\" [style.display]=\"emulationState.getCurrentSession() ? undefined : 'none'\">\n    <canvas #canvas [width]=\"canvasWidth\" [height]=\"canvasHeight\" [style.width]=\"cssWidth\" [style.height]=\"cssHeight\"\n      [style.display]=\"emulationState.getCurrentSession() ? 'block' : 'none'\"></canvas>\n  </div>\n\n  <div class=\"container no-session\" *ngIf=\" !emulationState.getCurrentSession()\">\n    <div>No session selected</div>\n  </div>\n\n</ion-content>\n","import { RouterModule, Routes } from '@angular/router';\n\nimport { EmulationPage } from './emulation.page';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: EmulationPage,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class EmulationPageRoutingModule {}\n","import { AfterViewInit, Component, ElementRef, NgZone, ViewChild } from '@angular/core';\nimport { CanvasDisplayService, HEIGHT, WIDTH } from './../../service/canvas-display.service';\nimport { FileDescriptor, FileService } from 'src/app/service/file.service';\nimport { LoadingController, ModalController, PopoverController } from '@ionic/angular';\n\nimport { AlertService } from 'src/app/service/alert.service';\nimport { AudioService } from './../../service/audio.service';\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\nimport { EmulationService } from './../../service/emulation.service';\nimport { EmulationStateService } from './../../service/emulation-state.service';\nimport { EventHandlingService } from './../../service/event-handling.service';\nimport { HelpComponent } from 'src/app/component/help/help.component';\nimport { KvsService } from './../../service/kvs.service';\nimport { SnapshotService } from './../../service/snapshot.service';\nimport { SnapshotStatistics } from './../../model/SnapshotStatistics';\nimport { StorageService } from './../../service/storage.service';\nimport { getStoredSession } from 'src/app/helper/storedSession';\n\n@Component({\n    selector: 'app-emulation',\n    templateUrl: './emulation.page.html',\n    styleUrls: ['./emulation.page.scss'],\n})\nexport class EmulationPage implements AfterViewInit {\n    constructor(\n        public emulationService: EmulationService,\n        public emulationState: EmulationStateService,\n        private storageService: StorageService,\n        public eventHandlingService: EventHandlingService,\n        private canvasDisplayService: CanvasDisplayService,\n        private kvsService: KvsService,\n        private audioService: AudioService,\n        private popoverController: PopoverController,\n        private modalController: ModalController,\n        private alertService: AlertService,\n        private fileService: FileService,\n        private loadingController: LoadingController,\n        private snapshotService: SnapshotService,\n        private ngZone: NgZone\n    ) {}\n\n    ngAfterViewInit(): void {}\n\n    get canvasWidth(): number {\n        return WIDTH;\n    }\n\n    get canvasHeight(): number {\n        return HEIGHT;\n    }\n\n    get cssWidth(): string {\n        return this.canvasWidth / devicePixelRatio + 'px';\n    }\n\n    get cssHeight(): string {\n        return this.canvasHeight / devicePixelRatio + 'px';\n    }\n\n    async ionViewDidEnter(): Promise<void> {\n        let session = this.emulationState.getCurrentSession();\n        const storedSession = getStoredSession();\n\n        if (!session && storedSession !== undefined) {\n            session = await this.storageService.getSession(storedSession);\n        }\n        this.canvasDisplayService.initialize(this.canvasRef.nativeElement, session).then(() => {\n            if (this.kvsService.kvs.showStatistics) this.canvasDisplayService.drawStatistics();\n        });\n        this.onNewFrame(this.emulationService.getCanvas());\n\n        this.emulationService.newFrameEvent.addHandler(this.onNewFrame);\n        this.snapshotService.snapshotEvent.addHandler(this.onSnapshot);\n\n        this.emulationService.resume();\n\n        this.eventHandlingService.bind(this.canvasRef.nativeElement);\n    }\n\n    ionViewWillLeave() {\n        this.emulationService.pause();\n\n        this.emulationService.newFrameEvent.removeHandler(this.onNewFrame);\n        this.snapshotService.snapshotEvent.removeHandler(this.onSnapshot);\n\n        this.eventHandlingService.release();\n    }\n\n    async openContextMenu(e: MouseEvent): Promise<void> {\n        const popover = await this.popoverController.create({\n            component: ContextMenuComponent,\n            event: e,\n            backdropDismiss: true,\n            showBackdrop: false,\n            componentProps: {\n                onClick: () => popover.dismiss(),\n                showHelp: () => this.showHelp(),\n            },\n        });\n\n        popover.present();\n    }\n\n    installFiles(): void {\n        this.fileService.openFiles(this.processFilesForInstallation.bind(this));\n    }\n\n    async showHelp(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: HelpComponent,\n            componentProps: {\n                url: 'assets/doc/emulation.md',\n            },\n        });\n        await modal.present();\n    }\n\n    async showGameModeHint(): Promise<void> {\n        await this.alertService.message(\n            'Game mode',\n            `\n                The keyboard is in game mode and controls the hardware buttons.\n                Press ctrl-shift in order to exit game mode.\n                <br/><br/>\n                Check the help page for a description of the different keyboard mappings.\n            `,\n            {\n                Help: () => this.showHelp(),\n            }\n        );\n    }\n\n    get installFileDisabled(): boolean {\n        return (\n            !this.emulationService.isRunning() ||\n            this.emulationService.isPowerOff() ||\n            !this.emulationService.isUiInitialized()\n        );\n    }\n\n    get title(): string {\n        return this.emulationState.getCurrentSession()?.name || '';\n    }\n\n    get isMuted(): boolean {\n        return !this.audioService.isInitialized() || this.audioService.isMuted();\n    }\n\n    get isAudioOff(): boolean {\n        return this.kvsService.kvs.volume <= 0;\n    }\n\n    mute(muted: boolean): void {\n        if (muted) {\n            this.audioService.mute(true);\n        } else {\n            if (this.audioService.isInitialized()) {\n                this.audioService.mute(false);\n            } else {\n                this.audioService.initialize();\n            }\n        }\n    }\n\n    private onSnapshot = (statistics: SnapshotStatistics): void => {\n        if (this.kvsService.kvs.showStatistics) {\n            this.canvasDisplayService.drawStatistics(statistics, this.emulationService.getStatistics());\n        }\n    };\n\n    private onNewFrame = (canvas: HTMLCanvasElement): void => {\n        this.canvasDisplayService.drawEmulationCanvas(canvas);\n    };\n\n    private async processFilesForInstallation(files: Array<FileDescriptor>): Promise<void> {\n        const loader = await this.loadingController.create({\n            message: 'Installing...',\n        });\n        await loader.present();\n        await this.emulationService.pause();\n        await this.snapshotService.waitForPendingSnapshot();\n\n        const filesSuccess: Array<string> = [];\n        const filesFail: Array<string> = [];\n\n        try {\n            for (const file of files) {\n                if (!/\\.(prc|pdb)$/i.test(file.name)) {\n                    filesFail.push(file.name);\n\n                    continue;\n                }\n\n                if ((await this.emulationService.installFile(file.content)) === 0) {\n                    filesSuccess.push(file.name);\n                } else {\n                    filesFail.push(file.name);\n                }\n\n                await new Promise((r) => setTimeout(r, 0));\n            }\n        } finally {\n            loader.dismiss();\n\n            this.emulationService.resume();\n        }\n\n        let message: string;\n\n        switch (filesSuccess.length) {\n            case 0:\n                message = '';\n                break;\n\n            case 1:\n                message = `Installation of ${filesSuccess[0]} successful.`;\n                break;\n\n            default:\n                message = `Installation of ${filesSuccess.length} files successful.`;\n                break;\n        }\n\n        if (filesFail.length > 0) message += '<br/><br/>';\n\n        switch (filesFail.length) {\n            case 0:\n                break;\n\n            case 1:\n                message += `Installation of ${filesFail[0]} failed.`;\n                break;\n\n            default:\n                message += `Installation of ${filesFail\n                    .slice(0, filesFail.length > 3 ? 3 : filesFail.length - 1)\n                    .join(', ')} and ${\n                    filesFail.length > 3 ? filesFail.length - 3 + ' more files' : filesFail[filesFail.length - 1]\n                } failed.`;\n\n                break;\n        }\n\n        let header;\n\n        if (filesFail.length === 0) {\n            header = 'Installation successful';\n        } else if (filesSuccess.length === 0) {\n            header = 'Installation failed';\n        } else {\n            header = 'Installation errors';\n        }\n\n        this.alertService.message(header, message);\n    }\n\n    @ViewChild('canvas') private canvasRef!: ElementRef<HTMLCanvasElement>;\n}\n","import { CommonModule } from '@angular/common';\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\nimport { EmulationPage } from './emulation.page';\nimport { EmulationPageRoutingModule } from './emulation-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { SharedComponentModule } from './../../component/shared-component.module';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, IonicModule, EmulationPageRoutingModule, SharedComponentModule],\n    declarations: [EmulationPage, ContextMenuComponent],\n})\nexport class EmulationPageModule {}\n"]}