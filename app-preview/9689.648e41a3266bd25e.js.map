{"version":3,"file":"9689.648e41a3266bd25e.js","mappings":"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","names":["isSameDay","baseParts","compareParts","month","day","year","isBefore","isAfter","warnIfValueOutOfBounds","value","min","max","printIonWarning","JSON","stringify","getNumDaysInMonth","isLeapYear","twoDigit","val","undefined","Math","abs","slice","convertDataToISO","data","rtn","fourDigit","hour","minute","t","tzOffset","floor","convert12HourTo24Hour","ampm","subtractDays","refParts","numDays","Error","workingParts","daysInMonth","addDays","getPreviousMonth","numDaysInMonth","getNextMonth","changeYear","yearDelta","getInternalHourValue","use24Hour","getToday","date","Date","getTimezoneOffset","setMinutes","getMinutes","toISOString","minutes","hour12","hour23","getFormattedTime","getFormattedHour","get12HourTime","addTimePadding","toUpperCase","getFormattedAMPM","valueToString","toString","length","generateDayAriaLabel","locale","today","labelString","Intl","DateTimeFormat","weekday","timeZone","format","ISO_8601_REGEXP","TIME_REGEXP","convertToArrayOfNumbers","input","values","processedInput","replace","split","Array","isArray","map","num","parseInt","filter","isFinite","parseDate","parse","exec","e","unshift","i","second","millisecond","isDayDisabled","minParts","maxParts","dayValues","includes","isMonthDisabled","refYear","isYearDisabled","Datetime","constructor","hostRef","registerInstance","this","ionCancel","createEvent","ionChange","ionFocus","ionBlur","ionStyle","inputId","datetimeIds","overlayIsPresenting","highlightActiveParts","todayParts","prevPresentation","showMonthAndYear","activeParts","isPresented","isTimePopoverOpen","color","name","disabled","readonly","presentation","cancelText","doneText","clearText","firstDayOfWeek","showDefaultTitle","showDefaultButtons","showClearButton","showDefaultTimeLabel","size","closeParentOverlay","popoverOrModal","el","closest","dismiss","setWorkingParts","parts","Object","assign","setActiveParts","querySelector","confirm","getCalendarBodyEl","_a","calendarBodyRef","shadowRoot","initializeKeyboardListeners","root","currentMonth","mo","MutationObserver","ev","record","oldValue","classList","contains","focusWorkingDay","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","getAttribute","dayOfWeek","getPartsFromCalendarDay","partsToFocus","key","preventDefault","getNextWeek","getPreviousWeek","getNextDay","getPreviousDay","getStartOfWeek","getEndOfWeek","shiftKey","getPreviousYear","getNextYear","requestAnimationFrame","padding","querySelectorAll","dayEl","focus","processMinParts","processMaxParts","initializeCalendarIOListeners","mode","getIonMode","months","startMonth","workingMonth","endMonth","endIO","startIO","writeTask","scrollLeft","clientWidth","isRTL","ioCallback","callbackType","entries","refIO","refMonth","refMonthFn","isIntersecting","intersectionRatio","navigator","maxTouchPoints","style","setProperty","destroyCalendarIO","raf","removeProperty","threshold","IntersectionObserver","rootMargin","destroyInteractionListeners","initializeOverlayListener","overlay","overlayListener","destroyOverlayListener","removeEventListener","processValue","valueToProcess","dateParts","clampDate","onFocus","emit","onBlur","hasValue","nextMonth","scrollTo","top","left","offsetWidth","behavior","prevMonth","toggleMonthAndYearView","disabledChanged","emitStyle","minChanged","maxChanged","yearValuesChanged","parsedYearValues","yearValues","monthValuesChanged","parsedMonthValues","monthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","hourValues","minuteValuesChanged","parsedMinuteValues","minuteValues","activePartsChanged","activePartsClone","valueChanged","valueDateParts","closeOverlay","isCalendarPicker","reset","startDate","cancel","connectedCallback","clearFocusVisible","startFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","visibleIO","add","hiddenIO","remove","getElementRoot","stopPropagation","componentDidRender","componentWillLoad","interactive","datetime","renderFooter","clearButtonClick","h","class","id","onClick","renderYearView","calendarYears","processedYears","minYear","years","push","getCalendarYears","showMonth","showYear","processedMonths","forEach","processedMonth","monthString","text","maxMonth","getPickerMonths","columnOrder","formatToParts","type","showMonthFirst","items","onIonChange","detail","renderCalendarHeader","expandedIcon","chevronDown","caretUpSharp","collapsedIcon","chevronForward","caretDownSharp","prevMonthDisabled","isPrevMonthDisabled","nextMonthDisabled","isNextMonthDisabled","button","lines","getMonthAndYear","icon","lazy","slot","chevronBack","flipRtl","intl","daysOfWeek","currentDate","setDate","getDate","getDaysOfWeek","d","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","swipeDisabled","firstOfMonth","getDay","offset","days","getDaysOfMonth","dateObject","index","isDateEnabled","referenceParts","isActive","isToday","ariaLabel","ariaSelected","getCalendarDayState","isCalDayDisabled","printIonError","tabindex","renderCalendarBody","ref","renderCalendar","renderTimeLabel","renderTimePicker","hoursItems","minutesItems","ampmItems","numericInput","currentParts","newAMPM","currentAMPM","newHour","calculateHourFromAMPM","renderTimeOverlay","r","o","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","alignment","translucent","overlayIndex","arrow","onWillPresent","col","scrollActiveItemIntoView","keyboardEvents","renderTime","timeOnlyPresentation","hourCycle","formatted","options","resolvedOptions","find","p","is24Hour","hours","am","pm","processedHours","processedMinutes","isAMAllowed","isPMAllowed","isPastMinHour","generateTime","renderCalendarViewHeader","getMonthAndDay","renderDatetime","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","renderHiddenInput","Host","createColorClasses","getElement","watchers","ios","md","iosEnterAnimation","baseEl","baseAnimation","createAnimation","backdropAnimation","wrapperAnimation","addElement","fromTo","beforeStyles","afterClearStyles","easing","duration","addAnimation","iosLeaveAnimation","Picker","didPresent","willPresent","willDismiss","didDismiss","presented","keyboardClose","buttons","columns","showBackdrop","backdropDismiss","animated","onBackdropTap","BACKDROP","dispatchCancelHandler","isCancel","role","cancelButton","b","callButtonHandler","prepareOverlay","durationTimeout","setTimeout","clearTimeout","onDidDismiss","eventMethod","getColumn","Promise","resolve","column","buttonClick","getSelected","safeCall","handler","selected","selectedColumn","selectedIndex","columnIndex","htmlAttributes","zIndex","getClassMap","cssClass","onIonBackdropTap","onIonPickerWillDismiss","visible","tappable","buttonWrapperClass","buttonClass","c","PickerColumnCmp","ionPickerColChange","optHeight","rotateFactor","scaleFactor","velocity","y","noAnimate","colChanged","refresh","pickerRotateFactor","pickerScaleFactor","gesture","createGesture","gestureName","gesturePriority","passive","onStart","onMove","onEnd","enable","tmrId","colEl","optsEl","firstElementChild","clientHeight","cancelAnimationFrame","rafId","emitColChange","setSelected","update","saveY","translateY","translateZ","indexForY","durationStr","scaleStr","children","opt","optOffset","transform","rotateX","transitionDuration","w","PICKER_OPT_SELECTED","prevSelected","lastIndex","hapticSelectionChanged","decelerate","DECELERATION_FRICTION","minY","maxY","round","hapticSelectionEnd","currentPos","event","cancelable","hapticSelectionStart","deltaY","pow","bounceFrom","clamp","MAX_PICKER_SPEED","velocityY","hasAttribute","TRANSITION_DURATION","isScrollingUp","optHeightFraction","forceRefresh","align","columnWidth","prefix","width","prefixWidth","maxWidth","optionsWidth","suffix","suffixWidth"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement } from './index-88bdeaae.js';\nimport { c as chevronBack, l as chevronForward, i as chevronDown, m as caretUpSharp, n as caretDownSharp } from './index-d74f4afc.js';\nimport { b as getIonMode } from './ionic-global-00475c3a.js';\nimport { startFocusVisible } from './focus-visible-5ad6825d.js';\nimport { r as raf, e as renderHiddenInput, g as getElementRoot, l as clamp } from './helpers-4d272360.js';\nimport { p as printIonWarning, b as printIonError } from './index-9ac92660.js';\nimport { i as isRTL } from './dir-e8b767a8.js';\nimport { c as createColorClasses, g as getClassMap } from './theme-7670341c.js';\nimport { B as BACKDROP, i as isCancel, e as prepareOverlay, d as present, f as dismiss, g as eventMethod, s as safeCall } from './overlays-ab6211c7.js';\nimport { c as createAnimation } from './animation-36c1d77d.js';\nimport { b as hapticSelectionChanged, h as hapticSelectionEnd, a as hapticSelectionStart } from './haptic-683b3b3c.js';\nimport './hardware-back-button-490df115.js';\n\n/**\n * Returns true if the selected day is equal to the reference day\n */\nconst isSameDay = (baseParts, compareParts) => {\n  return (baseParts.month === compareParts.month && baseParts.day === compareParts.day && baseParts.year === compareParts.year);\n};\n/**\n * Returns true is the selected day is before the reference day.\n */\nconst isBefore = (baseParts, compareParts) => {\n  return (baseParts.year < compareParts.year ||\n    (baseParts.year === compareParts.year && baseParts.month < compareParts.month) ||\n    (baseParts.year === compareParts.year &&\n      baseParts.month === compareParts.month &&\n      baseParts.day &&\n      baseParts.day < compareParts.day));\n};\n/**\n * Returns true is the selected day is after the reference day.\n */\nconst isAfter = (baseParts, compareParts) => {\n  return (baseParts.year > compareParts.year ||\n    (baseParts.year === compareParts.year && baseParts.month > compareParts.month) ||\n    (baseParts.year === compareParts.year &&\n      baseParts.month === compareParts.month &&\n      baseParts.day &&\n      baseParts.day > compareParts.day));\n};\nconst warnIfValueOutOfBounds = (value, min, max) => {\n  if ((min && isBefore(value, min)) || (max && isAfter(value, max))) {\n    printIonWarning('The value provided to ion-datetime is out of bounds.\\n\\n' +\n      `Min: ${JSON.stringify(min)}\\n` +\n      `Max: ${JSON.stringify(max)}\\n` +\n      `Value: ${JSON.stringify(value)}`);\n  }\n};\n\n/**\n * Determines if given year is a\n * leap year. Returns `true` if year\n * is a leap year. Returns `false`\n * otherwise.\n */\nconst isLeapYear = (year) => {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n};\nconst is24Hour = (locale, hourCycle) => {\n  /**\n   * If developer has explicitly enabled h23 time\n   * then return early and do not look at the system default.\n   */\n  if (hourCycle !== undefined) {\n    return hourCycle === 'h23';\n  }\n  /**\n   * If hourCycle was not specified, check the locale\n   * that is set on the user's device. We first check the\n   * Intl.DateTimeFormat hourCycle option as developers can encode this\n   * option into the locale string. Example: `en-US-u-hc-h23`\n   */\n  const formatted = new Intl.DateTimeFormat(locale, { hour: 'numeric' });\n  const options = formatted.resolvedOptions();\n  if (options.hourCycle !== undefined) {\n    return options.hourCycle === 'h23';\n  }\n  /**\n   * If hourCycle is not specified (either through lack\n   * of browser support or locale information) then fall\n   * back to this slower hourCycle check.\n   */\n  const date = new Date('5/18/2021 00:00');\n  const parts = formatted.formatToParts(date);\n  const hour = parts.find((p) => p.type === 'hour');\n  if (!hour) {\n    throw new Error('Hour value not found from DateTimeFormat');\n  }\n  return hour.value === '00';\n};\n/**\n * Given a date object, returns the number\n * of days in that month.\n * Month value begin at 1, not 0.\n * i.e. January = month 1.\n */\nconst getNumDaysInMonth = (month, year) => {\n  return month === 4 || month === 6 || month === 9 || month === 11\n    ? 30\n    : month === 2\n      ? isLeapYear(year)\n        ? 29\n        : 28\n      : 31;\n};\n/**\n * Certain locales display month then year while\n * others display year then month.\n * We can use Intl.DateTimeFormat to determine\n * the ordering for each locale.\n */\nconst isMonthFirstLocale = (locale) => {\n  /**\n   * By setting month and year we guarantee that only\n   * month, year, and literal (slashes '/', for example)\n   * values are included in the formatToParts results.\n   *\n   * The ordering of the parts will be determined by\n   * the locale. So if the month is the first value,\n   * then we know month should be shown first. If the\n   * year is the first value, then we know year should be shown first.\n   *\n   * This ordering can be controlled by customizing the locale property.\n   */\n  const parts = new Intl.DateTimeFormat(locale, { month: 'numeric', year: 'numeric' }).formatToParts(new Date());\n  return parts[0].type === 'month';\n};\n\nconst twoDigit = (val) => {\n  return ('0' + (val !== undefined ? Math.abs(val) : '0')).slice(-2);\n};\nconst fourDigit = (val) => {\n  return ('000' + (val !== undefined ? Math.abs(val) : '0')).slice(-4);\n};\nconst convertDataToISO = (data) => {\n  // https://www.w3.org/TR/NOTE-datetime\n  let rtn = '';\n  if (data.year !== undefined) {\n    // YYYY\n    rtn = fourDigit(data.year);\n    if (data.month !== undefined) {\n      // YYYY-MM\n      rtn += '-' + twoDigit(data.month);\n      if (data.day !== undefined) {\n        // YYYY-MM-DD\n        rtn += '-' + twoDigit(data.day);\n        if (data.hour !== undefined) {\n          // YYYY-MM-DDTHH:mm:SS\n          rtn += `T${twoDigit(data.hour)}:${twoDigit(data.minute)}:00`;\n          if (data.tzOffset === undefined) {\n            // YYYY-MM-DDTHH:mm:SSZ\n            rtn += 'Z';\n          }\n          else {\n            // YYYY-MM-DDTHH:mm:SS+/-HH:mm\n            rtn +=\n              (data.tzOffset > 0 ? '+' : '-') +\n                twoDigit(Math.floor(Math.abs(data.tzOffset / 60))) +\n                ':' +\n                twoDigit(data.tzOffset % 60);\n          }\n        }\n      }\n    }\n  }\n  else if (data.hour !== undefined) {\n    // HH:mm\n    rtn = twoDigit(data.hour) + ':' + twoDigit(data.minute);\n  }\n  return rtn;\n};\n/**\n * Converts an 12 hour value to 24 hours.\n */\nconst convert12HourTo24Hour = (hour, ampm) => {\n  if (ampm === undefined) {\n    return hour;\n  }\n  /**\n   * If AM and 12am\n   * then return 00:00.\n   * Otherwise just return\n   * the hour since it is\n   * already in 24 hour format.\n   */\n  if (ampm === 'am') {\n    if (hour === 12) {\n      return 0;\n    }\n    return hour;\n  }\n  /**\n   * If PM and 12pm\n   * just return 12:00\n   * since it is already\n   * in 24 hour format.\n   * Otherwise add 12 hours\n   * to the time.\n   */\n  if (hour === 12) {\n    return 12;\n  }\n  return hour + 12;\n};\nconst getStartOfWeek = (refParts) => {\n  const { dayOfWeek } = refParts;\n  if (dayOfWeek === null || dayOfWeek === undefined) {\n    throw new Error('No day of week provided');\n  }\n  return subtractDays(refParts, dayOfWeek);\n};\nconst getEndOfWeek = (refParts) => {\n  const { dayOfWeek } = refParts;\n  if (dayOfWeek === null || dayOfWeek === undefined) {\n    throw new Error('No day of week provided');\n  }\n  return addDays(refParts, 6 - dayOfWeek);\n};\nconst getNextDay = (refParts) => {\n  return addDays(refParts, 1);\n};\nconst getPreviousDay = (refParts) => {\n  return subtractDays(refParts, 1);\n};\nconst getPreviousWeek = (refParts) => {\n  return subtractDays(refParts, 7);\n};\nconst getNextWeek = (refParts) => {\n  return addDays(refParts, 7);\n};\n/**\n * Given datetime parts, subtract\n * numDays from the date.\n * Returns a new DatetimeParts object\n * Currently can only go backward at most 1 month.\n */\nconst subtractDays = (refParts, numDays) => {\n  const { month, day, year } = refParts;\n  if (day === null) {\n    throw new Error('No day provided');\n  }\n  const workingParts = {\n    month,\n    day,\n    year,\n  };\n  workingParts.day = day - numDays;\n  /**\n   * If wrapping to previous month\n   * update days and decrement month\n   */\n  if (workingParts.day < 1) {\n    workingParts.month -= 1;\n  }\n  /**\n   * If moving to previous year, reset\n   * month to December and decrement year\n   */\n  if (workingParts.month < 1) {\n    workingParts.month = 12;\n    workingParts.year -= 1;\n  }\n  /**\n   * Determine how many days are in the current\n   * month\n   */\n  if (workingParts.day < 1) {\n    const daysInMonth = getNumDaysInMonth(workingParts.month, workingParts.year);\n    /**\n     * Take num days in month and add the\n     * number of underflow days. This number will\n     * be negative.\n     * Example: 1 week before Jan 2, 2021 is\n     * December 26, 2021 so:\n     * 2 - 7 = -5\n     * 31 + (-5) = 26\n     */\n    workingParts.day = daysInMonth + workingParts.day;\n  }\n  return workingParts;\n};\n/**\n * Given datetime parts, add\n * numDays to the date.\n * Returns a new DatetimeParts object\n * Currently can only go forward at most 1 month.\n */\nconst addDays = (refParts, numDays) => {\n  const { month, day, year } = refParts;\n  if (day === null) {\n    throw new Error('No day provided');\n  }\n  const workingParts = {\n    month,\n    day,\n    year,\n  };\n  const daysInMonth = getNumDaysInMonth(month, year);\n  workingParts.day = day + numDays;\n  /**\n   * If wrapping to next month\n   * update days and increment month\n   */\n  if (workingParts.day > daysInMonth) {\n    workingParts.day -= daysInMonth;\n    workingParts.month += 1;\n  }\n  /**\n   * If moving to next year, reset\n   * month to January and increment year\n   */\n  if (workingParts.month > 12) {\n    workingParts.month = 1;\n    workingParts.year += 1;\n  }\n  return workingParts;\n};\n/**\n * Given DatetimeParts, generate the previous month.\n */\nconst getPreviousMonth = (refParts) => {\n  /**\n   * If current month is January, wrap backwards\n   *  to December of the previous year.\n   */\n  const month = refParts.month === 1 ? 12 : refParts.month - 1;\n  const year = refParts.month === 1 ? refParts.year - 1 : refParts.year;\n  const numDaysInMonth = getNumDaysInMonth(month, year);\n  const day = numDaysInMonth < refParts.day ? numDaysInMonth : refParts.day;\n  return { month, year, day };\n};\n/**\n * Given DatetimeParts, generate the next month.\n */\nconst getNextMonth = (refParts) => {\n  /**\n   * If current month is December, wrap forwards\n   *  to January of the next year.\n   */\n  const month = refParts.month === 12 ? 1 : refParts.month + 1;\n  const year = refParts.month === 12 ? refParts.year + 1 : refParts.year;\n  const numDaysInMonth = getNumDaysInMonth(month, year);\n  const day = numDaysInMonth < refParts.day ? numDaysInMonth : refParts.day;\n  return { month, year, day };\n};\nconst changeYear = (refParts, yearDelta) => {\n  const month = refParts.month;\n  const year = refParts.year + yearDelta;\n  const numDaysInMonth = getNumDaysInMonth(month, year);\n  const day = numDaysInMonth < refParts.day ? numDaysInMonth : refParts.day;\n  return { month, year, day };\n};\n/**\n * Given DatetimeParts, generate the previous year.\n */\nconst getPreviousYear = (refParts) => {\n  return changeYear(refParts, -1);\n};\n/**\n * Given DatetimeParts, generate the next year.\n */\nconst getNextYear = (refParts) => {\n  return changeYear(refParts, 1);\n};\n/**\n * If PM, then internal value should\n * be converted to 24-hr time.\n * Does not apply when public\n * values are already 24-hr time.\n */\nconst getInternalHourValue = (hour, use24Hour, ampm) => {\n  if (use24Hour) {\n    return hour;\n  }\n  return convert12HourTo24Hour(hour, ampm);\n};\n/**\n * Unless otherwise stated, all month values are\n * 1 indexed instead of the typical 0 index in JS Date.\n * Example:\n *   January = Month 0 when using JS Date\n *   January = Month 1 when using this datetime util\n */\n/**\n * Given the current datetime parts and a new AM/PM value\n * calculate what the hour should be in 24-hour time format.\n * Used when toggling the AM/PM segment since we store our hours\n * in 24-hour time format internally.\n */\nconst calculateHourFromAMPM = (currentParts, newAMPM) => {\n  const { ampm: currentAMPM, hour } = currentParts;\n  let newHour = hour;\n  /**\n   * If going from AM --> PM, need to update the\n   *\n   */\n  if (currentAMPM === 'am' && newAMPM === 'pm') {\n    newHour = convert12HourTo24Hour(newHour, 'pm');\n    /**\n     * If going from PM --> AM\n     */\n  }\n  else if (currentAMPM === 'pm' && newAMPM === 'am') {\n    newHour = Math.abs(newHour - 12);\n  }\n  return newHour;\n};\n\n/**\n * Returns the current date as\n * an ISO string in the user's\n * time zone.\n */\nconst getToday = () => {\n  /**\n   * ion-datetime intentionally does not\n   * parse time zones/do automatic time zone\n   * conversion when accepting user input.\n   * However when we get today's date string,\n   * we want it formatted relative to the user's\n   * time zone.\n   *\n   * When calling toISOString(), the browser\n   * will convert the date to UTC time by either adding\n   * or subtracting the time zone offset.\n   * To work around this, we need to either add\n   * or subtract the time zone offset to the Date\n   * object prior to calling toISOString().\n   * This allows us to get an ISO string\n   * that is in the user's time zone.\n   *\n   * Example:\n   * Time zone offset is 240\n   * Meaning: The browser needs to add 240 minutes\n   * to the Date object to get UTC time.\n   * What Ionic does: We subtract 240 minutes\n   * from the Date object. The browser then adds\n   * 240 minutes in toISOString(). The result\n   * is a time that is in the user's time zone\n   * and not UTC.\n   *\n   * Note: Some timezones include minute adjustments\n   * such as 30 or 45 minutes. This is why we use setMinutes\n   * instead of setHours.\n   * Example: India Standard Time\n   * Timezone offset: -330 = -5.5 hours.\n   *\n   * List of timezones with 30 and 45 minute timezones:\n   * https://www.timeanddate.com/time/time-zones-interesting.html\n   */\n  const date = new Date();\n  const tzOffset = date.getTimezoneOffset();\n  date.setMinutes(date.getMinutes() - tzOffset);\n  return date.toISOString();\n};\nconst minutes = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n];\nconst hour12 = [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nconst hour23 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23];\n/**\n * Given a locale and a mode,\n * return an array with formatted days\n * of the week. iOS should display days\n * such as \"Mon\" or \"Tue\".\n * MD should display days such as \"M\"\n * or \"T\".\n */\nconst getDaysOfWeek = (locale, mode, firstDayOfWeek = 0) => {\n  /**\n   * Nov 1st, 2020 starts on a Sunday.\n   * ion-datetime assumes weeks start on Sunday,\n   * but is configurable via `firstDayOfWeek`.\n   */\n  const weekdayFormat = mode === 'ios' ? 'short' : 'narrow';\n  const intl = new Intl.DateTimeFormat(locale, { weekday: weekdayFormat });\n  const startDate = new Date('11/01/2020');\n  const daysOfWeek = [];\n  /**\n   * For each day of the week,\n   * get the day name.\n   */\n  for (let i = firstDayOfWeek; i < firstDayOfWeek + 7; i++) {\n    const currentDate = new Date(startDate);\n    currentDate.setDate(currentDate.getDate() + i);\n    daysOfWeek.push(intl.format(currentDate));\n  }\n  return daysOfWeek;\n};\n/**\n * Returns an array containing all of the\n * days in a month for a given year. Values are\n * aligned with a week calendar starting on\n * the firstDayOfWeek value (Sunday by default)\n * using null values.\n */\nconst getDaysOfMonth = (month, year, firstDayOfWeek) => {\n  const numDays = getNumDaysInMonth(month, year);\n  const firstOfMonth = new Date(`${month}/1/${year}`).getDay();\n  /**\n   * To get the first day of the month aligned on the correct\n   * day of the week, we need to determine how many \"filler\" days\n   * to generate. These filler days as empty/disabled buttons\n   * that fill the space of the days of the week before the first\n   * of the month.\n   *\n   * There are two cases here:\n   *\n   * 1. If firstOfMonth = 4, firstDayOfWeek = 0 then the offset\n   * is (4 - (0 + 1)) = 3. Since the offset loop goes from 0 to 3 inclusive,\n   * this will generate 4 filler days (0, 1, 2, 3), and then day of week 4 will have\n   * the first day of the month.\n   *\n   * 2. If firstOfMonth = 2, firstDayOfWeek = 4 then the offset\n   * is (6 - (4 - 2)) = 4. Since the offset loop goes from 0 to 4 inclusive,\n   * this will generate 5 filler days (0, 1, 2, 3, 4), and then day of week 5 will have\n   * the first day of the month.\n   */\n  const offset = firstOfMonth >= firstDayOfWeek ? firstOfMonth - (firstDayOfWeek + 1) : 6 - (firstDayOfWeek - firstOfMonth);\n  let days = [];\n  for (let i = 1; i <= numDays; i++) {\n    days.push({ day: i, dayOfWeek: (offset + i) % 7 });\n  }\n  for (let i = 0; i <= offset; i++) {\n    days = [{ day: null, dayOfWeek: null }, ...days];\n  }\n  return days;\n};\n/**\n * Given a local, reference datetime parts and option\n * max/min bound datetime parts, calculate the acceptable\n * hour and minute values according to the bounds and locale.\n */\nconst generateTime = (refParts, hourCycle = 'h12', minParts, maxParts, hourValues, minuteValues) => {\n  const use24Hour = hourCycle === 'h23';\n  let processedHours = use24Hour ? hour23 : hour12;\n  let processedMinutes = minutes;\n  let isAMAllowed = true;\n  let isPMAllowed = true;\n  if (hourValues) {\n    processedHours = processedHours.filter((hour) => hourValues.includes(hour));\n  }\n  if (minuteValues) {\n    processedMinutes = processedMinutes.filter((minute) => minuteValues.includes(minute));\n  }\n  if (minParts) {\n    /**\n     * If ref day is the same as the\n     * minimum allowed day, filter hour/minute\n     * values according to min hour and minute.\n     */\n    if (isSameDay(refParts, minParts)) {\n      /**\n       * Users may not always set the hour/minute for\n       * min value (i.e. 2021-06-02) so we should allow\n       * all hours/minutes in that case.\n       */\n      if (minParts.hour !== undefined) {\n        processedHours = processedHours.filter((hour) => {\n          const convertedHour = refParts.ampm === 'pm' ? (hour + 12) % 24 : hour;\n          return (use24Hour ? hour : convertedHour) >= minParts.hour;\n        });\n        isAMAllowed = minParts.hour < 13;\n      }\n      if (minParts.minute !== undefined) {\n        /**\n         * The minimum minute range should not be enforced when\n         * the hour is greater than the min hour.\n         *\n         * For example with a minimum range of 09:30, users\n         * should be able to select 10:00-10:29 and beyond.\n         */\n        let isPastMinHour = false;\n        if (minParts.hour !== undefined && refParts.hour !== undefined) {\n          if (refParts.hour > minParts.hour) {\n            isPastMinHour = true;\n          }\n        }\n        processedMinutes = processedMinutes.filter((minute) => {\n          if (isPastMinHour) {\n            return true;\n          }\n          return minute >= minParts.minute;\n        });\n      }\n      /**\n       * If ref day is before minimum\n       * day do not render any hours/minute values\n       */\n    }\n    else if (isBefore(refParts, minParts)) {\n      processedHours = [];\n      processedMinutes = [];\n      isAMAllowed = isPMAllowed = false;\n    }\n  }\n  if (maxParts) {\n    /**\n     * If ref day is the same as the\n     * maximum allowed day, filter hour/minute\n     * values according to max hour and minute.\n     */\n    if (isSameDay(refParts, maxParts)) {\n      /**\n       * Users may not always set the hour/minute for\n       * max value (i.e. 2021-06-02) so we should allow\n       * all hours/minutes in that case.\n       */\n      if (maxParts.hour !== undefined) {\n        processedHours = processedHours.filter((hour) => {\n          const convertedHour = refParts.ampm === 'pm' ? (hour + 12) % 24 : hour;\n          return (use24Hour ? hour : convertedHour) <= maxParts.hour;\n        });\n        isPMAllowed = maxParts.hour >= 13;\n      }\n      if (maxParts.minute !== undefined && refParts.hour === maxParts.hour) {\n        // The available minutes should only be filtered when the hour is the same as the max hour.\n        // For example if the max hour is 10:30 and the current hour is 10:00,\n        // users should be able to select 00-30 minutes.\n        // If the current hour is 09:00, users should be able to select 00-60 minutes.\n        processedMinutes = processedMinutes.filter((minute) => minute <= maxParts.minute);\n      }\n      /**\n       * If ref day is after minimum\n       * day do not render any hours/minute values\n       */\n    }\n    else if (isAfter(refParts, maxParts)) {\n      processedHours = [];\n      processedMinutes = [];\n      isAMAllowed = isPMAllowed = false;\n    }\n  }\n  return {\n    hours: processedHours,\n    minutes: processedMinutes,\n    am: isAMAllowed,\n    pm: isPMAllowed,\n  };\n};\n/**\n * Given DatetimeParts, generate the previous,\n * current, and and next months.\n */\nconst generateMonths = (refParts) => {\n  return [\n    getPreviousMonth(refParts),\n    { month: refParts.month, year: refParts.year, day: refParts.day },\n    getNextMonth(refParts),\n  ];\n};\nconst getPickerMonths = (locale, refParts, minParts, maxParts, monthValues) => {\n  const { year } = refParts;\n  const months = [];\n  if (monthValues !== undefined) {\n    let processedMonths = monthValues;\n    if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.month) !== undefined) {\n      processedMonths = processedMonths.filter((month) => month <= maxParts.month);\n    }\n    if ((minParts === null || minParts === void 0 ? void 0 : minParts.month) !== undefined) {\n      processedMonths = processedMonths.filter((month) => month >= minParts.month);\n    }\n    processedMonths.forEach((processedMonth) => {\n      const date = new Date(`${processedMonth}/1/${year} GMT+0000`);\n      const monthString = new Intl.DateTimeFormat(locale, { month: 'long', timeZone: 'UTC' }).format(date);\n      months.push({ text: monthString, value: processedMonth });\n    });\n  }\n  else {\n    const maxMonth = maxParts && maxParts.year === year ? maxParts.month : 12;\n    const minMonth = minParts && minParts.year === year ? minParts.month : 1;\n    for (let i = minMonth; i <= maxMonth; i++) {\n      /**\n       *\n       * There is a bug on iOS 14 where\n       * Intl.DateTimeFormat takes into account\n       * the local timezone offset when formatting dates.\n       *\n       * Forcing the timezone to 'UTC' fixes the issue. However,\n       * we should keep this workaround as it is safer. In the event\n       * this breaks in another browser, we will not be impacted\n       * because all dates will be interpreted in UTC.\n       *\n       * Example:\n       * new Intl.DateTimeFormat('en-US', { month: 'long' }).format(new Date('Sat Apr 01 2006 00:00:00 GMT-0400 (EDT)')) // \"March\"\n       * new Intl.DateTimeFormat('en-US', { month: 'long', timeZone: 'UTC' }).format(new Date('Sat Apr 01 2006 00:00:00 GMT-0400 (EDT)')) // \"April\"\n       *\n       * In certain timezones, iOS 14 shows the wrong\n       * date for .toUTCString(). To combat this, we\n       * force all of the timezones to GMT+0000 (UTC).\n       *\n       * Example:\n       * Time Zone: Central European Standard Time\n       * new Date('1/1/1992').toUTCString() // \"Tue, 31 Dec 1991 23:00:00 GMT\"\n       * new Date('1/1/1992 GMT+0000').toUTCString() // \"Wed, 01 Jan 1992 00:00:00 GMT\"\n       */\n      const date = new Date(`${i}/1/${year} GMT+0000`);\n      const monthString = new Intl.DateTimeFormat(locale, { month: 'long', timeZone: 'UTC' }).format(date);\n      months.push({ text: monthString, value: i });\n    }\n  }\n  return months;\n};\nconst getCalendarYears = (refParts, minParts, maxParts, yearValues) => {\n  if (yearValues !== undefined) {\n    let processedYears = yearValues;\n    if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.year) !== undefined) {\n      processedYears = processedYears.filter((year) => year <= maxParts.year);\n    }\n    if ((minParts === null || minParts === void 0 ? void 0 : minParts.year) !== undefined) {\n      processedYears = processedYears.filter((year) => year >= minParts.year);\n    }\n    return processedYears;\n  }\n  else {\n    const { year } = refParts;\n    const maxYear = (maxParts === null || maxParts === void 0 ? void 0 : maxParts.year) || year;\n    const minYear = (minParts === null || minParts === void 0 ? void 0 : minParts.year) || year - 100;\n    const years = [];\n    for (let i = maxYear; i >= minYear; i--) {\n      years.push(i);\n    }\n    return years;\n  }\n};\n\nconst get12HourTime = (hour) => {\n  return hour % 12 || 12;\n};\nconst getFormattedAMPM = (ampm) => {\n  if (ampm === undefined) {\n    return '';\n  }\n  return ampm.toUpperCase();\n};\nconst getFormattedTime = (refParts, use24Hour) => {\n  if (refParts.hour === undefined || refParts.minute === undefined) {\n    return 'Invalid Time';\n  }\n  const hour = use24Hour ? getFormattedHour(refParts.hour, use24Hour) : get12HourTime(refParts.hour);\n  const minute = addTimePadding(refParts.minute);\n  if (use24Hour) {\n    return `${hour}:${minute}`;\n  }\n  return `${hour}:${minute} ${getFormattedAMPM(refParts.ampm)}`;\n};\n/**\n * Adds padding to a time value so\n * that it is always 2 digits.\n */\nconst addTimePadding = (value) => {\n  const valueToString = value.toString();\n  if (valueToString.length > 1) {\n    return valueToString;\n  }\n  return `0${valueToString}`;\n};\n/**\n * Formats the hour value so that it\n * is always 2 digits. Only applies\n * if using 12 hour format.\n */\nconst getFormattedHour = (hour, use24Hour) => {\n  if (!use24Hour) {\n    return hour.toString();\n  }\n  return addTimePadding(hour);\n};\n/**\n * Generates an aria-label to be read by screen readers\n * given a local, a date, and whether or not that date is\n * today's date.\n */\nconst generateDayAriaLabel = (locale, today, refParts) => {\n  if (refParts.day === null) {\n    return null;\n  }\n  /**\n   * MM/DD/YYYY will return midnight in the user's timezone.\n   */\n  const date = new Date(`${refParts.month}/${refParts.day}/${refParts.year} GMT+0000`);\n  const labelString = new Intl.DateTimeFormat(locale, {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    timeZone: 'UTC',\n  }).format(date);\n  /**\n   * If date is today, prepend \"Today\" so screen readers indicate\n   * that the date is today.\n   */\n  return today ? `Today, ${labelString}` : labelString;\n};\n/**\n * Gets the day of the week, month, and day\n * Used for the header in MD mode.\n */\nconst getMonthAndDay = (locale, refParts) => {\n  const date = new Date(`${refParts.month}/${refParts.day}/${refParts.year} GMT+0000`);\n  return new Intl.DateTimeFormat(locale, { weekday: 'short', month: 'short', day: 'numeric', timeZone: 'UTC' }).format(date);\n};\n/**\n * Given a locale and a date object,\n * return a formatted string that includes\n * the month name and full year.\n * Example: May 2021\n */\nconst getMonthAndYear = (locale, refParts) => {\n  const date = new Date(`${refParts.month}/${refParts.day}/${refParts.year} GMT+0000`);\n  return new Intl.DateTimeFormat(locale, { month: 'long', year: 'numeric', timeZone: 'UTC' }).format(date);\n};\n\nconst ISO_8601_REGEXP = \n// eslint-disable-next-line no-useless-escape\n/^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n// eslint-disable-next-line no-useless-escape\nconst TIME_REGEXP = /^((\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n/**\n * Use to convert a string of comma separated numbers or\n * an array of numbers, and clean up any user input\n */\nconst convertToArrayOfNumbers = (input) => {\n  if (input === undefined) {\n    return;\n  }\n  let processedInput = input;\n  if (typeof input === 'string') {\n    // convert the string to an array of strings\n    // auto remove any whitespace and [] characters\n    processedInput = input.replace(/\\[|\\]|\\s/g, '').split(',');\n  }\n  let values;\n  if (Array.isArray(processedInput)) {\n    // ensure each value is an actual number in the returned array\n    values = processedInput.map((num) => parseInt(num, 10)).filter(isFinite);\n  }\n  else {\n    values = [processedInput];\n  }\n  return values;\n};\n/**\n * Extracts date information\n * from a .calendar-day element\n * into DatetimeParts.\n */\nconst getPartsFromCalendarDay = (el) => {\n  return {\n    month: parseInt(el.getAttribute('data-month'), 10),\n    day: parseInt(el.getAttribute('data-day'), 10),\n    year: parseInt(el.getAttribute('data-year'), 10),\n    dayOfWeek: parseInt(el.getAttribute('data-day-of-week'), 10),\n  };\n};\n/**\n * Given an ISO-8601 string, format out the parts\n * We do not use the JS Date object here because\n * it adjusts the date for the current timezone.\n */\nconst parseDate = (val) => {\n  // manually parse IS0 cuz Date.parse cannot be trusted\n  // ISO 8601 format: 1994-12-15T13:47:20Z\n  let parse = null;\n  if (val != null && val !== '') {\n    // try parsing for just time first, HH:MM\n    parse = TIME_REGEXP.exec(val);\n    if (parse) {\n      // adjust the array so it fits nicely with the datetime parse\n      parse.unshift(undefined, undefined);\n      parse[2] = parse[3] = undefined;\n    }\n    else {\n      // try parsing for full ISO datetime\n      parse = ISO_8601_REGEXP.exec(val);\n    }\n  }\n  if (parse === null) {\n    // wasn't able to parse the ISO datetime\n    return undefined;\n  }\n  // ensure all the parse values exist with at least 0\n  for (let i = 1; i < 8; i++) {\n    parse[i] = parse[i] !== undefined ? parseInt(parse[i], 10) : undefined;\n  }\n  let tzOffset = 0;\n  if (parse[9] && parse[10]) {\n    // hours\n    tzOffset = parseInt(parse[10], 10) * 60;\n    if (parse[11]) {\n      // minutes\n      tzOffset += parseInt(parse[11], 10);\n    }\n    if (parse[9] === '-') {\n      // + or -\n      tzOffset *= -1;\n    }\n  }\n  return {\n    year: parse[1],\n    month: parse[2],\n    day: parse[3],\n    hour: parse[4],\n    minute: parse[5],\n    second: parse[6],\n    millisecond: parse[7],\n    tzOffset,\n  };\n};\nconst clampDate = (dateParts, minParts, maxParts) => {\n  if (minParts && isBefore(dateParts, minParts)) {\n    return minParts;\n  }\n  else if (maxParts && isAfter(dateParts, maxParts)) {\n    return maxParts;\n  }\n  return dateParts;\n};\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date, and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  const isActive = isSameDay(refParts, activeParts);\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts,\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n  return isMonthDisabled(nextMonth, {\n    maxParts,\n  });\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;max-width:350px;height:auto}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .datetime-year .order-month-first .month-column{-ms-flex-order:1;order:1}:host .datetime-year .order-month-first .year-column{-ms-flex-order:2;order:2}:host .datetime-year .order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .datetime-year .order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time),:host(.datetime-presentation-time-date),:host(.datetime-presentation-date){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color);font-size:14px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;max-width:350px;height:auto}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .datetime-year .order-month-first .month-column{-ms-flex-order:1;order:1}:host .datetime-year .order-month-first .year-column{-ms-flex-order:2;order:2}:host .datetime-year .order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .datetime-year .order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:3px;padding-bottom:0px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\n\nconst Datetime = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.overlayIsPresenting = false;\n    /**\n     * Whether to highlight the active day with a solid circle (as opposed\n     * to the outline circle around today). If you don't specify an initial\n     * value for the datetime, it doesn't automatically init to a default to\n     * avoid unwanted change events firing. If the solid circle were still\n     * shown then, it would look like a date had already been selected, which\n     * is misleading UX.\n     */\n    this.highlightActiveParts = false;\n    this.todayParts = parseDate(getToday());\n    this.prevPresentation = null;\n    this.showMonthAndYear = false;\n    this.activeParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.isPresented = false;\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. On `ios` mode this will include the\n     * slotted title, and on `md` mode this will include\n     * the slotted title and the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = (parts) => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts) => {\n      this.activeParts = Object.assign({}, parts);\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    /**\n     * Stencil sometimes sets calendarBodyRef to null on rerender, even though\n     * the element is present. Query for it manually as a fallback.\n     *\n     * TODO(FW-901) Remove when issue is resolved: https://github.com/ionic-team/stencil/issues/3253\n     */\n    this.getCalendarBodyEl = () => {\n      var _a;\n      return this.calendarBodyRef || ((_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.calendar-body'));\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = (ev) => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', (ev) => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = (currentMonth) => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const { day } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      if (this.min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      const { month, day, year, hour, minute } = parseDate(this.min);\n      this.minParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n      };\n    };\n    this.processMaxParts = () => {\n      if (this.max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      const { month, day, year, hour, minute } = parseDate(this.max);\n      this.maxParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n      };\n    };\n    this.initializeCalendarIOListeners = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n      if (!calendarBodyRef) {\n        return;\n      }\n      const mode = getIonMode(this);\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have IntersectionObservers\n       * on the previous and next month elements to append/prepend\n       * new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      /**\n       * Before setting up the IntersectionObserver,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      let endIO;\n      let startIO;\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const ioCallback = (callbackType, entries) => {\n          const refIO = callbackType === 'start' ? startIO : endIO;\n          const refMonth = callbackType === 'start' ? startMonth : endMonth;\n          const refMonthFn = callbackType === 'start' ? getPreviousMonth : getNextMonth;\n          /**\n           * If the month is not fully in view, do not do anything\n           */\n          const ev = entries[0];\n          if (!ev.isIntersecting) {\n            return;\n          }\n          /**\n           * When presenting an inline overlay,\n           * subsequent presentations will cause\n           * the IO to fire again (since the overlay\n           * is now visible and therefore the calendar\n           * months are intersecting).\n           */\n          if (this.overlayIsPresenting) {\n            this.overlayIsPresenting = false;\n            return;\n          }\n          const { month, year, day } = refMonthFn(this.workingParts);\n          if (isMonthDisabled({ month, year, day: null }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n          })) {\n            return;\n          }\n          /**\n           * On iOS, we need to set pointer-events: none\n           * when the user is almost done with the gesture\n           * so that they cannot quickly swipe while\n           * the scrollable container is snapping.\n           * Updating the container while snapping\n           * causes WebKit to snap incorrectly.\n           */\n          if (mode === 'ios') {\n            const ratio = ev.intersectionRatio;\n            // `maxTouchPoints` will be 1 in device preview, but > 1 on device\n            const shouldDisable = Math.abs(ratio - 0.7) <= 0.1 && navigator.maxTouchPoints > 1;\n            if (shouldDisable) {\n              calendarBodyRef.style.setProperty('pointer-events', 'none');\n              return;\n            }\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Remove the IO temporarily\n           * otherwise you can sometimes get duplicate\n           * events when rubber banding.\n           */\n          if (refIO === undefined) {\n            return;\n          }\n          refIO.disconnect();\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            // Disconnect all active intersection observers\n            // to avoid a re-render causing a duplicate event.\n            if (this.destroyCalendarIO) {\n              this.destroyCalendarIO();\n            }\n            raf(() => {\n              this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n              calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n              calendarBodyRef.style.removeProperty('overflow');\n              calendarBodyRef.style.removeProperty('pointer-events');\n              endIO === null || endIO === void 0 ? void 0 : endIO.observe(endMonth);\n              startIO === null || startIO === void 0 ? void 0 : startIO.observe(startMonth);\n            });\n            /**\n             * Now that state has been updated\n             * and the correct month is in view,\n             * we can resume the IO.\n             */\n            if (refIO === undefined) {\n              return;\n            }\n            refIO.observe(refMonth);\n          });\n        };\n        const threshold = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1 ? [0.7, 1] : 1;\n        // Intersection observers cannot accurately detect the\n        // intersection with a threshold of 1, when the observed\n        // element width is a sub-pixel value (i.e. 334.05px).\n        // Setting a root margin to 1px solves the issue.\n        const rootMargin = '1px';\n        /**\n         * Listen on the first month to\n         * prepend a new month and on the last\n         * month to append a new month.\n         * The 0.7 threshold is required on ios\n         * so that we can remove pointer-events\n         * when adding new months.\n         * Adding to a scroll snapping container\n         * while the container is snapping does not\n         * completely work as expected in WebKit.\n         * Adding pointer-events: none allows us to\n         * avoid these issues.\n         *\n         * This should be fine on Chromium, but\n         * when you set pointer-events: none\n         * it applies to active gestures which is not\n         * something WebKit does.\n         */\n        endIO = new IntersectionObserver((ev) => ioCallback('end', ev), {\n          threshold,\n          root: calendarBodyRef,\n          rootMargin,\n        });\n        endIO.observe(endMonth);\n        startIO = new IntersectionObserver((ev) => ioCallback('start', ev), {\n          threshold,\n          root: calendarBodyRef,\n          rootMargin,\n        });\n        startIO.observe(startMonth);\n        this.destroyCalendarIO = () => {\n          endIO === null || endIO === void 0 ? void 0 : endIO.disconnect();\n          startIO === null || startIO === void 0 ? void 0 : startIO.disconnect();\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const { destroyCalendarIO, destroyKeyboardMO } = this;\n      if (destroyCalendarIO !== undefined) {\n        destroyCalendarIO();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    /**\n     * When doing subsequent presentations of an inline\n     * overlay, the IO callback will fire again causing\n     * the calendar to go back one month. We need to listen\n     * for the presentation of the overlay so we can properly\n     * cancel that IO callback.\n     */\n    this.initializeOverlayListener = () => {\n      const overlay = this.el.closest('ion-popover, ion-modal');\n      if (overlay === null) {\n        return;\n      }\n      const overlayListener = () => {\n        this.overlayIsPresenting = true;\n      };\n      overlay.addEventListener('willPresent', overlayListener);\n      this.destroyOverlayListener = () => {\n        overlay.removeEventListener('willPresent', overlayListener);\n      };\n    };\n    this.processValue = (value) => {\n      this.highlightActiveParts = !!value;\n      const valueToProcess = parseDate(value || getToday());\n      const { minParts, maxParts } = this;\n      warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      const { month, day, year, hour, minute, tzOffset } = clampDate(valueToProcess, minParts, maxParts);\n      this.setWorkingParts({\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm: hour >= 12 ? 'pm' : 'am',\n      });\n      this.activeParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm: hour >= 12 ? 'pm' : 'am',\n      };\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null && this.value !== '';\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth',\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  activePartsChanged() {\n    this.activePartsClone = this.activeParts;\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    if (this.hasValue()) {\n      /**\n       * Clones the value of the `activeParts` to the private clone, to update\n       * the date display on the current render cycle without causing another render.\n       *\n       * This allows us to update the current value's date/time display without\n       * refocusing or shifting the user's display (leaves the user in place).\n       */\n      const valueDateParts = parseDate(this.value);\n      if (valueDateParts) {\n        warnIfValueOutOfBounds(valueDateParts, this.minParts, this.maxParts);\n        const { month, day, year, hour, minute } = valueDateParts;\n        const ampm = hour >= 12 ? 'pm' : 'am';\n        this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), { month,\n          day,\n          year,\n          hour,\n          minute,\n          ampm });\n        /**\n         * The working parts am/pm value must be updated when the value changes, to\n         * ensure the time picker hour column values are generated correctly.\n         */\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { ampm }));\n      }\n      else {\n        printIonWarning(`Unable to parse date string: ${this.value}. Please provide a valid ISO 8601 datetime string.`);\n      }\n    }\n    this.emitStyle();\n    this.ionChange.emit({\n      value: this.value,\n    });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    /**\n     * We only update the value if the presentation is not a calendar picker,\n     * or if `highlightActiveParts` is true; indicating that the user\n     * has selected a date from the calendar picker.\n     *\n     * Otherwise \"today\" would accidentally be set as the value.\n     */\n    if (this.highlightActiveParts || !this.isCalendarPicker) {\n      /**\n       * Prevent convertDataToISO from doing any\n       * kind of transformation based on timezone\n       * This cancels out any change it attempts to make\n       *\n       * Important: Take the timezone offset based on\n       * the date that is currently selected, otherwise\n       * there can be 1 hr difference when dealing w/ DST\n       */\n      const date = new Date(convertDataToISO(this.activeParts));\n      this.activeParts.tzOffset = date.getTimezoneOffset() * -1;\n      this.value = convertDataToISO(this.activeParts);\n    }\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  get isCalendarPicker() {\n    const { presentation } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarIOListeners();\n    this.initializeKeyboardListeners();\n    this.initializeOverlayListener();\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = (entries) => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01 });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = (entries) => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0 });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n    root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const { presentation, prevPresentation } = this;\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    if (this.destroyOverlayListener !== undefined) {\n      this.destroyOverlayListener();\n    }\n    this.initializeListeners();\n  }\n  componentWillLoad() {\n    this.processMinParts();\n    this.processMaxParts();\n    this.processValue(this.value);\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  renderFooter() {\n    const { showDefaultButtons, showClearButton } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton,\n      } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true) }, this.cancelText)), h(\"div\", null, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick() }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true) }, this.doneText)))))))));\n  }\n  renderYearView() {\n    const { presentation, workingParts, locale } = this;\n    const calendarYears = getCalendarYears(this.todayParts, this.minParts, this.maxParts, this.parsedYearValues);\n    const showMonth = presentation !== 'year';\n    const showYear = presentation !== 'month';\n    const months = getPickerMonths(locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues);\n    const years = calendarYears.map((year) => {\n      return {\n        text: `${year}`,\n        value: year,\n      };\n    });\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return (h(\"div\", { class: \"datetime-year\" }, h(\"div\", { class: {\n        'datetime-year-body': true,\n        [`order-${columnOrder}`]: true,\n      } }, h(\"ion-picker-internal\", null, showMonth && (h(\"ion-picker-column-internal\", { class: \"month-column\", color: this.color, items: months, value: workingParts.month, onIonChange: (ev) => {\n        // Due to a Safari 14 issue we need to destroy\n        // the intersection observer before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarIO) {\n          this.destroyCalendarIO();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month: ev.detail.value }));\n        if (presentation === 'month' || presentation === 'month-year') {\n          this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { month: ev.detail.value }));\n        }\n        // We can re-attach the intersection observer after\n        // the working parts have been updated.\n        this.initializeCalendarIOListeners();\n        ev.stopPropagation();\n      } })), showYear && (h(\"ion-picker-column-internal\", { class: \"year-column\", color: this.color, items: years, value: workingParts.year, onIonChange: (ev) => {\n        // Due to a Safari 14 issue we need to destroy\n        // the intersection observer before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarIO) {\n          this.destroyCalendarIO();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { year: ev.detail.value }));\n        if (presentation === 'year' || presentation === 'month-year') {\n          this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { year: ev.detail.value }));\n        }\n        // We can re-attach the intersection observer after\n        // the working parts have been updated.\n        this.initializeCalendarIOListeners();\n        ev.stopPropagation();\n      } }))))));\n  }\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { button: true, detail: false, lines: \"none\", onClick: () => this.toggleMonthAndYearView() }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), ' ', h(\"ion-icon\", { icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n      return h(\"div\", { class: \"day-of-week\" }, d);\n    }))));\n  }\n  renderMonth(month, year) {\n    const { highlightActiveParts } = this;\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null,\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    return (h(\"div\", { class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n      } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const { day, dayOfWeek } = dateObject;\n      const { isDateEnabled } = this;\n      const referenceParts = { month, day, year };\n      const { isActive, isToday, ariaLabel, ariaSelected, disabled } = getCalendarDayState(this.locale, referenceParts, this.activePartsClone, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n      }\n      return (h(\"button\", { tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isCalDayDisabled, class: {\n          'calendar-day-padding': day === null,\n          'calendar-day': true,\n          'calendar-day-active': isActive && highlightActiveParts,\n          'calendar-day-today': isToday,\n        }, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n          if (day === null) {\n            return;\n          }\n          /**\n           * Note that for datetimes with confirm/cancel buttons, the value\n           * isn't updated until you call confirm(). We need to bring the\n           * solid circle back on day click for UX reasons, rather than only\n           * show the circle if `value` is truthy.\n           */\n          this.highlightActiveParts = true;\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n            day,\n            year }));\n          this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { month,\n            day,\n            year }));\n        } }, day));\n    }))));\n  }\n  renderCalendarBody() {\n    return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts).map(({ month, year }) => {\n      return this.renderMonth(month, year);\n    })));\n  }\n  renderCalendar(mode) {\n    return (h(\"div\", { class: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", { name: \"time-label\" }, \"Time\");\n  }\n  renderTimePicker(hoursItems, minutesItems, ampmItems, use24Hour) {\n    const { color, activePartsClone, workingParts } = this;\n    return (h(\"ion-picker-internal\", null, h(\"ion-picker-column-internal\", { color: color, value: activePartsClone.hour, items: hoursItems, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { hour: ev.detail.value }));\n        ev.stopPropagation();\n      } }), h(\"ion-picker-column-internal\", { color: color, value: activePartsClone.minute, items: minutesItems, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { minute: ev.detail.value }));\n        ev.stopPropagation();\n      } }), !use24Hour && (h(\"ion-picker-column-internal\", { color: color, value: activePartsClone.ampm, items: ampmItems, onIonChange: (ev) => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { ampm: ev.detail.value, hour }));\n        ev.stopPropagation();\n      } }))));\n  }\n  renderTimeOverlay(hoursItems, minutesItems, ampmItems, use24Hour) {\n    return [\n      h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n      h(\"button\", { class: {\n          'time-body': true,\n          'time-body-active': this.isTimePopoverOpen,\n        }, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", onClick: async (ev) => {\n          const { popoverRef } = this;\n          if (popoverRef) {\n            this.isTimePopoverOpen = true;\n            popoverRef.present(new CustomEvent('ionShadowTarget', {\n              detail: {\n                ionShadowTarget: ev.target,\n              },\n            }));\n            await popoverRef.onWillDismiss();\n            this.isTimePopoverOpen = false;\n          }\n        } }, getFormattedTime(this.activePartsClone, use24Hour)),\n      h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n          /**\n           * Intersection Observers do not consistently fire between Blink and Webkit\n           * when toggling the visibility of the popover and trying to scroll the picker\n           * column to the correct time value.\n           *\n           * This will correctly scroll the element position to the correct time value,\n           * before the popover is fully presented.\n           */\n          const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n          // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n          cols.forEach((col) => col.scrollActiveItemIntoView());\n        }, style: {\n          '--offset-y': '-10px',\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderTimePicker(hoursItems, minutesItems, ampmItems, use24Hour)),\n    ];\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const { workingParts, presentation } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    const use24Hour = is24Hour(this.locale, this.hourCycle);\n    const { hours, minutes, am, pm } = generateTime(workingParts, use24Hour ? 'h23' : 'h12', this.value ? this.minParts : undefined, this.value ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    const hoursItems = hours.map((hour) => {\n      return {\n        text: getFormattedHour(hour, use24Hour),\n        value: getInternalHourValue(hour, use24Hour, workingParts.ampm),\n      };\n    });\n    const minutesItems = minutes.map((minute) => {\n      return {\n        text: addTimePadding(minute),\n        value: minute,\n      };\n    });\n    const ampmItems = [];\n    if (am) {\n      ampmItems.push({\n        text: 'AM',\n        value: 'am',\n      });\n    }\n    if (pm) {\n      ampmItems.push({\n        text: 'PM',\n        value: 'pm',\n      });\n    }\n    return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation\n      ? this.renderTimePicker(hoursItems, minutesItems, ampmItems, use24Hour)\n      : this.renderTimeOverlay(hoursItems, minutesItems, ampmItems, use24Hour)));\n  }\n  renderCalendarViewHeader(mode) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), mode === 'md' && h(\"div\", { class: \"datetime-selected-date\" }, getMonthAndDay(this.locale, this.activeParts))));\n  }\n  renderDatetime(mode) {\n    const { presentation } = this;\n    switch (presentation) {\n      case 'date-time':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderYearView(),\n          this.renderTime(),\n          this.renderFooter(),\n        ];\n      case 'time-date':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderTime(),\n          this.renderCalendar(mode),\n          this.renderYearView(),\n          this.renderFooter(),\n        ];\n      case 'time':\n        return [this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderYearView(), this.renderFooter()];\n      default:\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderYearView(),\n          this.renderFooter(),\n        ];\n    }\n  }\n  render() {\n    const { name, value, disabled, el, color, isPresented, readonly, showMonthAndYear, presentation, size } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    renderHiddenInput(true, el, name, value, disabled);\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n      })) }, this.renderDatetime(mode)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"yearValues\": [\"yearValuesChanged\"],\n    \"monthValues\": [\"monthValuesChanged\"],\n    \"dayValues\": [\"dayValuesChanged\"],\n    \"hourValues\": [\"hourValuesChanged\"],\n    \"minuteValues\": [\"minuteValuesChanged\"],\n    \"activeParts\": [\"activePartsChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet datetimeIds = 0;\nDatetime.style = {\n  ios: datetimeIosCss,\n  md: datetimeMdCss\n};\n\n/**\n * iOS Picker Enter Animation\n */\nconst iosEnterAnimation = (baseEl) => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation\n    .addElement(baseEl.querySelector('ion-backdrop'))\n    .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n    .beforeStyles({\n    'pointer-events': 'none',\n  })\n    .afterClearStyles(['pointer-events']);\n  wrapperAnimation\n    .addElement(baseEl.querySelector('.picker-wrapper'))\n    .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n  return baseAnimation\n    .addElement(baseEl)\n    .easing('cubic-bezier(.36,.66,.04,1)')\n    .duration(400)\n    .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * iOS Picker Leave Animation\n */\nconst iosLeaveAnimation = (baseEl) => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation\n    .addElement(baseEl.querySelector('ion-backdrop'))\n    .fromTo('opacity', 'var(--backdrop-opacity)', 0.01);\n  wrapperAnimation\n    .addElement(baseEl.querySelector('.picker-wrapper'))\n    .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n  return baseAnimation\n    .addElement(baseEl)\n    .easing('cubic-bezier(.36,.66,.04,1)')\n    .duration(400)\n    .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst pickerIosCss = \".sc-ion-picker-ios-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}[dir=rtl].sc-ion-picker-ios-h,[dir=rtl] .sc-ion-picker-ios-h{left:unset;right:unset;right:0}.overlay-hidden.sc-ion-picker-ios-h{display:none}.picker-wrapper.sc-ion-picker-ios{border-radius:var(--border-radius);left:0;right:0;bottom:0;margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-wrapper.sc-ion-picker-ios{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.picker-toolbar.sc-ion-picker-ios{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-ios{border:0;font-family:inherit}.picker-button.sc-ion-picker-ios:active,.picker-button.sc-ion-picker-ios:focus{outline:none}.picker-columns.sc-ion-picker-ios{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;direction:ltr;overflow:hidden}.picker-above-highlight.sc-ion-picker-ios,.picker-below-highlight.sc-ion-picker-ios{display:none;pointer-events:none}.sc-ion-picker-ios-h{--background:var(--ion-background-color, #fff);--border-width:1px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-ios{display:-ms-flexbox;display:flex;height:44px;border-bottom:0.55px solid var(--border-color)}.picker-toolbar-button.sc-ion-picker-ios{-ms-flex:1;flex:1;text-align:end}.picker-toolbar-button.sc-ion-picker-ios:last-child .picker-button.sc-ion-picker-ios{font-weight:600}.picker-toolbar-button.sc-ion-picker-ios:first-child{font-weight:normal;text-align:start}.picker-button.sc-ion-picker-ios,.picker-button.ion-activated.sc-ion-picker-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:1em;padding-right:1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #3880ff);font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-button.sc-ion-picker-ios,.picker-button.ion-activated.sc-ion-picker-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:1em;padding-inline-start:1em;-webkit-padding-end:1em;padding-inline-end:1em}}.picker-columns.sc-ion-picker-ios{height:215px;-webkit-perspective:1000px;perspective:1000px}.picker-above-highlight.sc-ion-picker-ios{left:0;top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:81px;border-bottom:1px solid var(--border-color);background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:10}[dir=rtl].sc-ion-picker-ios .picker-above-highlight.sc-ion-picker-ios,[dir=rtl].sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios,[dir=rtl] .sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}.picker-below-highlight.sc-ion-picker-ios{left:0;top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:119px;border-top:1px solid var(--border-color);background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:11}[dir=rtl].sc-ion-picker-ios .picker-below-highlight.sc-ion-picker-ios,[dir=rtl].sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios,[dir=rtl] .sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}\";\n\nconst pickerMdCss = \".sc-ion-picker-md-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}[dir=rtl].sc-ion-picker-md-h,[dir=rtl] .sc-ion-picker-md-h{left:unset;right:unset;right:0}.overlay-hidden.sc-ion-picker-md-h{display:none}.picker-wrapper.sc-ion-picker-md{border-radius:var(--border-radius);left:0;right:0;bottom:0;margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-wrapper.sc-ion-picker-md{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.picker-toolbar.sc-ion-picker-md{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-md{border:0;font-family:inherit}.picker-button.sc-ion-picker-md:active,.picker-button.sc-ion-picker-md:focus{outline:none}.picker-columns.sc-ion-picker-md{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;direction:ltr;overflow:hidden}.picker-above-highlight.sc-ion-picker-md,.picker-below-highlight.sc-ion-picker-md{display:none;pointer-events:none}.sc-ion-picker-md-h{--background:var(--ion-background-color, #fff);--border-width:0.55px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-md{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;height:44px}.picker-button.sc-ion-picker-md,.picker-button.ion-activated.sc-ion-picker-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:1.1em;padding-right:1.1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #3880ff);font-size:14px;font-weight:500;text-transform:uppercase;-webkit-box-shadow:none;box-shadow:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-button.sc-ion-picker-md,.picker-button.ion-activated.sc-ion-picker-md{padding-left:unset;padding-right:unset;-webkit-padding-start:1.1em;padding-inline-start:1.1em;-webkit-padding-end:1.1em;padding-inline-end:1.1em}}.picker-columns.sc-ion-picker-md{height:216px;-webkit-perspective:1800px;perspective:1800px}.picker-above-highlight.sc-ion-picker-md{left:0;top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:81px;border-bottom:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to bottom, var(--ion-background-color, #fff) 20%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:10}[dir=rtl].sc-ion-picker-md .picker-above-highlight.sc-ion-picker-md,[dir=rtl].sc-ion-picker-md-h .picker-above-highlight.sc-ion-picker-md,[dir=rtl] .sc-ion-picker-md-h .picker-above-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}.picker-below-highlight.sc-ion-picker-md{left:0;top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:119px;border-top:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to top, var(--ion-background-color, #fff) 30%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:11}[dir=rtl].sc-ion-picker-md .picker-below-highlight.sc-ion-picker-md,[dir=rtl].sc-ion-picker-md-h .picker-below-highlight.sc-ion-picker-md,[dir=rtl] .sc-ion-picker-md-h .picker-below-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}\";\n\nconst Picker = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.didPresent = createEvent(this, \"ionPickerDidPresent\", 7);\n    this.willPresent = createEvent(this, \"ionPickerWillPresent\", 7);\n    this.willDismiss = createEvent(this, \"ionPickerWillDismiss\", 7);\n    this.didDismiss = createEvent(this, \"ionPickerDidDismiss\", 7);\n    this.presented = false;\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n    this.keyboardClose = true;\n    /**\n     * Array of buttons to be displayed at the top of the picker.\n     */\n    this.buttons = [];\n    /**\n     * Array of columns to be displayed in the picker.\n     */\n    this.columns = [];\n    /**\n     * Number of milliseconds to wait before dismissing the picker.\n     */\n    this.duration = 0;\n    /**\n     * If `true`, a backdrop will be displayed behind the picker.\n     */\n    this.showBackdrop = true;\n    /**\n     * If `true`, the picker will be dismissed when the backdrop is clicked.\n     */\n    this.backdropDismiss = true;\n    /**\n     * If `true`, the picker will animate.\n     */\n    this.animated = true;\n    this.onBackdropTap = () => {\n      this.dismiss(undefined, BACKDROP);\n    };\n    this.dispatchCancelHandler = (ev) => {\n      const role = ev.detail.role;\n      if (isCancel(role)) {\n        const cancelButton = this.buttons.find((b) => b.role === 'cancel');\n        this.callButtonHandler(cancelButton);\n      }\n    };\n  }\n  connectedCallback() {\n    prepareOverlay(this.el);\n  }\n  /**\n   * Present the picker overlay after it has been created.\n   */\n  async present() {\n    await present(this, 'pickerEnter', iosEnterAnimation, iosEnterAnimation, undefined);\n    if (this.duration > 0) {\n      this.durationTimeout = setTimeout(() => this.dismiss(), this.duration);\n    }\n  }\n  /**\n   * Dismiss the picker overlay after it has been presented.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the picker.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the picker.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   */\n  dismiss(data, role) {\n    if (this.durationTimeout) {\n      clearTimeout(this.durationTimeout);\n    }\n    return dismiss(this, data, role, 'pickerLeave', iosLeaveAnimation, iosLeaveAnimation);\n  }\n  /**\n   * Returns a promise that resolves when the picker did dismiss.\n   */\n  onDidDismiss() {\n    return eventMethod(this.el, 'ionPickerDidDismiss');\n  }\n  /**\n   * Returns a promise that resolves when the picker will dismiss.\n   */\n  onWillDismiss() {\n    return eventMethod(this.el, 'ionPickerWillDismiss');\n  }\n  /**\n   * Get the column that matches the specified name.\n   *\n   * @param name The name of the column.\n   */\n  getColumn(name) {\n    return Promise.resolve(this.columns.find((column) => column.name === name));\n  }\n  async buttonClick(button) {\n    const role = button.role;\n    if (isCancel(role)) {\n      return this.dismiss(undefined, role);\n    }\n    const shouldDismiss = await this.callButtonHandler(button);\n    if (shouldDismiss) {\n      return this.dismiss(this.getSelected(), button.role);\n    }\n    return Promise.resolve();\n  }\n  async callButtonHandler(button) {\n    if (button) {\n      // a handler has been provided, execute it\n      // pass the handler the values from the inputs\n      const rtn = await safeCall(button.handler, this.getSelected());\n      if (rtn === false) {\n        // if the return value of the handler is false then do not dismiss\n        return false;\n      }\n    }\n    return true;\n  }\n  getSelected() {\n    const selected = {};\n    this.columns.forEach((col, index) => {\n      const selectedColumn = col.selectedIndex !== undefined ? col.options[col.selectedIndex] : undefined;\n      selected[col.name] = {\n        text: selectedColumn ? selectedColumn.text : undefined,\n        value: selectedColumn ? selectedColumn.value : undefined,\n        columnIndex: index,\n      };\n    });\n    return selected;\n  }\n  render() {\n    const { htmlAttributes } = this;\n    const mode = getIonMode(this);\n    return (h(Host, Object.assign({ \"aria-modal\": \"true\", tabindex: \"-1\" }, htmlAttributes, { style: {\n        zIndex: `${20000 + this.overlayIndex}`,\n      }, class: Object.assign({ [mode]: true,\n        // Used internally for styling\n        [`picker-${mode}`]: true, 'overlay-hidden': true }, getClassMap(this.cssClass)), onIonBackdropTap: this.onBackdropTap, onIonPickerWillDismiss: this.dispatchCancelHandler }), h(\"ion-backdrop\", { visible: this.showBackdrop, tappable: this.backdropDismiss }), h(\"div\", { tabindex: \"0\" }), h(\"div\", { class: \"picker-wrapper ion-overlay-wrapper\", role: \"dialog\" }, h(\"div\", { class: \"picker-toolbar\" }, this.buttons.map((b) => (h(\"div\", { class: buttonWrapperClass(b) }, h(\"button\", { type: \"button\", onClick: () => this.buttonClick(b), class: buttonClass(b) }, b.text))))), h(\"div\", { class: \"picker-columns\" }, h(\"div\", { class: \"picker-above-highlight\" }), this.presented && this.columns.map((c) => h(\"ion-picker-column\", { col: c })), h(\"div\", { class: \"picker-below-highlight\" }))), h(\"div\", { tabindex: \"0\" })));\n  }\n  get el() { return getElement(this); }\n};\nconst buttonWrapperClass = (button) => {\n  return {\n    [`picker-toolbar-${button.role}`]: button.role !== undefined,\n    'picker-toolbar-button': true,\n  };\n};\nconst buttonClass = (button) => {\n  return Object.assign({ 'picker-button': true, 'ion-activatable': true }, getClassMap(button.cssClass));\n};\nPicker.style = {\n  ios: pickerIosCss,\n  md: pickerMdCss\n};\n\nconst pickerColumnIosCss = \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{left:0;top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}[dir=rtl] .picker-opt,:host-context([dir=rtl]) .picker-opt{left:unset;right:unset;right:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{padding-left:4px;padding-right:4px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:20px;line-height:42px;pointer-events:none}.picker-opt{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-transform-origin:center center;transform-origin:center center;height:46px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:20px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}[dir=rtl] .picker-opt,:host-context([dir=rtl]) .picker-opt{-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}\";\n\nconst pickerColumnMdCss = \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{left:0;top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}[dir=rtl] .picker-opt,:host-context([dir=rtl]) .picker-opt{left:unset;right:unset;right:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:22px;line-height:42px;pointer-events:none}.picker-opt{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;height:43px;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:22px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}.picker-prefix,.picker-suffix,.picker-opt.picker-opt-selected{color:var(--ion-color-primary, #3880ff)}\";\n\nconst PickerColumnCmp = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionPickerColChange = createEvent(this, \"ionPickerColChange\", 7);\n    this.optHeight = 0;\n    this.rotateFactor = 0;\n    this.scaleFactor = 1;\n    this.velocity = 0;\n    this.y = 0;\n    this.noAnimate = true;\n  }\n  colChanged() {\n    this.refresh();\n  }\n  async connectedCallback() {\n    let pickerRotateFactor = 0;\n    let pickerScaleFactor = 0.81;\n    const mode = getIonMode(this);\n    if (mode === 'ios') {\n      pickerRotateFactor = -0.46;\n      pickerScaleFactor = 1;\n    }\n    this.rotateFactor = pickerRotateFactor;\n    this.scaleFactor = pickerScaleFactor;\n    this.gesture = (await import('./index-3f1a7d95.js')).createGesture({\n      el: this.el,\n      gestureName: 'picker-swipe',\n      gesturePriority: 100,\n      threshold: 0,\n      passive: false,\n      onStart: (ev) => this.onStart(ev),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.gesture.enable();\n    this.tmrId = setTimeout(() => {\n      this.noAnimate = false;\n      this.refresh(true);\n    }, 250);\n  }\n  componentDidLoad() {\n    const colEl = this.optsEl;\n    if (colEl) {\n      // DOM READ\n      // We perfom a DOM read over a rendered item, this needs to happen after the first render\n      this.optHeight = colEl.firstElementChild ? colEl.firstElementChild.clientHeight : 0;\n    }\n    this.refresh();\n  }\n  disconnectedCallback() {\n    cancelAnimationFrame(this.rafId);\n    clearTimeout(this.tmrId);\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  emitColChange() {\n    this.ionPickerColChange.emit(this.col);\n  }\n  setSelected(selectedIndex, duration) {\n    // if there is a selected index, then figure out it's y position\n    // if there isn't a selected index, then just use the top y position\n    const y = selectedIndex > -1 ? -(selectedIndex * this.optHeight) : 0;\n    this.velocity = 0;\n    // set what y position we're at\n    cancelAnimationFrame(this.rafId);\n    this.update(y, duration, true);\n    this.emitColChange();\n  }\n  update(y, duration, saveY) {\n    if (!this.optsEl) {\n      return;\n    }\n    // ensure we've got a good round number :)\n    let translateY = 0;\n    let translateZ = 0;\n    const { col, rotateFactor } = this;\n    const selectedIndex = (col.selectedIndex = this.indexForY(-y));\n    const durationStr = duration === 0 ? '' : duration + 'ms';\n    const scaleStr = `scale(${this.scaleFactor})`;\n    const children = this.optsEl.children;\n    for (let i = 0; i < children.length; i++) {\n      const button = children[i];\n      const opt = col.options[i];\n      const optOffset = i * this.optHeight + y;\n      let transform = '';\n      if (rotateFactor !== 0) {\n        const rotateX = optOffset * rotateFactor;\n        if (Math.abs(rotateX) <= 90) {\n          translateY = 0;\n          translateZ = 90;\n          transform = `rotateX(${rotateX}deg) `;\n        }\n        else {\n          translateY = -9999;\n        }\n      }\n      else {\n        translateZ = 0;\n        translateY = optOffset;\n      }\n      const selected = selectedIndex === i;\n      transform += `translate3d(0px,${translateY}px,${translateZ}px) `;\n      if (this.scaleFactor !== 1 && !selected) {\n        transform += scaleStr;\n      }\n      // Update transition duration\n      if (this.noAnimate) {\n        opt.duration = 0;\n        button.style.transitionDuration = '';\n      }\n      else if (duration !== opt.duration) {\n        opt.duration = duration;\n        button.style.transitionDuration = durationStr;\n      }\n      // Update transform\n      if (transform !== opt.transform) {\n        opt.transform = transform;\n      }\n      button.style.transform = transform;\n      // Update selected item\n      if (selected !== opt.selected) {\n        opt.selected = selected;\n        if (selected) {\n          button.classList.add(PICKER_OPT_SELECTED);\n        }\n        else {\n          button.classList.remove(PICKER_OPT_SELECTED);\n        }\n      }\n    }\n    this.col.prevSelected = selectedIndex;\n    if (saveY) {\n      this.y = y;\n    }\n    if (this.lastIndex !== selectedIndex) {\n      // have not set a last index yet\n      hapticSelectionChanged();\n      this.lastIndex = selectedIndex;\n    }\n  }\n  decelerate() {\n    if (this.velocity !== 0) {\n      // still decelerating\n      this.velocity *= DECELERATION_FRICTION;\n      // do not let it go slower than a velocity of 1\n      this.velocity = this.velocity > 0 ? Math.max(this.velocity, 1) : Math.min(this.velocity, -1);\n      let y = this.y + this.velocity;\n      if (y > this.minY) {\n        // whoops, it's trying to scroll up farther than the options we have!\n        y = this.minY;\n        this.velocity = 0;\n      }\n      else if (y < this.maxY) {\n        // gahh, it's trying to scroll down farther than we can!\n        y = this.maxY;\n        this.velocity = 0;\n      }\n      this.update(y, 0, true);\n      const notLockedIn = Math.round(y) % this.optHeight !== 0 || Math.abs(this.velocity) > 1;\n      if (notLockedIn) {\n        // isn't locked in yet, keep decelerating until it is\n        this.rafId = requestAnimationFrame(() => this.decelerate());\n      }\n      else {\n        this.velocity = 0;\n        this.emitColChange();\n        hapticSelectionEnd();\n      }\n    }\n    else if (this.y % this.optHeight !== 0) {\n      // needs to still get locked into a position so options line up\n      const currentPos = Math.abs(this.y % this.optHeight);\n      // create a velocity in the direction it needs to scroll\n      this.velocity = currentPos > this.optHeight / 2 ? 1 : -1;\n      this.decelerate();\n    }\n  }\n  indexForY(y) {\n    return Math.min(Math.max(Math.abs(Math.round(y / this.optHeight)), 0), this.col.options.length - 1);\n  }\n  // TODO should this check disabled?\n  onStart(detail) {\n    // We have to prevent default in order to block scrolling under the picker\n    // but we DO NOT have to stop propagation, since we still want\n    // some \"click\" events to capture\n    if (detail.event.cancelable) {\n      detail.event.preventDefault();\n    }\n    detail.event.stopPropagation();\n    hapticSelectionStart();\n    // reset everything\n    cancelAnimationFrame(this.rafId);\n    const options = this.col.options;\n    let minY = options.length - 1;\n    let maxY = 0;\n    for (let i = 0; i < options.length; i++) {\n      if (!options[i].disabled) {\n        minY = Math.min(minY, i);\n        maxY = Math.max(maxY, i);\n      }\n    }\n    this.minY = -(minY * this.optHeight);\n    this.maxY = -(maxY * this.optHeight);\n  }\n  onMove(detail) {\n    if (detail.event.cancelable) {\n      detail.event.preventDefault();\n    }\n    detail.event.stopPropagation();\n    // update the scroll position relative to pointer start position\n    let y = this.y + detail.deltaY;\n    if (y > this.minY) {\n      // scrolling up higher than scroll area\n      y = Math.pow(y, 0.8);\n      this.bounceFrom = y;\n    }\n    else if (y < this.maxY) {\n      // scrolling down below scroll area\n      y += Math.pow(this.maxY - y, 0.9);\n      this.bounceFrom = y;\n    }\n    else {\n      this.bounceFrom = 0;\n    }\n    this.update(y, 0, false);\n  }\n  onEnd(detail) {\n    if (this.bounceFrom > 0) {\n      // bounce back up\n      this.update(this.minY, 100, true);\n      this.emitColChange();\n      return;\n    }\n    else if (this.bounceFrom < 0) {\n      // bounce back down\n      this.update(this.maxY, 100, true);\n      this.emitColChange();\n      return;\n    }\n    this.velocity = clamp(-MAX_PICKER_SPEED, detail.velocityY * 23, MAX_PICKER_SPEED);\n    if (this.velocity === 0 && detail.deltaY === 0) {\n      const opt = detail.event.target.closest('.picker-opt');\n      if (opt === null || opt === void 0 ? void 0 : opt.hasAttribute('opt-index')) {\n        this.setSelected(parseInt(opt.getAttribute('opt-index'), 10), TRANSITION_DURATION);\n      }\n    }\n    else {\n      this.y += detail.deltaY;\n      if (Math.abs(detail.velocityY) < 0.05) {\n        const isScrollingUp = detail.deltaY > 0;\n        const optHeightFraction = (Math.abs(this.y) % this.optHeight) / this.optHeight;\n        if (isScrollingUp && optHeightFraction > 0.5) {\n          this.velocity = Math.abs(this.velocity) * -1;\n        }\n        else if (!isScrollingUp && optHeightFraction <= 0.5) {\n          this.velocity = Math.abs(this.velocity);\n        }\n      }\n      this.decelerate();\n    }\n  }\n  refresh(forceRefresh) {\n    let min = this.col.options.length - 1;\n    let max = 0;\n    const options = this.col.options;\n    for (let i = 0; i < options.length; i++) {\n      if (!options[i].disabled) {\n        min = Math.min(min, i);\n        max = Math.max(max, i);\n      }\n    }\n    /**\n     * Only update selected value if column has a\n     * velocity of 0. If it does not, then the\n     * column is animating might land on\n     * a value different than the value at\n     * selectedIndex\n     */\n    if (this.velocity !== 0) {\n      return;\n    }\n    const selectedIndex = clamp(min, this.col.selectedIndex || 0, max);\n    if (this.col.prevSelected !== selectedIndex || forceRefresh) {\n      const y = selectedIndex * this.optHeight * -1;\n      this.velocity = 0;\n      this.update(y, TRANSITION_DURATION, true);\n    }\n  }\n  render() {\n    const col = this.col;\n    const Button = 'button';\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'picker-col': true,\n        'picker-opts-left': this.col.align === 'left',\n        'picker-opts-right': this.col.align === 'right',\n      }, style: {\n        'max-width': this.col.columnWidth,\n      } }, col.prefix && (h(\"div\", { class: \"picker-prefix\", style: { width: col.prefixWidth } }, col.prefix)), h(\"div\", { class: \"picker-opts\", style: { maxWidth: col.optionsWidth }, ref: (el) => (this.optsEl = el) }, col.options.map((o, index) => (h(Button, { type: \"button\", class: { 'picker-opt': true, 'picker-opt-disabled': !!o.disabled }, \"opt-index\": index }, o.text)))), col.suffix && (h(\"div\", { class: \"picker-suffix\", style: { width: col.suffixWidth } }, col.suffix))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"col\": [\"colChanged\"]\n  }; }\n};\nconst PICKER_OPT_SELECTED = 'picker-opt-selected';\nconst DECELERATION_FRICTION = 0.97;\nconst MAX_PICKER_SPEED = 90;\nconst TRANSITION_DURATION = 150;\nPickerColumnCmp.style = {\n  ios: pickerColumnIosCss,\n  md: pickerColumnMdCss\n};\n\nexport { Datetime as ion_datetime, Picker as ion_picker, PickerColumnCmp as ion_picker_column };\n"]}