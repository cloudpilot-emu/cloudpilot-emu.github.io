{"version":3,"file":"9707.eaf86e8ee180654a.js","mappings":"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","names":["Style","Dark","Light","Default","StatusBar","getEngine","capacitor","getCapacitor","isPluginAvailable","Plugins","supportsDefaultStatusBarStyle","PluginHeaders","setStyle","options","engine","this","getStyle","_ref","_asyncToGenerator","style","getInfo","apply","arguments","getBackdropValueForSheet","x","backdropBreakpoint","slope","b","setCardStatusBarDark","win","innerWidth","setCardStatusBarDefault","defaultStyle","handleCanDismiss","_ref2","el","animation","canDismiss","undefined","GESTURE","isRunning","onFinish","dismiss","oneTimeCallback","_x","_x2","calculateSpringStep","t","computeDuration","remaining","velocity","clamp","Math","abs","createSheetEnterAnimation","opts","currentBreakpoint","shouldShowBackdrop","initialBackdrop","backdropAnimation","createAnimation","fromTo","beforeStyles","afterClearStyles","wrapperAnimation","keyframes","offset","opacity","transform","createSheetLeaveAnimation","backdropValue","defaultBackdrop","customBackdrop","iosEnterAnimation","baseEl","presentingEl","root","getElementRoot","addElement","querySelector","querySelectorAll","baseAnimation","easing","duration","addAnimation","isMobile","window","hasCardModal","tagName","presentingElement","presentingElRoot","presentingAnimation","overflow","bodyEl","document","body","transformOffset","CSS","supports","finalTransform","afterStyles","beforeAddWrite","setProperty","filter","borderRadius","shadowAnimation","iosLeaveAnimation","beforeClearStyles","currentStep","Array","from","m","length","mdEnterAnimation","mdLeaveAnimation","Modal","constructor","hostRef","registerInstance","didPresent","createEvent","willPresent","willDismiss","didDismiss","ionBreakpointDidChange","didPresentShorthand","willPresentShorthand","willDismissShorthand","didDismissShorthand","ionMount","lockController","createLockController","triggerController","createTriggerController","coreDelegate","CoreDelegate","isSheetModal","inheritedAttributes","inline","gestureAnimationDismissing","onHandleClick","sheetTransition","handleBehavior","moveToNextBreakpoint","onBackdropTap","BACKDROP","onLifecycle","modalEvent","usersElement","name","LIFECYCLE_MAP","type","ev","CustomEvent","bubbles","cancelable","detail","dispatchEvent","presented","hasController","overlayIndex","delegate","keyboardClose","enterAnimation","leaveAnimation","breakpoints","initialBreakpoint","handle","component","componentProps","cssClass","backdropDismiss","showBackdrop","animated","htmlAttributes","isOpen","trigger","keepContentsMounted","onIsOpenChange","newValue","oldValue","present","triggerChanged","addClickListener","breakpointsChanged","sortedBreakpoints","sort","a","connectedCallback","prepareOverlay","disconnectedCallback","removeClickListener","componentWillLoad","inheritAttributes","includes","printIonWarning","setOverlayId","componentDidLoad","raf","getDelegate","force","workingDelegate","parentNode","checkCanDismiss","data","role","_this","_this2","unlock","lock","emit","attachComponent","hasLazyBuild","deepReady","waitForMount","writeTask","classList","add","getIonMode","statusBarStyle","keyboardOpenCallback","gesture","enable","addEventListener","KEYBOARD_DID_OPEN","initSheetGesture","initSwipeToClose","_a","_this3","animationBuilder","config","get","ani","findIonContent","printIonContentErrorMsg","createSwipeToCloseGesture","onDismiss","height","offsetHeight","canDismissBlocksGesture","contentEl","scrollEl","initialScrollY","lastStep","createGesture","gestureName","gesturePriority","OVERLAY_GESTURE_PRIORITY","direction","threshold","canStart","target","event","closest","findClosestIonContent","isIonContent","scrollTop","onStart","deltaY","scrollY","disableContentScrollY","progressStart","onMove","step","isAttemptingDismissWithCanDismiss","maxStep","processedStep","clampedStep","progressStep","DISMISS_THRESHOLD","onEnd","velocityY","shouldComplete","newStepValue","getTimeGivenProgression","resetContentScrollY","progressEnd","wrapperEl","moveSheetToBreakpoint","createSheetGesture","backdropEl","getCurrentBreakpoint","onBreakpointChange","SheetDefaults","WRAPPER_KEYFRAMES","BACKDROP_KEYFRAMES","clientHeight","childAnimations","find","id","maxBreakpoint","minBreakpoint","enableBackdrop","remove","disableBackdrop","breakpoint","breakpointOffset","shouldPreventDismiss","snapToBreakpoint","shouldRemainOpen","Promise","resolve","content","focus","secondToLastBreakpoint","diff","reduce","sheetOnDismiss","_this4","_this5","removeEventListener","enteringAnimation","activeAnimations","dismissed","detachComponent","destroy","forEach","onDidDismiss","eventMethod","onWillDismiss","setCurrentBreakpoint","_this6","_this7","_this8","allowedBreakpoints","nextBreakpointIndex","indexOf","nextBreakpoint","render","showHandle","mode","isCardModal","isHandleCycle","h","Host","Object","assign","tabindex","zIndex","class","getClassMap","onIonBackdropTap","onIonModalDidPresent","onIonModalWillPresent","onIonModalWillDismiss","onIonModalDidDismiss","ref","visible","tappable","part","tabIndex","onClick","getElement","watchers","ionModalDidPresent","ionModalWillPresent","ionModalWillDismiss","ionModalDidDismiss","ios","md","hostContext","selector","createColorClasses","color","cssClassMap","classes","map","getClassList","isArray","split","c","trim","SCHEME","openURL","url","test","router","preventDefault","push","_x3","_x4"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-modal.entry.js","./node_modules/@ionic/core/dist/esm/theme-01f3f29c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, w as writeTask, h, H as Host, f as getElement } from './index-b7d870cf.js';\nimport { f as findClosestIonContent, i as isIonContent, d as disableContentScrollY, r as resetContentScrollY, a as findIonContent, p as printIonContentErrorMsg } from './index-b9e742e5.js';\nimport { C as CoreDelegate, a as attachComponent, d as detachComponent } from './framework-delegate-bc1fd82a.js';\nimport { g as getElementRoot, l as clamp, r as raf, k as inheritAttributes, m as hasLazyBuild } from './helpers-ae653409.js';\nimport { c as createLockController } from './lock-controller-316928be.js';\nimport { p as printIonWarning } from './index-9b0d46f4.js';\nimport { g as getCapacitor } from './capacitor-59395cbd.js';\nimport { G as GESTURE, O as OVERLAY_GESTURE_PRIORITY, e as createTriggerController, B as BACKDROP, j as prepareOverlay, k as setOverlayId, f as present, n as activeAnimations, g as dismiss, h as eventMethod } from './overlays-b33f6bca.js';\nimport { g as getClassMap } from './theme-01f3f29c.js';\nimport { e as deepReady, w as waitForMount } from './index-4743453d.js';\nimport { b as getIonMode, c as config } from './ionic-global-1f99b929.js';\nimport { KEYBOARD_DID_OPEN } from './keyboard-52278bd7.js';\nimport { c as createAnimation } from './animation-dde8cc0d.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-fe2083dc.js';\nimport { createGesture } from './index-2cf77112.js';\nimport { w as win } from './index-a5d50daf.js';\nimport './hardware-back-button-b2bc76db.js';\nimport './keyboard-73175e24.js';\nimport './gesture-controller-1bf57181.js';\n\nvar Style;\n(function (Style) {\n    Style[\"Dark\"] = \"DARK\";\n    Style[\"Light\"] = \"LIGHT\";\n    Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nconst StatusBar = {\n    getEngine() {\n        const capacitor = getCapacitor();\n        if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('StatusBar')) {\n            return capacitor.Plugins.StatusBar;\n        }\n        return undefined;\n    },\n    // TODO FW-4696 Remove supportDefaultStatusBarStyle in Ionic v8\n    supportsDefaultStatusBarStyle() {\n        const capacitor = getCapacitor();\n        /**\n         * The 'DEFAULT' status bar style was added\n         * to the @capacitor/status-bar plugin in Capacitor 3.\n         * PluginHeaders is only supported in Capacitor 3+,\n         * so we can use this to detect Capacitor 3.\n         */\n        return !!(capacitor === null || capacitor === void 0 ? void 0 : capacitor.PluginHeaders);\n    },\n    setStyle(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.setStyle(options);\n    },\n    getStyle: async function () {\n        const engine = this.getEngine();\n        if (!engine) {\n            return Style.Default;\n        }\n        const { style } = await engine.getInfo();\n        return style;\n    },\n};\n\n/**\n * Use y = mx + b to\n * figure out the backdrop value\n * at a particular x coordinate. This\n * is useful when the backdrop does\n * not begin to fade in until after\n * the 0 breakpoint.\n */\nconst getBackdropValueForSheet = (x, backdropBreakpoint) => {\n    /**\n     * We will use these points:\n     * (backdropBreakpoint, 0)\n     * (maxBreakpoint, 1)\n     * We know that at the beginning breakpoint,\n     * the backdrop will be hidden. We also\n     * know that at the maxBreakpoint, the backdrop\n     * must be fully visible. maxBreakpoint should\n     * always be 1 even if the maximum value\n     * of the breakpoints array is not 1 since\n     * the animation runs from a progress of 0\n     * to a progress of 1.\n     * m = (y2 - y1) / (x2 - x1)\n     *\n     * This is simplified from:\n     * m = (1 - 0) / (maxBreakpoint - backdropBreakpoint)\n     *\n     * If the backdropBreakpoint is 1, we return 0 as the\n     * backdrop is completely hidden.\n     *\n     */\n    if (backdropBreakpoint === 1) {\n        return 0;\n    }\n    const slope = 1 / (1 - backdropBreakpoint);\n    /**\n     * From here, compute b which is\n     * the backdrop opacity if the offset\n     * is 0. If the backdrop does not\n     * begin to fade in until after the\n     * 0 breakpoint, this b value will be\n     * negative. This is fine as we never pass\n     * b directly into the animation keyframes.\n     * b = y - mx\n     * Use a known point: (backdropBreakpoint, 0)\n     * This is simplified from:\n     * b = 0 - (backdropBreakpoint * slope)\n     */\n    const b = -(backdropBreakpoint * slope);\n    /**\n     * Finally, we can now determine the\n     * backdrop offset given an arbitrary\n     * gesture offset.\n     */\n    return x * slope + b;\n};\n/**\n * The tablet/desktop card modal activates\n * when the window width is >= 768.\n * At that point, the presenting element\n * is not transformed, so we do not need to\n * adjust the status bar color.\n *\n * Note: We check supportsDefaultStatusBarStyle so that\n * Capacitor <= 2 users do not get their status bar\n * stuck in an inconsistent state due to a lack of\n * support for Style.Default.\n */\nconst setCardStatusBarDark = () => {\n    // TODO FW-4696 Remove supportDefaultStatusBarStyle in Ionic v8\n    if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\n        return;\n    }\n    StatusBar.setStyle({ style: Style.Dark });\n};\nconst setCardStatusBarDefault = (defaultStyle = Style.Default) => {\n    // TODO FW-4696 Remove supportDefaultStatusBarStyle in Ionic v8\n    if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\n        return;\n    }\n    StatusBar.setStyle({ style: defaultStyle });\n};\n\nconst handleCanDismiss = async (el, animation) => {\n    /**\n     * If canDismiss is not a function\n     * then we can return early. If canDismiss is `true`,\n     * then canDismissBlocksGesture is `false` as canDismiss\n     * will never interrupt the gesture. As a result,\n     * this code block is never reached. If canDismiss is `false`,\n     * then we never dismiss.\n     */\n    if (typeof el.canDismiss !== 'function') {\n        return;\n    }\n    /**\n     * Run the canDismiss callback.\n     * If the function returns `true`,\n     * then we can proceed with dismiss.\n     */\n    const shouldDismiss = await el.canDismiss(undefined, GESTURE);\n    if (!shouldDismiss) {\n        return;\n    }\n    /**\n     * If canDismiss resolved after the snap\n     * back animation finished, we can\n     * dismiss immediately.\n     *\n     * If canDismiss resolved before the snap\n     * back animation finished, we need to\n     * wait until the snap back animation is\n     * done before dismissing.\n     */\n    if (animation.isRunning()) {\n        animation.onFinish(() => {\n            el.dismiss(undefined, 'handler');\n        }, { oneTimeCallback: true });\n    }\n    else {\n        el.dismiss(undefined, 'handler');\n    }\n};\n/**\n * This function lets us simulate a realistic spring-like animation\n * when swiping down on the modal.\n * There are two forces that we need to use to compute the spring physics:\n *\n * 1. Stiffness, k: This is a measure of resistance applied a spring.\n * 2. Dampening, c: This value has the effect of reducing or preventing oscillation.\n *\n * Using these two values, we can calculate the Spring Force and the Dampening Force\n * to compute the total force applied to a spring.\n *\n * Spring Force: This force pulls a spring back into its equilibrium position.\n * Hooke's Law tells us that that spring force (FS) = kX.\n * k is the stiffness of a spring, and X is the displacement of the spring from its\n * equilibrium position. In this case, it is the amount by which the free end\n * of a spring was displaced (stretched/pushed) from its \"relaxed\" position.\n *\n * Dampening Force: This force slows down motion. Without it, a spring would oscillate forever.\n * The dampening force, FD, can be found via this formula: FD = -cv\n * where c the dampening value and v is velocity.\n *\n * Therefore, the resulting force that is exerted on the block is:\n * F = FS + FD = -kX - cv\n *\n * Newton's 2nd Law tells us that F = ma:\n * ma = -kX - cv.\n *\n * For Ionic's purposes, we can assume that m = 1:\n * a = -kX - cv\n *\n * Imagine a block attached to the end of a spring. At equilibrium\n * the block is at position x = 1.\n * Pressing on the block moves it to position x = 0;\n * So, to calculate the displacement, we need to take the\n * current position and subtract the previous position from it.\n * X = x - x0 = 0 - 1 = -1.\n *\n * For Ionic's purposes, we are only pushing on the spring modal\n * so we have a max position of 1.\n * As a result, we can expand displacement to this formula:\n * X = x - 1\n *\n * a = -k(x - 1) - cv\n *\n * We can represent the motion of something as a function of time: f(t) = x.\n * The derivative of position gives us the velocity: f'(t)\n * The derivative of the velocity gives us the acceleration: f''(t)\n *\n * We can substitute the formula above with these values:\n *\n * f\"(t) = -k * (f(t) - 1) - c * f'(t)\n *\n * This is called a differential equation.\n *\n * We know that at t = 0, we are at x = 0 because the modal does not move: f(0) = 0\n * This means our velocity is also zero: f'(0) = 0.\n *\n * We can cheat a bit and plug the formula into Wolfram Alpha.\n * However, we need to pick stiffness and dampening values:\n * k = 0.57\n * c = 15\n *\n * I picked these as they are fairly close to native iOS's spring effect\n * with the modal.\n *\n * What we plug in is this: f(0) = 0; f'(0) = 0; f''(t) = -0.57(f(t) - 1) - 15f'(t)\n *\n * The result is a formula that lets us calculate the acceleration\n * for a given time t.\n * Note: This is the approximate form of the solution. Wolfram Alpha will\n * give you a complex differential equation too.\n */\nconst calculateSpringStep = (t) => {\n    return 0.00255275 * 2.71828 ** (-14.9619 * t) - 1.00255 * 2.71828 ** (-0.0380968 * t) + 1;\n};\n\n// Defaults for the card swipe animation\nconst SwipeToCloseDefaults = {\n    MIN_PRESENTING_SCALE: 0.93,\n};\nconst createSwipeToCloseGesture = (el, animation, statusBarStyle, onDismiss) => {\n    /**\n     * The step value at which a card modal\n     * is eligible for dismissing via gesture.\n     */\n    const DISMISS_THRESHOLD = 0.5;\n    const height = el.offsetHeight;\n    let isOpen = false;\n    let canDismissBlocksGesture = false;\n    let contentEl = null;\n    let scrollEl = null;\n    const canDismissMaxStep = 0.2;\n    let initialScrollY = true;\n    let lastStep = 0;\n    const getScrollY = () => {\n        if (contentEl && isIonContent(contentEl)) {\n            return contentEl.scrollY;\n            /**\n             * Custom scroll containers are intended to be\n             * used with virtual scrolling, so we assume\n             * there is scrolling in this case.\n             */\n        }\n        else {\n            return true;\n        }\n    };\n    const canStart = (detail) => {\n        const target = detail.event.target;\n        if (target === null || !target.closest) {\n            return true;\n        }\n        /**\n         * If we are swiping on the content,\n         * swiping should only be possible if\n         * the content is scrolled all the way\n         * to the top so that we do not interfere\n         * with scrolling.\n         *\n         * We cannot assume that the `ion-content`\n         * target will remain consistent between\n         * swipes. For example, when using\n         * ion-nav within a card modal it is\n         * possible to swipe, push a view, and then\n         * swipe again. The target content will not\n         * be the same between swipes.\n         */\n        contentEl = findClosestIonContent(target);\n        if (contentEl) {\n            /**\n             * The card should never swipe to close\n             * on the content with a refresher.\n             * Note: We cannot solve this by making the\n             * swipeToClose gesture have a higher priority\n             * than the refresher gesture as the iOS native\n             * refresh gesture uses a scroll listener in\n             * addition to a gesture.\n             *\n             * Note: Do not use getScrollElement here\n             * because we need this to be a synchronous\n             * operation, and getScrollElement is\n             * asynchronous.\n             */\n            if (isIonContent(contentEl)) {\n                const root = getElementRoot(contentEl);\n                scrollEl = root.querySelector('.inner-scroll');\n            }\n            else {\n                scrollEl = contentEl;\n            }\n            const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n            return !hasRefresherInContent && scrollEl.scrollTop === 0;\n        }\n        /**\n         * Card should be swipeable on all\n         * parts of the modal except for the footer.\n         */\n        const footer = target.closest('ion-footer');\n        if (footer === null) {\n            return true;\n        }\n        return false;\n    };\n    const onStart = (detail) => {\n        const { deltaY } = detail;\n        /**\n         * Get the initial scrollY value so\n         * that we can correctly reset the scrollY\n         * prop when the gesture ends.\n         */\n        initialScrollY = getScrollY();\n        /**\n         * If canDismiss is anything other than `true`\n         * then users should be able to swipe down\n         * until a threshold is hit. At that point,\n         * the card modal should not proceed any further.\n         * TODO (FW-937)\n         * Remove undefined check\n         */\n        canDismissBlocksGesture = el.canDismiss !== undefined && el.canDismiss !== true;\n        /**\n         * If we are pulling down, then\n         * it is possible we are pulling on the\n         * content. We do not want scrolling to\n         * happen at the same time as the gesture.\n         */\n        if (deltaY > 0 && contentEl) {\n            disableContentScrollY(contentEl);\n        }\n        animation.progressStart(true, isOpen ? 1 : 0);\n    };\n    const onMove = (detail) => {\n        const { deltaY } = detail;\n        /**\n         * If we are pulling down, then\n         * it is possible we are pulling on the\n         * content. We do not want scrolling to\n         * happen at the same time as the gesture.\n         */\n        if (deltaY > 0 && contentEl) {\n            disableContentScrollY(contentEl);\n        }\n        /**\n         * If we are swiping on the content\n         * then the swipe gesture should only\n         * happen if we are pulling down.\n         *\n         * However, if we pull up and\n         * then down such that the scroll position\n         * returns to 0, we should be able to swipe\n         * the card.\n         */\n        const step = detail.deltaY / height;\n        /**\n         * Check if user is swiping down and\n         * if we have a canDismiss value that\n         * should block the gesture from\n         * proceeding,\n         */\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n        /**\n         * If we are blocking the gesture from dismissing,\n         * set the max step value so that the sheet cannot be\n         * completely hidden.\n         */\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        /**\n         * If we are blocking the gesture from\n         * dismissing, calculate the spring modifier value\n         * this will be added to the starting breakpoint\n         * value to give the gesture a spring-like feeling.\n         * Note that the starting breakpoint is always 0,\n         * so we omit adding 0 to the result.\n         */\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\n        animation.progressStep(clampedStep);\n        /**\n         * When swiping down half way, the status bar style\n         * should be reset to its default value.\n         *\n         * We track lastStep so that we do not fire these\n         * functions on every onMove, only when the user has\n         * crossed a certain threshold.\n         */\n        if (clampedStep >= DISMISS_THRESHOLD && lastStep < DISMISS_THRESHOLD) {\n            setCardStatusBarDefault(statusBarStyle);\n            /**\n             * However, if we swipe back up, then the\n             * status bar style should be set to have light\n             * text on a dark background.\n             */\n        }\n        else if (clampedStep < DISMISS_THRESHOLD && lastStep >= DISMISS_THRESHOLD) {\n            setCardStatusBarDark();\n        }\n        lastStep = clampedStep;\n    };\n    const onEnd = (detail) => {\n        const velocity = detail.velocityY;\n        const step = detail.deltaY / height;\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\n        const threshold = (detail.deltaY + velocity * 1000) / height;\n        /**\n         * If canDismiss blocks\n         * the swipe gesture, then the\n         * animation can never complete until\n         * canDismiss is checked.\n         */\n        const shouldComplete = !isAttemptingDismissWithCanDismiss && threshold >= DISMISS_THRESHOLD;\n        let newStepValue = shouldComplete ? -0.001 : 0.001;\n        if (!shouldComplete) {\n            animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n            newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], clampedStep)[0];\n        }\n        else {\n            animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\n            newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], clampedStep)[0];\n        }\n        const duration = shouldComplete\n            ? computeDuration(step * height, velocity)\n            : computeDuration((1 - clampedStep) * height, velocity);\n        isOpen = shouldComplete;\n        gesture.enable(false);\n        if (contentEl) {\n            resetContentScrollY(contentEl, initialScrollY);\n        }\n        animation\n            .onFinish(() => {\n            if (!shouldComplete) {\n                gesture.enable(true);\n            }\n        })\n            .progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);\n        /**\n         * If the canDismiss value blocked the gesture\n         * from proceeding, then we should ignore whatever\n         * shouldComplete is. Whether or not the modal\n         * animation should complete is now determined by\n         * canDismiss.\n         *\n         * If the user swiped >25% of the way\n         * to the max step, then we should\n         * check canDismiss. 25% was chosen\n         * to avoid accidental swipes.\n         */\n        if (isAttemptingDismissWithCanDismiss && clampedStep > maxStep / 4) {\n            handleCanDismiss(el, animation);\n        }\n        else if (shouldComplete) {\n            onDismiss();\n        }\n    };\n    const gesture = createGesture({\n        el,\n        gestureName: 'modalSwipeToClose',\n        gesturePriority: OVERLAY_GESTURE_PRIORITY,\n        direction: 'y',\n        threshold: 10,\n        canStart,\n        onStart,\n        onMove,\n        onEnd,\n    });\n    return gesture;\n};\nconst computeDuration = (remaining, velocity) => {\n    return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\n};\n\nconst createSheetEnterAnimation = (opts) => {\n    const { currentBreakpoint, backdropBreakpoint } = opts;\n    /**\n     * If the backdropBreakpoint is undefined, then the backdrop\n     * should always fade in. If the backdropBreakpoint came before the\n     * current breakpoint, then the backdrop should be fading in.\n     */\n    const shouldShowBackdrop = backdropBreakpoint === undefined || backdropBreakpoint < currentBreakpoint;\n    const initialBackdrop = shouldShowBackdrop ? `calc(var(--backdrop-opacity) * ${currentBreakpoint})` : '0';\n    const backdropAnimation = createAnimation('backdropAnimation').fromTo('opacity', 0, initialBackdrop);\n    if (shouldShowBackdrop) {\n        backdropAnimation\n            .beforeStyles({\n            'pointer-events': 'none',\n        })\n            .afterClearStyles(['pointer-events']);\n    }\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n        { offset: 0, opacity: 1, transform: 'translateY(100%)' },\n        { offset: 1, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n    ]);\n    return { wrapperAnimation, backdropAnimation };\n};\nconst createSheetLeaveAnimation = (opts) => {\n    const { currentBreakpoint, backdropBreakpoint } = opts;\n    /**\n     * Backdrop does not always fade in from 0 to 1 if backdropBreakpoint\n     * is defined, so we need to account for that offset by figuring out\n     * what the current backdrop value should be.\n     */\n    const backdropValue = `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(currentBreakpoint, backdropBreakpoint)})`;\n    const defaultBackdrop = [\n        { offset: 0, opacity: backdropValue },\n        { offset: 1, opacity: 0 },\n    ];\n    const customBackdrop = [\n        { offset: 0, opacity: backdropValue },\n        { offset: backdropBreakpoint, opacity: 0 },\n        { offset: 1, opacity: 0 },\n    ];\n    const backdropAnimation = createAnimation('backdropAnimation').keyframes(backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop);\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n        { offset: 0, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n        { offset: 1, opacity: 1, transform: `translateY(100%)` },\n    ]);\n    return { wrapperAnimation, backdropAnimation };\n};\n\nconst createEnterAnimation$1 = () => {\n    const backdropAnimation = createAnimation()\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * iOS Modal Enter Animation for the Card presentation style\n */\nconst iosEnterAnimation = (baseEl, opts) => {\n    const { presentingEl, currentBreakpoint } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation$1();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n    const baseAnimation = createAnimation('entering-base')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(500)\n        .addAnimation(wrapperAnimation);\n    if (presentingEl) {\n        const isMobile = window.innerWidth < 768;\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n        const presentingElRoot = getElementRoot(presentingEl);\n        const presentingAnimation = createAnimation().beforeStyles({\n            transform: 'translateY(0)',\n            'transform-origin': 'top center',\n            overflow: 'hidden',\n        });\n        const bodyEl = document.body;\n        if (isMobile) {\n            /**\n             * Fallback for browsers that does not support `max()` (ex: Firefox)\n             * No need to worry about statusbar padding since engines like Gecko\n             * are not used as the engine for standalone Cordova/Capacitor apps\n             */\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n            presentingAnimation\n                .afterStyles({\n                transform: finalTransform,\n            })\n                .beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black'))\n                .addElement(presentingEl)\n                .keyframes([\n                { offset: 0, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n                { offset: 1, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n            ]);\n            baseAnimation.addAnimation(presentingAnimation);\n        }\n        else {\n            baseAnimation.addAnimation(backdropAnimation);\n            if (!hasCardModal) {\n                wrapperAnimation.fromTo('opacity', '0', '1');\n            }\n            else {\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n                presentingAnimation\n                    .afterStyles({\n                    transform: finalTransform,\n                })\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n                    .keyframes([\n                    { offset: 0, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n                    { offset: 1, filter: 'contrast(0.85)', transform: finalTransform },\n                ]);\n                const shadowAnimation = createAnimation()\n                    .afterStyles({\n                    transform: finalTransform,\n                })\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\n                    .keyframes([\n                    { offset: 0, opacity: '1', transform: 'translateY(0) scale(1)' },\n                    { offset: 1, opacity: '0', transform: finalTransform },\n                ]);\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n            }\n        }\n    }\n    else {\n        baseAnimation.addAnimation(backdropAnimation);\n    }\n    return baseAnimation;\n};\n\nconst createLeaveAnimation$1 = () => {\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * iOS Modal Leave Animation\n */\nconst iosLeaveAnimation = (baseEl, opts, duration = 500) => {\n    const { presentingEl, currentBreakpoint } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation$1();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n    const baseAnimation = createAnimation('leaving-base')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(duration)\n        .addAnimation(wrapperAnimation);\n    if (presentingEl) {\n        const isMobile = window.innerWidth < 768;\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n        const presentingElRoot = getElementRoot(presentingEl);\n        const presentingAnimation = createAnimation()\n            .beforeClearStyles(['transform'])\n            .afterClearStyles(['transform'])\n            .onFinish((currentStep) => {\n            // only reset background color if this is the last card-style modal\n            if (currentStep !== 1) {\n                return;\n            }\n            presentingEl.style.setProperty('overflow', '');\n            const numModals = Array.from(bodyEl.querySelectorAll('ion-modal:not(.overlay-hidden)')).filter((m) => m.presentingElement !== undefined).length;\n            if (numModals <= 1) {\n                bodyEl.style.setProperty('background-color', '');\n            }\n        });\n        const bodyEl = document.body;\n        if (isMobile) {\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n            presentingAnimation.addElement(presentingEl).keyframes([\n                { offset: 0, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n                { offset: 1, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n            ]);\n            baseAnimation.addAnimation(presentingAnimation);\n        }\n        else {\n            baseAnimation.addAnimation(backdropAnimation);\n            if (!hasCardModal) {\n                wrapperAnimation.fromTo('opacity', '1', '0');\n            }\n            else {\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n                presentingAnimation\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n                    .afterStyles({\n                    transform: 'translate3d(0, 0, 0)',\n                })\n                    .keyframes([\n                    { offset: 0, filter: 'contrast(0.85)', transform: finalTransform },\n                    { offset: 1, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n                ]);\n                const shadowAnimation = createAnimation()\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\n                    .afterStyles({\n                    transform: 'translateY(0) scale(1)',\n                })\n                    .keyframes([\n                    { offset: 0, opacity: '0', transform: finalTransform },\n                    { offset: 1, opacity: '1', transform: 'translateY(0) scale(1)' },\n                ]);\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n            }\n        }\n    }\n    else {\n        baseAnimation.addAnimation(backdropAnimation);\n    }\n    return baseAnimation;\n};\n\nconst createEnterAnimation = () => {\n    const backdropAnimation = createAnimation()\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    const wrapperAnimation = createAnimation().keyframes([\n        { offset: 0, opacity: 0.01, transform: 'translateY(40px)' },\n        { offset: 1, opacity: 1, transform: `translateY(0px)` },\n    ]);\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * Md Modal Enter Animation\n */\nconst mdEnterAnimation = (baseEl, opts) => {\n    const { currentBreakpoint } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n    return createAnimation()\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.36,0.66,0.04,1)')\n        .duration(280)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst createLeaveAnimation = () => {\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    const wrapperAnimation = createAnimation().keyframes([\n        { offset: 0, opacity: 0.99, transform: `translateY(0px)` },\n        { offset: 1, opacity: 0, transform: 'translateY(40px)' },\n    ]);\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * Md Modal Leave Animation\n */\nconst mdLeaveAnimation = (baseEl, opts) => {\n    const { currentBreakpoint } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n    return createAnimation()\n        .easing('cubic-bezier(0.47,0,0.745,0.715)')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst createSheetGesture = (baseEl, backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, animation, breakpoints = [], getCurrentBreakpoint, onDismiss, onBreakpointChange) => {\n    // Defaults for the sheet swipe animation\n    const defaultBackdrop = [\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\n        { offset: 1, opacity: 0.01 },\n    ];\n    const customBackdrop = [\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\n        { offset: 1 - backdropBreakpoint, opacity: 0 },\n        { offset: 1, opacity: 0 },\n    ];\n    const SheetDefaults = {\n        WRAPPER_KEYFRAMES: [\n            { offset: 0, transform: 'translateY(0%)' },\n            { offset: 1, transform: 'translateY(100%)' },\n        ],\n        BACKDROP_KEYFRAMES: backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop,\n    };\n    const contentEl = baseEl.querySelector('ion-content');\n    const height = wrapperEl.clientHeight;\n    let currentBreakpoint = initialBreakpoint;\n    let offset = 0;\n    let canDismissBlocksGesture = false;\n    const canDismissMaxStep = 0.95;\n    const wrapperAnimation = animation.childAnimations.find((ani) => ani.id === 'wrapperAnimation');\n    const backdropAnimation = animation.childAnimations.find((ani) => ani.id === 'backdropAnimation');\n    const maxBreakpoint = breakpoints[breakpoints.length - 1];\n    const minBreakpoint = breakpoints[0];\n    const enableBackdrop = () => {\n        baseEl.style.setProperty('pointer-events', 'auto');\n        backdropEl.style.setProperty('pointer-events', 'auto');\n        /**\n         * When the backdrop is enabled, elements such\n         * as inputs should not be focusable outside\n         * the sheet.\n         */\n        baseEl.classList.remove('ion-disable-focus-trap');\n    };\n    const disableBackdrop = () => {\n        baseEl.style.setProperty('pointer-events', 'none');\n        backdropEl.style.setProperty('pointer-events', 'none');\n        /**\n         * When the backdrop is enabled, elements such\n         * as inputs should not be focusable outside\n         * the sheet.\n         * Adding this class disables focus trapping\n         * for the sheet temporarily.\n         */\n        baseEl.classList.add('ion-disable-focus-trap');\n    };\n    /**\n     * After the entering animation completes,\n     * we need to set the animation to go from\n     * offset 0 to offset 1 so that users can\n     * swipe in any direction. We then set the\n     * animation offset to the current breakpoint\n     * so there is no flickering.\n     */\n    if (wrapperAnimation && backdropAnimation) {\n        wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n        backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n        animation.progressStart(true, 1 - currentBreakpoint);\n        /**\n         * If backdrop is not enabled, then content\n         * behind modal should be clickable. To do this, we need\n         * to remove pointer-events from ion-modal as a whole.\n         * ion-backdrop and .modal-wrapper always have pointer-events: auto\n         * applied, so the modal content can still be interacted with.\n         */\n        const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n        if (shouldEnableBackdrop) {\n            enableBackdrop();\n        }\n        else {\n            disableBackdrop();\n        }\n    }\n    if (contentEl && currentBreakpoint !== maxBreakpoint) {\n        contentEl.scrollY = false;\n    }\n    const canStart = (detail) => {\n        /**\n         * If the sheet is fully expanded and\n         * the user is swiping on the content,\n         * the gesture should not start to\n         * allow for scrolling on the content.\n         */\n        const content = detail.event.target.closest('ion-content');\n        currentBreakpoint = getCurrentBreakpoint();\n        if (currentBreakpoint === 1 && content) {\n            return false;\n        }\n        return true;\n    };\n    const onStart = () => {\n        /**\n         * If canDismiss is anything other than `true`\n         * then users should be able to swipe down\n         * until a threshold is hit. At that point,\n         * the card modal should not proceed any further.\n         *\n         * canDismiss is never fired via gesture if there is\n         * no 0 breakpoint. However, it can be fired if the user\n         * presses Esc or the hardware back button.\n         * TODO (FW-937)\n         * Remove undefined check\n         */\n        canDismissBlocksGesture = baseEl.canDismiss !== undefined && baseEl.canDismiss !== true && minBreakpoint === 0;\n        /**\n         * If swiping on the content\n         * we should disable scrolling otherwise\n         * the sheet will expand and the content will scroll.\n         */\n        if (contentEl) {\n            contentEl.scrollY = false;\n        }\n        raf(() => {\n            /**\n             * Dismisses the open keyboard when the sheet drag gesture is started.\n             * Sets the focus onto the modal element.\n             */\n            baseEl.focus();\n        });\n        animation.progressStart(true, 1 - currentBreakpoint);\n    };\n    const onMove = (detail) => {\n        /**\n         * Given the change in gesture position on the Y axis,\n         * compute where the offset of the animation should be\n         * relative to where the user dragged.\n         */\n        const initialStep = 1 - currentBreakpoint;\n        const secondToLastBreakpoint = breakpoints.length > 1 ? 1 - breakpoints[1] : undefined;\n        const step = initialStep + detail.deltaY / height;\n        const isAttemptingDismissWithCanDismiss = secondToLastBreakpoint !== undefined && step >= secondToLastBreakpoint && canDismissBlocksGesture;\n        /**\n         * If we are blocking the gesture from dismissing,\n         * set the max step value so that the sheet cannot be\n         * completely hidden.\n         */\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        /**\n         * If we are blocking the gesture from\n         * dismissing, calculate the spring modifier value\n         * this will be added to the starting breakpoint\n         * value to give the gesture a spring-like feeling.\n         * Note that when isAttemptingDismissWithCanDismiss is true,\n         * the modifier is always added to the breakpoint that\n         * appears right after the 0 breakpoint.\n         *\n         * Note that this modifier is essentially the progression\n         * between secondToLastBreakpoint and maxStep which is\n         * why we subtract secondToLastBreakpoint. This lets us get\n         * the result as a value from 0 to 1.\n         */\n        const processedStep = isAttemptingDismissWithCanDismiss && secondToLastBreakpoint !== undefined\n            ? secondToLastBreakpoint +\n                calculateSpringStep((step - secondToLastBreakpoint) / (maxStep - secondToLastBreakpoint))\n            : step;\n        offset = clamp(0.0001, processedStep, maxStep);\n        animation.progressStep(offset);\n    };\n    const onEnd = (detail) => {\n        /**\n         * When the gesture releases, we need to determine\n         * the closest breakpoint to snap to.\n         */\n        const velocity = detail.velocityY;\n        const threshold = (detail.deltaY + velocity * 350) / height;\n        const diff = currentBreakpoint - threshold;\n        const closest = breakpoints.reduce((a, b) => {\n            return Math.abs(b - diff) < Math.abs(a - diff) ? b : a;\n        });\n        moveSheetToBreakpoint({\n            breakpoint: closest,\n            breakpointOffset: offset,\n            canDismiss: canDismissBlocksGesture,\n            /**\n             * The swipe is user-driven, so we should\n             * always animate when the gesture ends.\n             */\n            animated: true,\n        });\n    };\n    const moveSheetToBreakpoint = (options) => {\n        const { breakpoint, canDismiss, breakpointOffset, animated } = options;\n        /**\n         * canDismiss should only prevent snapping\n         * when users are trying to dismiss. If canDismiss\n         * is present but the user is trying to swipe upwards,\n         * we should allow that to happen,\n         */\n        const shouldPreventDismiss = canDismiss && breakpoint === 0;\n        const snapToBreakpoint = shouldPreventDismiss ? currentBreakpoint : breakpoint;\n        const shouldRemainOpen = snapToBreakpoint !== 0;\n        currentBreakpoint = 0;\n        /**\n         * Update the animation so that it plays from\n         * the last offset to the closest snap point.\n         */\n        if (wrapperAnimation && backdropAnimation) {\n            wrapperAnimation.keyframes([\n                { offset: 0, transform: `translateY(${breakpointOffset * 100}%)` },\n                { offset: 1, transform: `translateY(${(1 - snapToBreakpoint) * 100}%)` },\n            ]);\n            backdropAnimation.keyframes([\n                {\n                    offset: 0,\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(1 - breakpointOffset, backdropBreakpoint)})`,\n                },\n                {\n                    offset: 1,\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(snapToBreakpoint, backdropBreakpoint)})`,\n                },\n            ]);\n            animation.progressStep(0);\n        }\n        /**\n         * Gesture should remain disabled until the\n         * snapping animation completes.\n         */\n        gesture.enable(false);\n        if (shouldPreventDismiss) {\n            handleCanDismiss(baseEl, animation);\n        }\n        else if (!shouldRemainOpen) {\n            onDismiss();\n        }\n        return new Promise((resolve) => {\n            animation\n                .onFinish(() => {\n                if (shouldRemainOpen) {\n                    /**\n                     * Once the snapping animation completes,\n                     * we need to reset the animation to go\n                     * from 0 to 1 so users can swipe in any direction.\n                     * We then set the animation offset to the current\n                     * breakpoint so that it starts at the snapped position.\n                     */\n                    if (wrapperAnimation && backdropAnimation) {\n                        raf(() => {\n                            wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n                            backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n                            animation.progressStart(true, 1 - snapToBreakpoint);\n                            currentBreakpoint = snapToBreakpoint;\n                            onBreakpointChange(currentBreakpoint);\n                            /**\n                             * If the sheet is fully expanded, we can safely\n                             * enable scrolling again.\n                             */\n                            if (contentEl && currentBreakpoint === breakpoints[breakpoints.length - 1]) {\n                                contentEl.scrollY = true;\n                            }\n                            /**\n                             * Backdrop should become enabled\n                             * after the backdropBreakpoint value\n                             */\n                            const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n                            if (shouldEnableBackdrop) {\n                                enableBackdrop();\n                            }\n                            else {\n                                disableBackdrop();\n                            }\n                            gesture.enable(true);\n                            resolve();\n                        });\n                    }\n                    else {\n                        gesture.enable(true);\n                        resolve();\n                    }\n                }\n                else {\n                    resolve();\n                }\n                /**\n                 * This must be a one time callback\n                 * otherwise a new callback will\n                 * be added every time onEnd runs.\n                 */\n            }, { oneTimeCallback: true })\n                .progressEnd(1, 0, animated ? 500 : 0);\n        });\n    };\n    const gesture = createGesture({\n        el: wrapperEl,\n        gestureName: 'modalSheet',\n        gesturePriority: 40,\n        direction: 'y',\n        threshold: 10,\n        canStart,\n        onStart,\n        onMove,\n        onEnd,\n    });\n    return {\n        gesture,\n        moveSheetToBreakpoint,\n    };\n};\n\nconst modalIosCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}:host(.modal-card),:host(.modal-sheet){--border-radius:10px}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:10px}}.modal-wrapper{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - 40px)}}:host(.modal-card) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-card) .modal-wrapper,:host-context([dir=rtl]).modal-card .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}@supports selector(:dir(rtl)){:host(.modal-card:dir(rtl)) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}}:host(.modal-card){--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}:host(.modal-card) .modal-shadow{display:none}:host(.modal-card) ion-backdrop{pointer-events:none}}@media screen and (min-width: 768px){:host(.modal-card){--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px;--backdrop-opacity:0;--box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}:host(.modal-card) .modal-wrapper{-webkit-box-shadow:none;box-shadow:none}:host(.modal-card) .modal-shadow{-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}}:host(.modal-sheet) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-sheet) .modal-wrapper,:host-context([dir=rtl]).modal-sheet .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}@supports selector(:dir(rtl)){:host(.modal-sheet:dir(rtl)) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}}\";\n\nconst modalMdCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:2px;--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}\";\n\nconst Modal = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.didPresent = createEvent(this, \"ionModalDidPresent\", 7);\n        this.willPresent = createEvent(this, \"ionModalWillPresent\", 7);\n        this.willDismiss = createEvent(this, \"ionModalWillDismiss\", 7);\n        this.didDismiss = createEvent(this, \"ionModalDidDismiss\", 7);\n        this.ionBreakpointDidChange = createEvent(this, \"ionBreakpointDidChange\", 7);\n        this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n        this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n        this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n        this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n        this.ionMount = createEvent(this, \"ionMount\", 7);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.coreDelegate = CoreDelegate();\n        this.isSheetModal = false;\n        this.inheritedAttributes = {};\n        this.inline = false;\n        // Whether or not modal is being dismissed via gesture\n        this.gestureAnimationDismissing = false;\n        this.onHandleClick = () => {\n            const { sheetTransition, handleBehavior } = this;\n            if (handleBehavior !== 'cycle' || sheetTransition !== undefined) {\n                /**\n                 * The sheet modal should not advance to the next breakpoint\n                 * if the handle behavior is not `cycle` or if the handle\n                 * is clicked while the sheet is moving to a breakpoint.\n                 */\n                return;\n            }\n            this.moveToNextBreakpoint();\n        };\n        this.onBackdropTap = () => {\n            const { sheetTransition } = this;\n            if (sheetTransition !== undefined) {\n                /**\n                 * When the handle is double clicked at the largest breakpoint,\n                 * it will start to move to the first breakpoint. While transitioning,\n                 * the backdrop will often receive the second click. We prevent the\n                 * backdrop from dismissing the modal while moving between breakpoints.\n                 */\n                return;\n            }\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.onLifecycle = (modalEvent) => {\n            const el = this.usersElement;\n            const name = LIFECYCLE_MAP[modalEvent.type];\n            if (el && name) {\n                const ev = new CustomEvent(name, {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: modalEvent.detail,\n                });\n                el.dispatchEvent(ev);\n            }\n        };\n        this.presented = false;\n        this.hasController = false;\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.breakpoints = undefined;\n        this.initialBreakpoint = undefined;\n        this.backdropBreakpoint = 0;\n        this.handle = undefined;\n        this.handleBehavior = 'none';\n        this.component = undefined;\n        this.componentProps = undefined;\n        this.cssClass = undefined;\n        this.backdropDismiss = true;\n        this.showBackdrop = true;\n        this.animated = true;\n        this.presentingElement = undefined;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n        this.keepContentsMounted = false;\n        this.canDismiss = true;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    breakpointsChanged(breakpoints) {\n        if (breakpoints !== undefined) {\n            this.sortedBreakpoints = breakpoints.sort((a, b) => a - b);\n        }\n    }\n    connectedCallback() {\n        const { el } = this;\n        prepareOverlay(el);\n        this.triggerChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n    }\n    componentWillLoad() {\n        const { breakpoints, initialBreakpoint, el } = this;\n        const isSheetModal = (this.isSheetModal = breakpoints !== undefined && initialBreakpoint !== undefined);\n        this.inheritedAttributes = inheritAttributes(el, ['aria-label', 'role']);\n        if (isSheetModal) {\n            this.currentBreakpoint = this.initialBreakpoint;\n        }\n        if (breakpoints !== undefined && initialBreakpoint !== undefined && !breakpoints.includes(initialBreakpoint)) {\n            printIonWarning('Your breakpoints array must include the initialBreakpoint value.');\n        }\n        setOverlayId(el);\n    }\n    componentDidLoad() {\n        /**\n         * If modal was rendered with isOpen=\"true\"\n         * then we should open modal immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        this.breakpointsChanged(this.breakpoints);\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Determines whether or not an overlay\n     * is being used inline or via a controller/JS\n     * and returns the correct delegate.\n     * By default, subsequent calls to getDelegate\n     * will use a cached version of the delegate.\n     * This is useful for calling dismiss after\n     * present so that the correct delegate is given.\n     */\n    getDelegate(force = false) {\n        if (this.workingDelegate && !force) {\n            return {\n                delegate: this.workingDelegate,\n                inline: this.inline,\n            };\n        }\n        /**\n         * If using overlay inline\n         * we potentially need to use the coreDelegate\n         * so that this works in vanilla JS apps.\n         * If a developer has presented this component\n         * via a controller, then we can assume\n         * the component is already in the\n         * correct place.\n         */\n        const parentEl = this.el.parentNode;\n        const inline = (this.inline = parentEl !== null && !this.hasController);\n        const delegate = (this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate);\n        return { inline, delegate };\n    }\n    /**\n     * Determines whether or not the\n     * modal is allowed to dismiss based\n     * on the state of the canDismiss prop.\n     */\n    async checkCanDismiss(data, role) {\n        const { canDismiss } = this;\n        if (typeof canDismiss === 'function') {\n            return canDismiss(data, role);\n        }\n        return canDismiss;\n    }\n    /**\n     * Present the modal overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        if (this.presented) {\n            unlock();\n            return;\n        }\n        const { presentingElement, el } = this;\n        /**\n         * If the modal is presented multiple times (inline modals), we\n         * need to reset the current breakpoint to the initial breakpoint.\n         */\n        this.currentBreakpoint = this.initialBreakpoint;\n        const { inline, delegate } = this.getDelegate(true);\n        /**\n         * Emit ionMount so JS Frameworks have an opportunity\n         * to add the child component to the DOM. The child\n         * component will be assigned to this.usersElement below.\n         */\n        this.ionMount.emit();\n        this.usersElement = await attachComponent(delegate, el, this.component, ['ion-page'], this.componentProps, inline);\n        /**\n         * When using the lazy loaded build of Stencil, we need to wait\n         * for every Stencil component instance to be ready before presenting\n         * otherwise there can be a flash of unstyled content. With the\n         * custom elements bundle we need to wait for the JS framework\n         * mount the inner contents of the overlay otherwise WebKit may\n         * get the transition incorrect.\n         */\n        if (hasLazyBuild(el)) {\n            await deepReady(this.usersElement);\n            /**\n             * If keepContentsMounted=\"true\" then the\n             * JS Framework has already mounted the inner\n             * contents so there is no need to wait.\n             * Otherwise, we need to wait for the JS\n             * Framework to mount the inner contents\n             * of this component.\n             */\n        }\n        else if (!this.keepContentsMounted) {\n            await waitForMount();\n        }\n        writeTask(() => this.el.classList.add('show-modal'));\n        const hasCardModal = presentingElement !== undefined;\n        /**\n         * We need to change the status bar at the\n         * start of the animation so that it completes\n         * by the time the card animation is done.\n         */\n        if (hasCardModal && getIonMode(this) === 'ios') {\n            // Cache the original status bar color before the modal is presented\n            this.statusBarStyle = await StatusBar.getStyle();\n            setCardStatusBarDark();\n        }\n        await present(this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, {\n            presentingEl: presentingElement,\n            currentBreakpoint: this.initialBreakpoint,\n            backdropBreakpoint: this.backdropBreakpoint,\n        });\n        /* tslint:disable-next-line */\n        if (typeof window !== 'undefined') {\n            /**\n             * This needs to be setup before any\n             * non-transition async work so it can be dereferenced\n             * in the dismiss method. The dismiss method\n             * only waits for the entering transition\n             * to finish. It does not wait for all of the `present`\n             * method to resolve.\n             */\n            this.keyboardOpenCallback = () => {\n                if (this.gesture) {\n                    /**\n                     * When the native keyboard is opened and the webview\n                     * is resized, the gesture implementation will become unresponsive\n                     * and enter a free-scroll mode.\n                     *\n                     * When the keyboard is opened, we disable the gesture for\n                     * a single frame and re-enable once the contents have repositioned\n                     * from the keyboard placement.\n                     */\n                    this.gesture.enable(false);\n                    raf(() => {\n                        if (this.gesture) {\n                            this.gesture.enable(true);\n                        }\n                    });\n                }\n            };\n            window.addEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n        }\n        if (this.isSheetModal) {\n            this.initSheetGesture();\n        }\n        else if (hasCardModal) {\n            this.initSwipeToClose();\n        }\n        unlock();\n    }\n    initSwipeToClose() {\n        var _a;\n        if (getIonMode(this) !== 'ios') {\n            return;\n        }\n        const { el } = this;\n        // All of the elements needed for the swipe gesture\n        // should be in the DOM and referenced by now, except\n        // for the presenting el\n        const animationBuilder = this.leaveAnimation || config.get('modalLeave', iosLeaveAnimation);\n        const ani = (this.animation = animationBuilder(el, { presentingEl: this.presentingElement }));\n        const contentEl = findIonContent(el);\n        if (!contentEl) {\n            printIonContentErrorMsg(el);\n            return;\n        }\n        const statusBarStyle = (_a = this.statusBarStyle) !== null && _a !== void 0 ? _a : Style.Default;\n        this.gesture = createSwipeToCloseGesture(el, ani, statusBarStyle, () => {\n            /**\n             * While the gesture animation is finishing\n             * it is possible for a user to tap the backdrop.\n             * This would result in the dismiss animation\n             * being played again. Typically this is avoided\n             * by setting `presented = false` on the overlay\n             * component; however, we cannot do that here as\n             * that would prevent the element from being\n             * removed from the DOM.\n             */\n            this.gestureAnimationDismissing = true;\n            /**\n             * Reset the status bar style as the dismiss animation\n             * starts otherwise the status bar will be the wrong\n             * color for the duration of the dismiss animation.\n             * The dismiss method does this as well, but\n             * in this case it's only called once the animation\n             * has finished.\n             */\n            setCardStatusBarDefault(this.statusBarStyle);\n            this.animation.onFinish(async () => {\n                await this.dismiss(undefined, GESTURE);\n                this.gestureAnimationDismissing = false;\n            });\n        });\n        this.gesture.enable(true);\n    }\n    initSheetGesture() {\n        const { wrapperEl, initialBreakpoint, backdropBreakpoint } = this;\n        if (!wrapperEl || initialBreakpoint === undefined) {\n            return;\n        }\n        const animationBuilder = this.enterAnimation || config.get('modalEnter', iosEnterAnimation);\n        const ani = (this.animation = animationBuilder(this.el, {\n            presentingEl: this.presentingElement,\n            currentBreakpoint: initialBreakpoint,\n            backdropBreakpoint,\n        }));\n        ani.progressStart(true, 1);\n        const { gesture, moveSheetToBreakpoint } = createSheetGesture(this.el, this.backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, ani, this.sortedBreakpoints, () => { var _a; return (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : 0; }, () => this.sheetOnDismiss(), (breakpoint) => {\n            if (this.currentBreakpoint !== breakpoint) {\n                this.currentBreakpoint = breakpoint;\n                this.ionBreakpointDidChange.emit({ breakpoint });\n            }\n        });\n        this.gesture = gesture;\n        this.moveSheetToBreakpoint = moveSheetToBreakpoint;\n        this.gesture.enable(true);\n    }\n    sheetOnDismiss() {\n        /**\n         * While the gesture animation is finishing\n         * it is possible for a user to tap the backdrop.\n         * This would result in the dismiss animation\n         * being played again. Typically this is avoided\n         * by setting `presented = false` on the overlay\n         * component; however, we cannot do that here as\n         * that would prevent the element from being\n         * removed from the DOM.\n         */\n        this.gestureAnimationDismissing = true;\n        this.animation.onFinish(async () => {\n            this.currentBreakpoint = 0;\n            this.ionBreakpointDidChange.emit({ breakpoint: this.currentBreakpoint });\n            await this.dismiss(undefined, GESTURE);\n            this.gestureAnimationDismissing = false;\n        });\n    }\n    /**\n     * Dismiss the modal overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal. For example, 'cancel' or 'backdrop'.\n     */\n    async dismiss(data, role) {\n        var _a;\n        if (this.gestureAnimationDismissing && role !== GESTURE) {\n            return false;\n        }\n        /**\n         * Because the canDismiss check below is async,\n         * we need to claim a lock before the check happens,\n         * in case the dismiss transition does run.\n         */\n        const unlock = await this.lockController.lock();\n        /**\n         * If a canDismiss handler is responsible\n         * for calling the dismiss method, we should\n         * not run the canDismiss check again.\n         */\n        if (role !== 'handler' && !(await this.checkCanDismiss(data, role))) {\n            unlock();\n            return false;\n        }\n        const { presentingElement } = this;\n        /**\n         * We need to start the status bar change\n         * before the animation so that the change\n         * finishes when the dismiss animation does.\n         */\n        const hasCardModal = presentingElement !== undefined;\n        if (hasCardModal && getIonMode(this) === 'ios') {\n            setCardStatusBarDefault(this.statusBarStyle);\n        }\n        /* tslint:disable-next-line */\n        if (typeof window !== 'undefined' && this.keyboardOpenCallback) {\n            window.removeEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n            this.keyboardOpenCallback = undefined;\n        }\n        const enteringAnimation = activeAnimations.get(this) || [];\n        const dismissed = await dismiss(this, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, {\n            presentingEl: presentingElement,\n            currentBreakpoint: (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : this.initialBreakpoint,\n            backdropBreakpoint: this.backdropBreakpoint,\n        });\n        if (dismissed) {\n            const { delegate } = this.getDelegate();\n            await detachComponent(delegate, this.usersElement);\n            writeTask(() => this.el.classList.remove('show-modal'));\n            if (this.animation) {\n                this.animation.destroy();\n            }\n            if (this.gesture) {\n                this.gesture.destroy();\n            }\n            enteringAnimation.forEach((ani) => ani.destroy());\n        }\n        this.currentBreakpoint = undefined;\n        this.animation = undefined;\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the modal did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionModalDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the modal will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionModalWillDismiss');\n    }\n    /**\n     * Move a sheet style modal to a specific breakpoint. The breakpoint value must\n     * be a value defined in your `breakpoints` array.\n     */\n    async setCurrentBreakpoint(breakpoint) {\n        if (!this.isSheetModal) {\n            printIonWarning('setCurrentBreakpoint is only supported on sheet modals.');\n            return;\n        }\n        if (!this.breakpoints.includes(breakpoint)) {\n            printIonWarning(`Attempted to set invalid breakpoint value ${breakpoint}. Please double check that the breakpoint value is part of your defined breakpoints.`);\n            return;\n        }\n        const { currentBreakpoint, moveSheetToBreakpoint, canDismiss, breakpoints, animated } = this;\n        if (currentBreakpoint === breakpoint) {\n            return;\n        }\n        if (moveSheetToBreakpoint) {\n            this.sheetTransition = moveSheetToBreakpoint({\n                breakpoint,\n                breakpointOffset: 1 - currentBreakpoint,\n                canDismiss: canDismiss !== undefined && canDismiss !== true && breakpoints[0] === 0,\n                animated,\n            });\n            await this.sheetTransition;\n            this.sheetTransition = undefined;\n        }\n    }\n    /**\n     * Returns the current breakpoint of a sheet style modal\n     */\n    async getCurrentBreakpoint() {\n        return this.currentBreakpoint;\n    }\n    async moveToNextBreakpoint() {\n        const { breakpoints, currentBreakpoint } = this;\n        if (!breakpoints || currentBreakpoint == null) {\n            /**\n             * If the modal does not have breakpoints and/or the current\n             * breakpoint is not set, we can't move to the next breakpoint.\n             */\n            return false;\n        }\n        const allowedBreakpoints = breakpoints.filter((b) => b !== 0);\n        const currentBreakpointIndex = allowedBreakpoints.indexOf(currentBreakpoint);\n        const nextBreakpointIndex = (currentBreakpointIndex + 1) % allowedBreakpoints.length;\n        const nextBreakpoint = allowedBreakpoints[nextBreakpointIndex];\n        /**\n         * Sets the current breakpoint to the next available breakpoint.\n         * If the current breakpoint is the last breakpoint, we set the current\n         * breakpoint to the first non-zero breakpoint to avoid dismissing the sheet.\n         */\n        await this.setCurrentBreakpoint(nextBreakpoint);\n        return true;\n    }\n    render() {\n        const { handle, isSheetModal, presentingElement, htmlAttributes, handleBehavior, inheritedAttributes } = this;\n        const showHandle = handle !== false && isSheetModal;\n        const mode = getIonMode(this);\n        const isCardModal = presentingElement !== undefined && mode === 'ios';\n        const isHandleCycle = handleBehavior === 'cycle';\n        return (h(Host, Object.assign({ \"no-router\": true, tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign({ [mode]: true, ['modal-default']: !isCardModal && !isSheetModal, [`modal-card`]: isCardModal, [`modal-sheet`]: isSheetModal, 'overlay-hidden': true }, getClassMap(this.cssClass)), onIonBackdropTap: this.onBackdropTap, onIonModalDidPresent: this.onLifecycle, onIonModalWillPresent: this.onLifecycle, onIonModalWillDismiss: this.onLifecycle, onIonModalDidDismiss: this.onLifecycle }), h(\"ion-backdrop\", { ref: (el) => (this.backdropEl = el), visible: this.showBackdrop, tappable: this.backdropDismiss, part: \"backdrop\" }), mode === 'ios' && h(\"div\", { class: \"modal-shadow\" }), h(\"div\", Object.assign({\n            /*\n              role and aria-modal must be used on the\n              same element. They must also be set inside the\n              shadow DOM otherwise ion-button will not be highlighted\n              when using VoiceOver: https://bugs.webkit.org/show_bug.cgi?id=247134\n            */\n            role: \"dialog\"\n        }, inheritedAttributes, { \"aria-modal\": \"true\", class: \"modal-wrapper ion-overlay-wrapper\", part: \"content\", ref: (el) => (this.wrapperEl = el) }), showHandle && (h(\"button\", { class: \"modal-handle\",\n            // Prevents the handle from receiving keyboard focus when it does not cycle\n            tabIndex: !isHandleCycle ? -1 : 0, \"aria-label\": \"Activate to adjust the size of the dialog overlaying the screen\", onClick: isHandleCycle ? this.onHandleClick : undefined, part: \"handle\" })), h(\"slot\", null))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"triggerChanged\"]\n    }; }\n};\nconst LIFECYCLE_MAP = {\n    ionModalDidPresent: 'ionViewDidEnter',\n    ionModalWillPresent: 'ionViewWillEnter',\n    ionModalWillDismiss: 'ionViewWillLeave',\n    ionModalDidDismiss: 'ionViewDidLeave',\n};\nModal.style = {\n    ios: modalIosCss,\n    md: modalMdCss\n};\n\nexport { Modal as ion_modal };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}