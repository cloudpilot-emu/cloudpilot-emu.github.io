{"version":3,"file":"1479.e197eb49d61fbf81.js","mappings":"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","names":["Reorder","constructor","hostRef","registerInstance","this","onClick","ev","reorderGroup","el","closest","preventDefault","disabled","stopImmediatePropagation","render","mode","getIonMode","h","Host","key","class","icon","reorderThreeOutline","reorderTwoSharp","lazy","part","getElement","style","ios","md","ReorderGroup","ionItemReorder","createEvent","ionReorderStart","ionReorderMove","ionReorderEnd","lastToIndex","cachedHeights","scrollElTop","scrollElBottom","scrollElInitial","containerTop","containerBottom","state","disabledChanged","gesture","enable","connectedCallback","_this","_asyncToGenerator","contentEl","findClosestIonContent","scrollEl","getScrollElement","Promise","resolve","then","__webpack_require__","bind","createGesture","gestureName","gesturePriority","threshold","direction","passive","canStart","detail","onStart","onMove","onEnd","disconnectedCallback","destroy","undefined","complete","listOrReorder","completeReorder","selectedItemEl","reorderEl","event","target","item","findReorderItem","data","heights","length","children","__children","sum","i","child","offsetHeight","push","$ionIndex","box","getBoundingClientRect","top","bottom","scrollBox","scrollTop","AUTO_SCROLL_MARGIN","indexForItem","selectedItemHeight","classList","add","ITEM_REORDER_SELECTED","hapticSelectionStart","emit","selectedItem","scroll","autoscroll","currentY","Math","max","min","deltaY","startY","fromIndex","toIndex","itemIndexForTop","hapticSelectionChanged","reorderMove","transform","from","to","hapticSelectionEnd","len","raf","insertBefore","Array","isArray","reorderArray","transition","remove","itemHeight","value","posY","amount","SCROLL_JUMP","scrollBy","e","watchers","element","node","container","parent","parentElement","array","splice","slice"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, d as Host, g as getElement, c as createEvent } from './index-4DxY6_gG.js';\nimport { j as reorderThreeOutline, k as reorderTwoSharp } from './index-DV3sJJW8.js';\nimport { b as getIonMode } from './ionic-global-CTSyufhF.js';\nimport { f as findClosestIonContent, g as getScrollElement } from './index-7UbSlv7N.js';\nimport { r as raf } from './helpers-8KSQQGQy.js';\nimport { b as hapticSelectionStart, a as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-DzAMWJuk.js';\nimport './capacitor-CFERIeaU.js';\nimport './index-ZjP4CjeZ.js';\n\nconst reorderIosCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:2.125rem;opacity:0.4}\";\n\nconst reorderMdCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:1.9375rem;opacity:0.3}\";\n\nconst Reorder = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    onClick(ev) {\n        const reorderGroup = this.el.closest('ion-reorder-group');\n        ev.preventDefault();\n        // Only stop event propagation if the reorder is inside of an enabled\n        // reorder group. This allows interaction with clickable children components.\n        if (!reorderGroup || !reorderGroup.disabled) {\n            ev.stopImmediatePropagation();\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        const reorderIcon = mode === 'ios' ? reorderThreeOutline : reorderTwoSharp;\n        return (h(Host, { key: 'e6807bb349725682e99e791ac65e729a360d64e8', class: mode }, h(\"slot\", { key: '1c691cdbffa6427ba08dc12184c69559ed5d5506' }, h(\"ion-icon\", { key: '8b4150302cdca475379582b2251737b5e74079b1', icon: reorderIcon, lazy: false, class: \"reorder-icon\", part: \"icon\", \"aria-hidden\": \"true\" }))));\n    }\n    get el() { return getElement(this); }\n};\nReorder.style = {\n    ios: reorderIosCss,\n    md: reorderMdCss\n};\n\nconst reorderGroupCss = \".reorder-list-active>*{display:block;-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\n\nconst ReorderGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n        this.ionReorderStart = createEvent(this, \"ionReorderStart\", 7);\n        this.ionReorderMove = createEvent(this, \"ionReorderMove\", 7);\n        this.ionReorderEnd = createEvent(this, \"ionReorderEnd\", 7);\n        this.lastToIndex = -1;\n        this.cachedHeights = [];\n        this.scrollElTop = 0;\n        this.scrollElBottom = 0;\n        this.scrollElInitial = 0;\n        this.containerTop = 0;\n        this.containerBottom = 0;\n        this.state = 0 /* ReorderGroupState.Idle */;\n        /**\n         * If `true`, the reorder will be hidden.\n         */\n        this.disabled = true;\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    async connectedCallback() {\n        const contentEl = findClosestIonContent(this.el);\n        if (contentEl) {\n            this.scrollEl = await getScrollElement(contentEl);\n        }\n        this.gesture = (await import('./index-CfgBF1SE.js')).createGesture({\n            el: this.el,\n            gestureName: 'reorder',\n            gesturePriority: 110,\n            threshold: 0,\n            direction: 'y',\n            passive: false,\n            canStart: (detail) => this.canStart(detail),\n            onStart: (ev) => this.onStart(ev),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n    }\n    disconnectedCallback() {\n        this.onEnd();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Completes the reorder operation. Must be called by the `ionReorderEnd` event.\n     *\n     * If a list of items is passed, the list will be reordered and returned in the\n     * proper order.\n     *\n     * If no parameters are passed or if `true` is passed in, the reorder will complete\n     * and the item will remain in the position it was dragged to. If `false` is passed,\n     * the reorder will complete and the item will bounce back to its original position.\n     *\n     * @param listOrReorder A list of items to be sorted and returned in the new order or a\n     * boolean of whether or not the reorder should reposition the item.\n     */\n    complete(listOrReorder) {\n        return Promise.resolve(this.completeReorder(listOrReorder));\n    }\n    canStart(ev) {\n        if (this.selectedItemEl || this.state !== 0 /* ReorderGroupState.Idle */) {\n            return false;\n        }\n        const target = ev.event.target;\n        const reorderEl = target.closest('ion-reorder');\n        if (!reorderEl) {\n            return false;\n        }\n        const item = findReorderItem(reorderEl, this.el);\n        if (!item) {\n            return false;\n        }\n        ev.data = item;\n        return true;\n    }\n    onStart(ev) {\n        ev.event.preventDefault();\n        const item = (this.selectedItemEl = ev.data);\n        const heights = this.cachedHeights;\n        heights.length = 0;\n        const el = this.el;\n        const children = el.__children || el.children;\n        if (!children || children.length === 0) {\n            return;\n        }\n        let sum = 0;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            sum += child.offsetHeight;\n            heights.push(sum);\n            child.$ionIndex = i;\n        }\n        const box = el.getBoundingClientRect();\n        this.containerTop = box.top;\n        this.containerBottom = box.bottom;\n        if (this.scrollEl) {\n            const scrollBox = this.scrollEl.getBoundingClientRect();\n            this.scrollElInitial = this.scrollEl.scrollTop;\n            this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n            this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n        }\n        else {\n            this.scrollElInitial = 0;\n            this.scrollElTop = 0;\n            this.scrollElBottom = 0;\n        }\n        this.lastToIndex = indexForItem(item);\n        this.selectedItemHeight = item.offsetHeight;\n        this.state = 1 /* ReorderGroupState.Active */;\n        item.classList.add(ITEM_REORDER_SELECTED);\n        hapticSelectionStart();\n        this.ionReorderStart.emit();\n    }\n    onMove(ev) {\n        const selectedItem = this.selectedItemEl;\n        if (!selectedItem) {\n            return;\n        }\n        // Scroll if we reach the scroll margins\n        const scroll = this.autoscroll(ev.currentY);\n        // // Get coordinate\n        const top = this.containerTop - scroll;\n        const bottom = this.containerBottom - scroll;\n        const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n        const deltaY = scroll + currentY - ev.startY;\n        const normalizedY = currentY - top;\n        const fromIndex = this.lastToIndex;\n        const toIndex = this.itemIndexForTop(normalizedY);\n        if (toIndex !== this.lastToIndex) {\n            const fromIndex = indexForItem(selectedItem);\n            this.lastToIndex = toIndex;\n            hapticSelectionChanged();\n            this.reorderMove(fromIndex, toIndex);\n        }\n        // Update selected item position\n        selectedItem.style.transform = `translateY(${deltaY}px)`;\n        this.ionReorderMove.emit({\n            from: fromIndex,\n            to: toIndex,\n        });\n    }\n    onEnd() {\n        const selectedItemEl = this.selectedItemEl;\n        this.state = 2 /* ReorderGroupState.Complete */;\n        if (!selectedItemEl) {\n            this.state = 0 /* ReorderGroupState.Idle */;\n            return;\n        }\n        const toIndex = this.lastToIndex;\n        const fromIndex = indexForItem(selectedItemEl);\n        if (toIndex === fromIndex) {\n            this.completeReorder();\n        }\n        else {\n            // TODO(FW-6590): Remove this once the deprecated event is removed\n            this.ionItemReorder.emit({\n                from: fromIndex,\n                to: toIndex,\n                complete: this.completeReorder.bind(this),\n            });\n        }\n        hapticSelectionEnd();\n        this.ionReorderEnd.emit({\n            from: fromIndex,\n            to: toIndex,\n            complete: this.completeReorder.bind(this),\n        });\n    }\n    completeReorder(listOrReorder) {\n        const selectedItemEl = this.selectedItemEl;\n        if (selectedItemEl && this.state === 2 /* ReorderGroupState.Complete */) {\n            const children = this.el.__children || this.el.children;\n            const len = children.length;\n            const toIndex = this.lastToIndex;\n            const fromIndex = indexForItem(selectedItemEl);\n            /**\n             * insertBefore and setting the transform\n             * needs to happen in the same frame otherwise\n             * there will be a duplicate transition. This primarily\n             * impacts Firefox where insertBefore and transform operations\n             * are happening in two separate frames.\n             */\n            raf(() => {\n                if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n                    const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n                    this.el.insertBefore(selectedItemEl, ref);\n                }\n                for (let i = 0; i < len; i++) {\n                    children[i].style['transform'] = '';\n                }\n            });\n            if (Array.isArray(listOrReorder)) {\n                listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n            }\n            selectedItemEl.style.transition = '';\n            selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n            this.selectedItemEl = undefined;\n            this.state = 0 /* ReorderGroupState.Idle */;\n        }\n        return listOrReorder;\n    }\n    itemIndexForTop(deltaY) {\n        const heights = this.cachedHeights;\n        for (let i = 0; i < heights.length; i++) {\n            if (heights[i] > deltaY) {\n                return i;\n            }\n        }\n        return heights.length - 1;\n    }\n    /********* DOM WRITE ********* */\n    reorderMove(fromIndex, toIndex) {\n        const itemHeight = this.selectedItemHeight;\n        const children = this.el.__children || this.el.children;\n        for (let i = 0; i < children.length; i++) {\n            const style = children[i].style;\n            let value = '';\n            if (i > fromIndex && i <= toIndex) {\n                value = `translateY(${-itemHeight}px)`;\n            }\n            else if (i < fromIndex && i >= toIndex) {\n                value = `translateY(${itemHeight}px)`;\n            }\n            style['transform'] = value;\n        }\n    }\n    autoscroll(posY) {\n        if (!this.scrollEl) {\n            return 0;\n        }\n        let amount = 0;\n        if (posY < this.scrollElTop) {\n            amount = -10;\n        }\n        else if (posY > this.scrollElBottom) {\n            amount = SCROLL_JUMP;\n        }\n        if (amount !== 0) {\n            this.scrollEl.scrollBy(0, amount);\n        }\n        return this.scrollEl.scrollTop - this.scrollElInitial;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'b9641f3061d67fbfe68317b901ec33267046e073', class: {\n                [mode]: true,\n                'reorder-enabled': !this.disabled,\n                'reorder-list-active': this.state !== 0 /* ReorderGroupState.Idle */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nconst indexForItem = (element) => {\n    return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n    let parent;\n    while (node) {\n        parent = node.parentElement;\n        if (parent === container) {\n            return node;\n        }\n        node = parent;\n    }\n    return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n    const element = array[from];\n    array.splice(from, 1);\n    array.splice(to, 0, element);\n    return array.slice();\n};\nReorderGroup.style = reorderGroupCss;\n\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };\n"],"x_google_ignoreList":[0]}