{"version":3,"sources":["webpack:///src/app/page/emulation/context-menu/context-menu.component.ts","webpack:///src/app/page/emulation/context-menu/context-menu.component.html","webpack:///src/app/page/emulation/helper/EventHandler.ts","webpack:///src/app/page/emulation/emulation.page.html","webpack:///src/app/page/emulation/emulation-routing.module.ts","webpack:///src/app/page/emulation/emulation.page.ts","webpack:///src/app/page/emulation/emulation.module.ts"],"names":["ContextMenuComponent","emulationService","onClick","showHelp","this","reset","resetNoExtensions","resetHard","engagePower","power","help","buttonFromEvent","evt","ctrlKey","key","canvas","canvasHelper","handleMouseDown","e","button","coords","eventToPalmCoordinates","area","determineArea","interactionMouse","handlePointerMove","determineButton","handleButtonDown","handleMouseMove","buttons","handeMouseUp","interaction","handleButtonUp","handlePointerUp","handleTouchStart","i","changedTouches","length","touch","item","interactionsTouch","set","identifier","cancelable","preventDefault","handleTouchMove","get","handleTouchEnd","handleKeyDown","keyCode","charCodeAt","handleKeyUp","activeButtons","btn","clear","drawButtons","Map","bound","Set","addEventListener","window","removeEventListener","contentX","contentY","contentWidth","contentHeight","clip","bb","getBoundingClientRect","width","height","top","left","x","Math","floor","clientX","y","clientY","has","add","Array","from","values","EmulationPage","EmulationPageRoutingModule","EmulationPageModule","routes","path","component","emulationState","storageService","kvsService","audioService","popoverController","modalController","alertService","fileService","loadingController","ngZone","onNewFrame","drawEmulationCanvas","canvasElt","canvasRef","nativeElement","CanvasHelper","eventHandler","canvasWidth","devicePixelRatio","canvasHeight","session","getCurrentSession","storedSession","getSession","getCanvas","newFrameEvent","addHandler","resume","runOutsideAngular","bind","pause","removeHandler","release","popover","create","event","backdropDismiss","showBackdrop","componentProps","dismiss","present","openFiles","processFilesForInstallation","modal","url","isRunning","isPowerOff","isUiInitialized","name","isInitialized","isMuted","kvs","volume","muted","mute","initialize","files","loader","message","filesSuccess","filesFail","file","test","installFile","content","push","slice","join","header","installFiles","openContextMenu","forChild"],"mappings":"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","file":"x","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\nimport { EmulationService } from './../../../service/emulation.service';\n\n@Component({\n    selector: 'app-emulation-context-menu',\n    templateUrl: './context-menu.component.html',\n    styleUrls: ['./context-menu.component.scss'],\n})\nexport class ContextMenuComponent implements OnInit {\n    constructor(public emulationService: EmulationService) {}\n\n    ngOnInit(): void {}\n\n    reset(): void {\n        this.emulationService.reset();\n\n        this.onClick();\n    }\n\n    resetNoExtensions(): void {\n        this.emulationService.resetNoExtensions();\n\n        this.onClick();\n    }\n\n    resetHard(): void {\n        this.emulationService.resetHard();\n\n        this.onClick();\n    }\n\n    power(): void {\n        this.emulationService.engagePower();\n\n        this.onClick();\n    }\n\n    help(): void {\n        this.showHelp();\n\n        this.onClick();\n    }\n\n    @Input()\n    onClick: () => void = () => undefined;\n\n    @Input()\n    showHelp: () => void = () => undefined;\n}\n","<ion-list>\n  <ion-item button [detail]=\"false\" (click)=\"power()\" [disabled]=\"!emulationService.isRunning()\">\n    Power\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"reset()\" [disabled]=\"!emulationService.isRunning()\">\n    Reset\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"resetNoExtensions()\" [disabled]=\"!emulationService.isRunning()\">\n    Reset (no extensions)\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"resetHard()\" [disabled]=\"!emulationService.isRunning()\">\n    Hard reset\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"help()\">\n    Help\n  </ion-item>\n</ion-list>\n","import { BORDER, CanvasHelper, HEIGHT, SCALE, WIDTH } from './CanvasHelper';\n\nimport { EmulationService } from './../../../service/emulation.service';\nimport { PalmButton } from '../../../../../../src';\n\nconst enum Area {\n    silkscreen,\n    buttons,\n}\n\ninterface InteractionSilkscreen {\n    area: Area.silkscreen;\n}\n\ninterface InteractionButton {\n    area: Area.buttons;\n    button: PalmButton;\n}\n\ntype Interaction = InteractionSilkscreen | InteractionButton;\n\nfunction keyToCode(key: string): number | undefined {\n    if (key.length === 1 && key.charCodeAt(0) <= 255) return key.charCodeAt(0);\n\n    switch (key) {\n        case 'ArrowLeft':\n            return 0x1c;\n\n        case 'ArrowRight':\n            return 0x1d;\n\n        case 'ArrowUp':\n            return 0x1e;\n\n        case 'ArrowDown':\n            return 0x1f;\n\n        case 'Backspace':\n            return 0x08;\n\n        case 'Tab':\n            return 0x09;\n\n        case 'Enter':\n            return 0x0a;\n\n        default:\n            return undefined;\n    }\n}\n\nfunction buttonFromEvent(evt: KeyboardEvent): PalmButton | undefined {\n    if (!evt.ctrlKey) return undefined;\n\n    switch (evt.key) {\n        case 'o':\n            return PalmButton.up;\n\n        case 'l':\n            return PalmButton.down;\n\n        case 'y':\n        case 'z':\n            return PalmButton.cal;\n\n        case 'x':\n            return PalmButton.phone;\n\n        case 'c':\n            return PalmButton.todo;\n\n        case 'v':\n            return PalmButton.notes;\n    }\n\n    return undefined;\n}\n\nexport class EventHandler {\n    constructor(\n        private canvas: HTMLCanvasElement,\n        private emulationService: EmulationService,\n        private canvasHelper: CanvasHelper\n    ) {}\n\n    bind(): void {\n        if (this.bound) return;\n\n        this.canvas.addEventListener('mousedown', this.handleMouseDown);\n        window.addEventListener('mouseup', this.handeMouseUp);\n        window.addEventListener('mousemove', this.handleMouseMove);\n\n        this.canvas.addEventListener('touchstart', this.handleTouchStart);\n        this.canvas.addEventListener('touchmove', this.handleTouchMove);\n        this.canvas.addEventListener('touchend', this.handleTouchEnd);\n        this.canvas.addEventListener('touchcancel', this.handleTouchEnd);\n\n        window.addEventListener('keydown', this.handleKeyDown);\n        window.addEventListener('keyup', this.handleKeyUp);\n\n        this.bound = true;\n    }\n\n    release(): void {\n        if (!this.bound) return;\n\n        this.canvas.removeEventListener('mousedown', this.handleMouseDown);\n        window.removeEventListener('mouseup', this.handeMouseUp);\n        window.removeEventListener('mousemove', this.handleMouseMove);\n\n        this.canvas.removeEventListener('touchstart', this.handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this.handleTouchMove);\n        this.canvas.removeEventListener('touchend', this.handleTouchEnd);\n        this.canvas.removeEventListener('touchcancel', this.handleTouchEnd);\n\n        window.removeEventListener('keydown', this.handleKeyDown);\n        window.removeEventListener('keyup', this.handleKeyUp);\n\n        for (const button of this.activeButtons) {\n            this.handleButtonUp(button);\n        }\n\n        this.activeButtons.clear();\n        this.interactionsTouch.clear();\n        this.interactionMouse = undefined;\n\n        this.bound = false;\n    }\n\n    private handleMouseDown = (e: MouseEvent): void => {\n        if (e.button !== 0) return;\n\n        const coords = this.eventToPalmCoordinates(e);\n        if (!coords) return;\n\n        const area = this.determineArea(coords);\n\n        if (area === Area.silkscreen) {\n            this.interactionMouse = { area };\n            this.emulationService.handlePointerMove(...coords);\n        } else {\n            const button = this.determineButton(coords);\n            this.interactionMouse = { area, button };\n\n            this.handleButtonDown(button);\n        }\n    };\n\n    private handleMouseMove = (e: MouseEvent): void => {\n        // tslint:disable-next-line: no-bitwise\n        if (!(e.buttons & 0x01) || this.interactionMouse?.area !== Area.silkscreen) return;\n\n        const coords = this.eventToPalmCoordinates(e, true);\n        if (!coords) return;\n\n        this.emulationService.handlePointerMove(...coords);\n    };\n\n    private handeMouseUp = (e: MouseEvent): void => {\n        if (e.button !== 0) return;\n\n        const interaction = this.interactionMouse;\n        this.interactionMouse = undefined;\n\n        switch (interaction?.area) {\n            case Area.buttons:\n                this.handleButtonUp(interaction.button);\n\n                break;\n\n            case Area.silkscreen:\n                this.emulationService.handlePointerUp();\n\n                break;\n        }\n    };\n\n    private handleTouchStart = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!touch) continue;\n\n            const coords = this.eventToPalmCoordinates(touch);\n            if (!coords) continue;\n\n            const area = this.determineArea(coords);\n            if (area === Area.silkscreen) {\n                this.interactionsTouch.set(touch.identifier, { area });\n                this.emulationService.handlePointerMove(...coords);\n            } else {\n                const button = this.determineButton(coords);\n                this.interactionsTouch.set(touch.identifier, { area, button });\n\n                this.handleButtonDown(button);\n            }\n        }\n\n        if (e.cancelable !== false) e.preventDefault();\n    };\n\n    private handleTouchMove = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!touch) continue;\n\n            if (this.interactionsTouch.get(touch.identifier)?.area === Area.silkscreen) {\n                const coords = this.eventToPalmCoordinates(touch, true);\n                if (!coords) continue;\n\n                this.emulationService.handlePointerMove(...coords);\n            }\n        }\n\n        if (e.cancelable !== false) e.preventDefault();\n    };\n\n    private handleTouchEnd = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!touch) continue;\n\n            const interaction = this.interactionsTouch.get(touch.identifier);\n            this.interactionsTouch.delete(touch.identifier);\n\n            switch (interaction?.area) {\n                case Area.buttons:\n                    this.handleButtonUp(interaction.button);\n\n                    break;\n\n                case Area.silkscreen:\n                    this.emulationService.handlePointerUp();\n\n                    break;\n            }\n        }\n\n        if (e.cancelable !== false) e.preventDefault();\n    };\n\n    private handleKeyDown = (e: KeyboardEvent): void => {\n        const button = buttonFromEvent(e);\n        if (button !== undefined) {\n            this.handleButtonDown(button);\n            e.preventDefault();\n\n            return;\n        }\n\n        const keyCode = keyToCode(e.key);\n        if (!e.ctrlKey && keyCode !== undefined) {\n            this.emulationService.handleKeyDown(keyCode);\n            e.preventDefault();\n        }\n    };\n\n    private handleKeyUp = (e: KeyboardEvent): void => {\n        const button = buttonFromEvent(e);\n        if (button !== undefined) {\n            this.handleButtonUp(button);\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.key === 'Control') {\n            for (const btn of this.activeButtons) {\n                this.emulationService.handleButtonUp(btn);\n            }\n\n            this.activeButtons.clear();\n            this.canvasHelper.drawButtons([]);\n        }\n    };\n\n    private eventToPalmCoordinates(e: MouseEvent | Touch, clip = false): [number, number] | undefined {\n        const bb = this.canvas.getBoundingClientRect();\n\n        let contentX: number;\n        let contentY: number;\n        let contentWidth: number;\n        let contentHeight: number;\n\n        // CSS object-fit keeps the aspect ratio of the canvas content, but the canvas itself\n        // looses aspect and fills the container -> manually calculate the metrics for the content\n        if (bb.width / bb.height > WIDTH / HEIGHT) {\n            contentHeight = bb.height;\n            contentWidth = (WIDTH / HEIGHT) * bb.height;\n            contentY = bb.top;\n            contentX = bb.left + (bb.width - contentWidth) / 2;\n        } else {\n            contentWidth = bb.width;\n            contentHeight = (HEIGHT / WIDTH) * bb.width;\n            contentX = bb.left;\n            contentY = bb.top + (bb.height - contentHeight) / 2;\n        }\n\n        // Compensate for the border\n        let x = Math.floor((((e.clientX - contentX) / contentWidth) * WIDTH) / SCALE) - BORDER / SCALE;\n        let y = Math.floor((((e.clientY - contentY) / contentHeight) * HEIGHT) / SCALE) - BORDER / SCALE;\n\n        // The canvas layout inside the border is as follows:\n        //\n        // * 0 .. 159   : LCD\n        // * 160        : separator\n        // * 161 .. 220 : silkscreen\n        // * 221 .. 250 : buttons\n        //\n        // we map this to 160x250 lines by mapping the separator to the silkscreen\n\n        if (y >= 161) y -= 1;\n\n        if (clip) {\n            if (x < 0) x = 0;\n            if (x > 159) x = 159;\n            if (y < 0) y = 0;\n            if (y > 249) y = 249;\n        } else {\n            if (x < 0 || x >= 160 || y < 0 || y >= 250) return undefined;\n        }\n\n        return [x, y];\n    }\n\n    private determineArea([, y]: [number, number]): Area {\n        return y >= 220 ? Area.buttons : Area.silkscreen;\n    }\n\n    private determineButton([x, y]: [number, number]): PalmButton {\n        if (x >= 130) return PalmButton.notes;\n        if (x >= 100) return PalmButton.todo;\n        if (x >= 60) return y >= 236 ? PalmButton.down : PalmButton.up;\n        if (x >= 30) return PalmButton.phone;\n\n        return PalmButton.cal;\n    }\n\n    private handleButtonDown(button: PalmButton): void {\n        if (this.activeButtons.has(button)) return;\n\n        this.activeButtons.add(button);\n        this.emulationService.handleButtonDown(button);\n        this.canvasHelper.drawButtons(Array.from(this.activeButtons.values()));\n    }\n\n    private handleButtonUp(button: PalmButton): void {\n        if (!this.activeButtons.has(button)) return;\n\n        this.activeButtons.delete(button);\n        this.emulationService.handleButtonUp(button);\n        this.canvasHelper.drawButtons(Array.from(this.activeButtons.values()));\n    }\n\n    private interactionMouse: Interaction | undefined;\n    private interactionsTouch = new Map<number, Interaction>();\n    private bound = false;\n    private activeButtons = new Set<PalmButton>();\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>{{title}}</ion-title>\n\n    <ion-buttons slot=\"end\">\n      <ion-button [disabled]=\"installFileDisabled\" (click)=\"installFiles()\">\n        <ion-icon name=\"download-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"openContextMenu($event)\">\n        <ion-icon name=\"ellipsis-vertical-outline\"></ion-icon>\n      </ion-button>\n\n      <ion-button *ngIf=\"isMuted && !isAudioOff\" (click)=\"mute(false)\">\n        <ion-icon name=\"volume-mute-outline\"></ion-icon>\n      </ion-button>\n      <ion-button *ngIf=\"!isMuted && !isAudioOff\" (click)=\"mute(true)\">\n        <ion-icon name=\"volume-high-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <div class=\"container running-session\" [style.display]=\"emulationState.getCurrentSession() ? undefined : 'none'\">\n    <canvas #canvas [width]=\"canvasWidth\" [height]=\"canvasHeight\" [style.width]=\"cssWidth\" [style.height]=\"cssHeight\"\n      [style.display]=\"emulationState.getCurrentSession() ? 'block' : 'none'\"></canvas>\n  </div>\n\n  <div class=\"container no-session\" *ngIf=\" !emulationState.getCurrentSession()\">\n    <div>No session selected</div>\n  </div>\n\n</ion-content>\n","import { RouterModule, Routes } from '@angular/router';\n\nimport { EmulationPage } from './emulation.page';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: EmulationPage,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class EmulationPageRoutingModule {}\n","import { AfterViewInit, Component, ElementRef, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { CanvasHelper, HEIGHT, WIDTH } from './helper/CanvasHelper';\nimport { FileDescriptor, FileService } from 'src/app/service/file.service';\nimport { LoadingController, ModalController, PopoverController } from '@ionic/angular';\nimport { getStoredSession, hasStoredSession } from 'src/app/helper/storedSession';\n\nimport { AlertService } from 'src/app/service/alert.service';\nimport { AudioService } from './../../service/audio.service';\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\nimport { EmulationService } from './../../service/emulation.service';\nimport { EmulationStateService } from './../../service/emulation-state.service';\nimport { EventHandler } from './helper/EventHandler';\nimport { HelpComponent } from 'src/app/component/help/help.component';\nimport { KvsService } from './../../service/kvs.service';\nimport { PalmButton } from '../../../../../src';\nimport { StorageService } from './../../service/storage.service';\n\n@Component({\n    selector: 'app-emulation',\n    templateUrl: './emulation.page.html',\n    styleUrls: ['./emulation.page.scss'],\n})\nexport class EmulationPage implements AfterViewInit {\n    constructor(\n        public emulationService: EmulationService,\n        public emulationState: EmulationStateService,\n        private storageService: StorageService,\n        private kvsService: KvsService,\n        private audioService: AudioService,\n        private popoverController: PopoverController,\n        private modalController: ModalController,\n        private alertService: AlertService,\n        private fileService: FileService,\n        private loadingController: LoadingController,\n        private ngZone: NgZone\n    ) {}\n\n    ngAfterViewInit(): void {\n        const canvasElt = this.canvasRef.nativeElement;\n        this.canvasHelper = new CanvasHelper(canvasElt);\n        this.eventHandler = new EventHandler(canvasElt, this.emulationService, this.canvasHelper);\n    }\n\n    get canvasWidth(): number {\n        return WIDTH;\n    }\n\n    get canvasHeight(): number {\n        return HEIGHT;\n    }\n\n    get cssWidth(): string {\n        return this.canvasWidth / devicePixelRatio + 'px';\n    }\n\n    get cssHeight(): string {\n        return this.canvasHeight / devicePixelRatio + 'px';\n    }\n\n    async ionViewDidEnter(): Promise<void> {\n        let session = this.emulationState.getCurrentSession();\n        const storedSession = getStoredSession();\n\n        if (!session && storedSession !== undefined) {\n            session = await this.storageService.getSession(storedSession);\n        }\n        this.canvasHelper.clear(session);\n        this.onNewFrame(this.emulationService.getCanvas());\n\n        this.emulationService.newFrameEvent.addHandler(this.onNewFrame);\n\n        this.emulationService.resume();\n\n        this.ngZone.runOutsideAngular(() => this.eventHandler.bind());\n    }\n\n    ionViewWillLeave() {\n        this.emulationService.pause();\n\n        this.emulationService.newFrameEvent.removeHandler(this.onNewFrame);\n\n        this.eventHandler.release();\n    }\n\n    async openContextMenu(e: MouseEvent): Promise<void> {\n        const popover = await this.popoverController.create({\n            component: ContextMenuComponent,\n            event: e,\n            backdropDismiss: true,\n            showBackdrop: false,\n            componentProps: {\n                onClick: () => popover.dismiss(),\n                showHelp: () => this.showHelp(),\n            },\n        });\n\n        popover.present();\n    }\n\n    installFiles(): void {\n        this.fileService.openFiles(this.processFilesForInstallation.bind(this));\n    }\n\n    async showHelp(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: HelpComponent,\n            componentProps: {\n                url: 'assets/doc/emulation.md',\n            },\n        });\n        await modal.present();\n    }\n\n    get installFileDisabled(): boolean {\n        return (\n            !this.emulationService.isRunning() ||\n            this.emulationService.isPowerOff() ||\n            !this.emulationService.isUiInitialized()\n        );\n    }\n\n    get title(): string {\n        return this.emulationState.getCurrentSession()?.name || '';\n    }\n\n    get isMuted(): boolean {\n        return !this.audioService.isInitialized() || this.audioService.isMuted();\n    }\n\n    get isAudioOff(): boolean {\n        return this.kvsService.kvs.volume <= 0;\n    }\n\n    mute(muted: boolean): void {\n        if (muted) {\n            this.audioService.mute(true);\n        } else {\n            if (this.audioService.isInitialized()) {\n                this.audioService.mute(false);\n            } else {\n                this.audioService.initialize();\n            }\n        }\n    }\n\n    private onNewFrame = (canvas: HTMLCanvasElement): void => {\n        this.canvasHelper.drawEmulationCanvas(canvas);\n    };\n\n    private async processFilesForInstallation(files: Array<FileDescriptor>): Promise<void> {\n        const loader = await this.loadingController.create({\n            message: 'Installing...',\n        });\n        await loader.present();\n\n        const filesSuccess: Array<string> = [];\n        const filesFail: Array<string> = [];\n\n        try {\n            for (const file of files) {\n                if (!/\\.(prc|pdb)$/i.test(file.name)) {\n                    filesFail.push(file.name);\n\n                    continue;\n                }\n\n                if ((await this.emulationService.installFile(file.content)) == 0) {\n                    filesSuccess.push(file.name);\n                } else {\n                    filesFail.push(file.name);\n                }\n            }\n        } finally {\n            loader.dismiss();\n        }\n\n        let message: string;\n\n        switch (filesSuccess.length) {\n            case 0:\n                message = '';\n                break;\n\n            case 1:\n                message = `Installation of ${filesSuccess[0]} successful.`;\n                break;\n\n            default:\n                message = `Installation of ${filesSuccess.length} files successful.`;\n                break;\n        }\n\n        if (filesFail.length > 0) message += '<br/><br/>';\n\n        switch (filesFail.length) {\n            case 0:\n                break;\n\n            case 1:\n                message += `Installation of ${filesFail[0]} failed.`;\n                break;\n\n            default:\n                message += `Installation of ${filesFail\n                    .slice(0, filesFail.length > 3 ? 3 : filesFail.length - 1)\n                    .join(', ')} and ${\n                    filesFail.length > 3 ? filesFail.length - 3 + ' more files' : filesFail[filesFail.length - 1]\n                } failed.`;\n\n                break;\n        }\n\n        let header;\n\n        if (filesFail.length === 0) {\n            header = 'Installation successful';\n        } else if (filesSuccess.length === 0) {\n            header = 'Installation failed';\n        } else {\n            header = 'Installation errors';\n        }\n\n        this.alertService.message(header, message);\n    }\n\n    @ViewChild('canvas') private canvasRef!: ElementRef<HTMLCanvasElement>;\n    private canvasHelper!: CanvasHelper;\n    private eventHandler!: EventHandler;\n}\n","import { CommonModule } from '@angular/common';\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\nimport { EmulationPage } from './emulation.page';\nimport { EmulationPageRoutingModule } from './emulation-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { SharedComponentModule } from './../../component/shared-component.module';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, IonicModule, EmulationPageRoutingModule, SharedComponentModule],\n    declarations: [EmulationPage, ContextMenuComponent],\n})\nexport class EmulationPageModule {}\n"]}