{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js"],"names":["createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","setSpinnerOpacity","style","setProperty","toString","translateElement","el","value","Promise","resolve","trans","transitionEndAsync","removeProperty","shouldUseNativeRefresher","async","referenceEl","mode","refresherContent","c","pullingSpinner","refreshingSpinner","webkitOverflowScrolling","expectedDuration","transitionEnd","callback","unRegTrans","animationTimeout","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","setTimeout","clearTimeout","removeEventListener","Refresher","hostRef","this","ionRefresh","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","lastVelocityY","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","gesture","enable","useNativeRefresher","contentEl","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","forEach","ani","destroy","elementToTransform","ticks","querySelectorAll","MAX_PULL","clientHeight","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","Math","abs","pullAmount","currentTickToShow","floor","beginRefresh","i","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","velocityY","onEnd","resetNativeRefresher","disabledChanged","g","refreshingCircle","canStart","data","animation","cancelled","type","height","spinnerAnimation","previousSibling","previousElementSibling","tagName","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","fromTo","play","setCss","setupiOSNativeRefresher","setupMDNativeRefresher","checkNativeRefresher","getAttribute","console","error","getScrollElement","backgroundContentEl","close","detail","event","touches","Number","isNaN","cancelable","preventDefault","cancel","complete","bind","delay","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","slot","class","ios","md","RefresherContent","pullingIcon","overflowRefresher","get","hasSpinner","name","paused","icon","lazy","pullingText","innerHTML","refreshingText"],"mappings":"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","file":"x","sourcesContent":["import { c as writeTask, r as registerInstance, e as createEvent, f as readTask, h, i as getElement, H as Host } from './index-3ccd7557.js';\nimport { a as isPlatform, b as getIonMode, c as config } from './ionic-global-ddef3a45.js';\nimport { c as componentOnReady, j as clamp, g as getElementRoot, r as raf } from './helpers-cf6e85ee.js';\nimport { c as createAnimation } from './animation-5782b3f0.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { s as sanitizeDOMString } from './index-9e3fe806.js';\nimport { d as hapticImpact } from './haptic-27b3f981.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation()\n    .duration(1000)\n    .easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' }\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.20, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' }\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' }\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.30, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' }\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n  writeTask(() => {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, 200);\n  writeTask(() => {\n    el.style.setProperty('transition', '0.2s all ease-out');\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await new Promise(resolve => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n  return new Promise(resolve => {\n    transitionEnd(el, expectedDuration, resolve);\n  });\n};\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n  let unRegTrans;\n  let animationTimeout;\n  const opts = { passive: true };\n  const ANIMATION_FALLBACK_TIMEOUT = 500;\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (ev === undefined || el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n    animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n    unRegTrans = () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n        animationTimeout = undefined;\n      }\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        // delay showing the next tick marks until user has pulled 30px\n        const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n        const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n        const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* Pulling */;\n          handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* Pulling */;\n          writeTask(() => {\n            const animationType = getRefresherAnimationType(contentEl);\n            const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n            ev.data.animation = animation;\n            this.scrollEl.style.setProperty('--overflow', 'hidden');\n            animation.progressStart(false, 0);\n            this.ionStart.emit();\n            this.animations.push(animation);\n          });\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation\n            .progressEnd(0, this.progress, 500)\n            .onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-refresher> must be used inside an <ion-content>');\n      return;\n    }\n    await new Promise(resolve => componentOnReady(contentEl, resolve));\n    this.scrollEl = await contentEl.getScrollElement();\n    this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n    if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    }\n    else {\n      this.gesture = (await import('./index-f49d994d.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 31,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd(),\n      });\n      this.disabledChanged();\n    }\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* _BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n    // TODO: stop gesture\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = (y > 0);\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* Inactive */,\n        'refresher-pulling': this.state === 2 /* Pulling */,\n        'refresher-ready': this.state === 4 /* Ready */,\n        'refresher-refreshing': this.state === 8 /* Refreshing */,\n        'refresher-cancelling': this.state === 16 /* Cancelling */,\n        'refresher-completing': this.state === 32 /* Completing */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\n\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n        h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n      h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n      h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n      h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"]}