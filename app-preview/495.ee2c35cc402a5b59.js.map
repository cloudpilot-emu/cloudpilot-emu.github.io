{"version":3,"file":"495.ee2c35cc402a5b59.js","mappings":"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","names":["focusableQueryString","Menu","constructor","hostRef","registerInstance","this","ionWillOpen","createEvent","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lastOnEnd","blocker","GESTURE_CONTROLLER","disableScroll","isAnimating","_isOpen","inheritedAttributes","handleFocus","ev","lastOverlay","getOverlay","document","contains","el","trapKeyboardFocus","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","typeChanged","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","disabledChanged","updateState","emit","open","sideChanged","swipeGestureChanged","connectedCallback","customElements","whenDefined","_this","config","content","contentId","getElementById","console","error","menuController","gesture","Promise","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","componentWillLoad","inheritAriaAttributes","componentDidLoad","_this2","disconnectedCallback","destroy","backdropEl","onSplitPaneChanged","detail","isPane","onBackdropClick","timeStamp","composedPath","includes","preventDefault","stopPropagation","close","onKeydown","key","isOpen","resolve","isActive","_isActive","animated","setOpen","toggle","shouldOpen","focusFirstDescendant","firstInput","querySelector","focus","focusLastDescendant","inputs","Array","from","querySelectorAll","lastInput","length","doc","target","lastFocus","activeElement","_setOpen","_this3","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","_this4","offsetWidth","duration","fill","isReversed","mode","getIonMode","_this5","easing","easingReverse","ani","direction","onFinish","getDirection","play","sync","canSwipe","checkEdgeSide","window","currentX","progressStart","assert","stepValue","computeDelta","deltaX","progressStep","delta","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","getTimeGivenProgression","clamp","playTo","oneTimeCallback","progressEnd","SHOW_MENU","setAttribute","SHOW_BACKDROP","block","_a","unblock","MENU_CONTENT_OPEN","closest","addEventListener","stop","removeEventListener","enable","forceClosing","render","h","Host","role","class","f","part","ref","tappable","getElement","watchers","Math","max","win","posX","innerWidth","style","ios","md","updateVisibility","menu","menuEl","_x","MenuButton","visible","autoHide","onClick","_this6","visibilityChanged","_this7","color","menuIcon","menuOutline","menuSharp","hidden","attrs","ariaLabel","createColorClasses","d","button","hostContext","Object","assign","icon","lazy","MenuToggle","_this8","t","menuToggleCss","selector","cssClassMap","getClassMap","classes","map","getClassList","isArray","split","filter","c","trim","forEach","SCHEME","openURL","url","test","router","push"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js","./node_modules/@ionic/core/dist/esm/theme-7670341c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-8e692445.js';\nimport { c as config, b as getIonMode } from './ionic-global-c95cf239.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-e78d1307.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-17060b7c.js';\nimport { o as isEndSide, i as inheritAriaAttributes, n as assert, l as clamp } from './helpers-3b390e48.js';\nimport { m as menuController } from './index-2dc81358.js';\nimport { k as getOverlay } from './overlays-83f4c90d.js';\nimport { u as menuOutline, v as menuSharp } from './index-da396832.js';\nimport { c as createColorClasses, h as hostContext } from './theme-7670341c.js';\nimport './hardware-back-button-490df115.js';\nimport './animation-6a1a2a1d.js';\nimport './index-33ffec25.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]), input:not([type=hidden]):not([tabindex^=\"-\"]), textarea:not([tabindex^=\"-\"]), button:not([tabindex^=\"-\"]), select:not([tabindex^=\"-\"]), .ion-focusable:not([tabindex^=\"-\"])';\nconst Menu = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.inheritedAttributes = {};\n    this.handleFocus = (ev) => {\n      /**\n       * Overlays have their own focus trapping listener\n       * so we do not want the two listeners to conflict\n       * with each other. If the top-most overlay that is\n       * open does not contain this ion-menu, then ion-menu's\n       * focus trapping should not run.\n       */\n      const lastOverlay = getOverlay(document);\n      if (lastOverlay && !lastOverlay.contains(this.el)) {\n        return;\n      }\n      this.trapKeyboardFocus(ev, document);\n    };\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    /**\n     * If `true`, the menu is disabled.\n     */\n    this.disabled = false;\n    /**\n     * Which side of the view the menu should be placed.\n     */\n    this.side = 'start';\n    /**\n     * If `true`, swiping the menu is enabled.\n     */\n    this.swipeGesture = true;\n    /**\n     * The edge threshold for dragging the menu open.\n     * If a drag/swipe happens over this value, the menu is not triggered.\n     */\n    this.maxEdgeStart = 50;\n  }\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n    this.animation = undefined;\n  }\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen,\n    });\n  }\n  sideChanged() {\n    this.isEndSide = isEndSide(this.side);\n  }\n  swipeGestureChanged() {\n    this.updateState();\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined') {\n      await customElements.whenDefined('ion-menu');\n    }\n    if (this.type === undefined) {\n      this.type = config.get('menuType', 'overlay');\n    }\n    const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n    if (content === null) {\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\n      return;\n    }\n    if (this.el.contains(content)) {\n      console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n    }\n    this.contentEl = content;\n    // add menu's content classes\n    content.classList.add('menu-content');\n    this.typeChanged(this.type, undefined);\n    this.sideChanged();\n    // register this menu with the app's menu controller\n    menuController._register(this);\n    this.gesture = (await import('./index-f8d8aa5a.js')).createGesture({\n      el: document,\n      gestureName: 'menu-swipe',\n      gesturePriority: 30,\n      threshold: 10,\n      blurOnStart: true,\n      canStart: (ev) => this.canStart(ev),\n      onWillStart: () => this.onWillStart(),\n      onStart: () => this.onStart(),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.updateState();\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  async componentDidLoad() {\n    this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.blocker.destroy();\n    menuController._unregister(this);\n    if (this.animation) {\n      this.animation.destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.animation = undefined;\n    this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n  }\n  onSplitPaneChanged(ev) {\n    this.isPaneVisible = ev.detail.isPane(this.el);\n    this.updateState();\n  }\n  onBackdropClick(ev) {\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close();\n      }\n    }\n  }\n  onKeydown(ev) {\n    if (ev.key === 'Escape') {\n      this.close();\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` is the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   */\n  open(animated = true) {\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   */\n  close(animated = true) {\n    return this.setOpen(false, animated);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  toggle(animated = true) {\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the button.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  setOpen(shouldOpen, animated = true) {\n    return menuController._setOpen(this, shouldOpen, animated);\n  }\n  focusFirstDescendant() {\n    const { el } = this;\n    const firstInput = el.querySelector(focusableQueryString);\n    if (firstInput) {\n      firstInput.focus();\n    }\n    else {\n      el.focus();\n    }\n  }\n  focusLastDescendant() {\n    const { el } = this;\n    const inputs = Array.from(el.querySelectorAll(focusableQueryString));\n    const lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\n    if (lastInput) {\n      lastInput.focus();\n    }\n    else {\n      el.focus();\n    }\n  }\n  trapKeyboardFocus(ev, doc) {\n    const target = ev.target;\n    if (!target) {\n      return;\n    }\n    /**\n     * If the target is inside the menu contents, let the browser\n     * focus as normal and keep a log of the last focused element.\n     */\n    if (this.el.contains(target)) {\n      this.lastFocus = target;\n    }\n    else {\n      /**\n       * Otherwise, we are about to have focus go out of the menu.\n       * Wrap the focus to either the first or last element.\n       */\n      /**\n       * Once we call `focusFirstDescendant`, another focus event\n       * will fire, which will cause `lastFocus` to be updated\n       * before we can run the code after that. We cache the value\n       * here to avoid that.\n       */\n      this.focusFirstDescendant();\n      /**\n       * If the cached last focused element is the same as the now-\n       * active element, that means the user was on the first element\n       * already and pressed Shift + Tab, so we need to wrap to the\n       * last descendant.\n       */\n      if (this.lastFocus === doc.activeElement) {\n        this.focusLastDescendant();\n      }\n    }\n  }\n  async _setOpen(shouldOpen, animated = true) {\n    // If the menu is disabled or it is currently being animated, let's do nothing\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n      return false;\n    }\n    this.beforeAnimation(shouldOpen);\n    await this.loadAnimation();\n    await this.startAnimation(shouldOpen, animated);\n    this.afterAnimation(shouldOpen);\n    return true;\n  }\n  async loadAnimation() {\n    // Menu swipe animation takes the menu's inner width as parameter,\n    // If `offsetWidth` changes, we need to create a new animation.\n    const width = this.menuInnerEl.offsetWidth;\n    if (width === this.width && this.animation !== undefined) {\n      return;\n    }\n    this.width = width;\n    // Destroy existing animation\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = undefined;\n    }\n    // Create new animation\n    this.animation = await menuController._createAnimation(this.type, this);\n    if (!config.getBoolean('animated', true)) {\n      this.animation.duration(0);\n    }\n    this.animation.fill('both');\n  }\n  async startAnimation(shouldOpen, animated) {\n    const isReversed = !shouldOpen;\n    const mode = getIonMode(this);\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n    const ani = this.animation\n      .direction(isReversed ? 'reverse' : 'normal')\n      .easing(isReversed ? easingReverse : easing)\n      .onFinish(() => {\n      if (ani.getDirection() === 'reverse') {\n        ani.direction('normal');\n      }\n    });\n    if (animated) {\n      await ani.play();\n    }\n    else {\n      ani.play({ sync: true });\n    }\n  }\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n    if (this._isOpen) {\n      return true;\n    }\n    else if (menuController._getOpenSync()) {\n      return false;\n    }\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen);\n    return this.loadAnimation();\n  }\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    // the cloned animation should not use an easing curve during seek\n    this.animation.progressStart(true, this._isOpen ? 1 : 0);\n  }\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n  }\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen\n      ? isEndSide\n        ? shouldCompleteRight\n        : shouldCompleteLeft\n      : isEndSide\n        ? shouldCompleteLeft\n        : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n    this.lastOnEnd = detail.currentTime;\n    // Account for rounding errors in JS\n    let newStepValue = shouldComplete ? 0.001 : -0.001;\n    /**\n     * stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     */\n    const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n    newStepValue +=\n      getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n    this.animation\n      .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n      .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n      .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n  }\n  beforeAnimation(shouldOpen) {\n    assert(!this.isAnimating, '_before() should not be called while animating');\n    // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n    this.el.classList.add(SHOW_MENU);\n    /**\n     * We add a tabindex here so that focus trapping\n     * still works even if the menu does not have\n     * any focusable elements slotted inside. The\n     * focus trapping utility will fallback to focusing\n     * the menu so focus does not leave when the menu\n     * is open.\n     */\n    this.el.setAttribute('tabindex', '0');\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n    this.blocker.block();\n    this.isAnimating = true;\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    }\n    else {\n      this.ionWillClose.emit();\n    }\n  }\n  afterAnimation(isOpen) {\n    var _a;\n    assert(this.isAnimating, '_before() should be called while animating');\n    // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n    if (isOpen) {\n      // add css class and hide content behind menu from screen readers\n      if (this.contentEl) {\n        this.contentEl.classList.add(MENU_CONTENT_OPEN);\n        /**\n         * When the menu is open and overlaying the main\n         * content, the main content should not be announced\n         * by the screenreader as the menu is the main\n         * focus. This is useful with screenreaders that have\n         * \"read from top\" gestures that read the entire\n         * page from top to bottom when activated.\n         */\n        this.contentEl.setAttribute('aria-hidden', 'true');\n      }\n      // emit open event\n      this.ionDidOpen.emit();\n      /**\n       * Move focus to the menu to prepare focus trapping, as long as\n       * it isn't already focused. Use the host element instead of the\n       * first descendant to avoid the scroll position jumping around.\n       */\n      const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n      if (focusedMenu !== this.el) {\n        this.el.focus();\n      }\n      // start focus trapping\n      document.addEventListener('focus', this.handleFocus, true);\n    }\n    else {\n      // remove css classes and unhide content from screen readers\n      this.el.classList.remove(SHOW_MENU);\n      /**\n       * Remove tabindex from the menu component\n       * so that is cannot be tabbed to.\n       */\n      this.el.removeAttribute('tabindex');\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n        /**\n         * Remove aria-hidden so screen readers\n         * can announce the main content again\n         * now that the menu is not the main focus.\n         */\n        this.contentEl.removeAttribute('aria-hidden');\n      }\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n      if (this.animation) {\n        this.animation.stop();\n      }\n      // emit close event\n      this.ionDidClose.emit();\n      // undo focus trapping so multiple menus don't collide\n      document.removeEventListener('focus', this.handleFocus, true);\n    }\n  }\n  updateState() {\n    const isActive = this._isActive();\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    }\n    // Close menu immediately\n    if (!isActive && this._isOpen) {\n      // close if this menu is open, and should not be enabled\n      this.forceClosing();\n    }\n    if (!this.disabled) {\n      menuController._setActiveMenu(this);\n    }\n    assert(!this.isAnimating, 'can not be animating');\n  }\n  forceClosing() {\n    assert(this._isOpen, 'menu cannot be closed');\n    this.isAnimating = true;\n    const ani = this.animation.direction('reverse');\n    ani.play({ sync: true });\n    this.afterAnimation(false);\n  }\n  render() {\n    const { isEndSide, type, disabled, isPaneVisible, inheritedAttributes } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        'menu-side-end': isEndSide,\n        'menu-side-start': !isEndSide,\n        'menu-pane-visible': isPaneVisible,\n      } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"type\": [\"typeChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"side\": [\"sideChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"]\n  }; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  }\n  else {\n    return posX <= maxEdgeStart;\n  }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n  ios: menuIosCss,\n  md: menuMdCss\n};\n\n// Given a menu, return whether or not the menu toggle should be visible\nconst updateVisibility = async (menu) => {\n  const menuEl = await menuController.get(menu);\n  return !!(menuEl && (await menuEl.isActive()));\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\n\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\n\nconst MenuButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inheritedAttributes = {};\n    this.visible = false;\n    /**\n     * If `true`, the user cannot interact with the menu button.\n     */\n    this.disabled = false;\n    /**\n     * Automatically hides the menu button when the corresponding menu is not active\n     */\n    this.autoHide = true;\n    /**\n     * The type of the button.\n     */\n    this.type = 'button';\n    this.onClick = async () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  componentDidLoad() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const { color, disabled, inheritedAttributes } = this;\n    const mode = getIonMode(this);\n    const menuIcon = config.get('menuIcon', mode === 'ios' ? menuOutline : menuSharp);\n    const hidden = this.autoHide && !this.visible;\n    const attrs = {\n      type: this.type,\n    };\n    const ariaLabel = inheritedAttributes['aria-label'] || 'menu';\n    return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\n        [mode]: true,\n        button: true,\n        'menu-button-hidden': hidden,\n        'menu-button-disabled': disabled,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': true,\n        'ion-focusable': true,\n      }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n  }\n  get el() { return getElement(this); }\n};\nMenuButton.style = {\n  ios: menuButtonIosCss,\n  md: menuButtonMdCss\n};\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * Automatically hides the content when the corresponding menu is not active.\n     *\n     * By default, it's `true`. Change it to `false` in order to\n     * keep `ion-menu-toggle` always visible regardless the state of the menu.\n     */\n    this.autoHide = true;\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden,\n      } }, h(\"slot\", null)));\n  }\n};\nMenuToggle.style = menuToggleCss;\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}