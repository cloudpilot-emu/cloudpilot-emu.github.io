{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js"],"names":["Menu","hostRef","this","ionWillOpen","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lastOnEnd","blocker","createBlocker","disableScroll","isAnimating","_isOpen","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","type","oldType","contentEl","classList","remove","add","removeAttribute","menuInnerEl","animation","updateState","emit","open","c","get","parent","el","parentNode","contentId","console","warn","content","document","getElementById","querySelector","tagName","typeChanged","sideChanged","_register","gesture","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","ev","onWillStart","onStart","onMove","onEnd","error","destroy","_unregister","backdropEl","detail","isPane","timeStamp","composedPath","includes","preventDefault","stopPropagation","close","Promise","resolve","_isActive","animated","setOpen","shouldOpen","_setOpen","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","mode","easing","easingReverse","ani","direction","onFinish","getDirection","play","sync","canSwipe","_getOpenSync","checkEdgeSide","window","currentX","progressStart","stepValue","computeDelta","deltaX","progressStep","isOpen","delta","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","playTo","oneTimeCallback","progressEnd","SHOW_MENU","SHOW_BACKDROP","block","unblock","MENU_CONTENT_OPEN","stop","isActive","enable","forceClosing","_setActiveMenu","role","class","part","ref","tappable","Math","max","win","posX","innerWidth","style","ios","md","updateVisibility","async","menu","menuEl","MenuButton","visible","autoHide","onClick","toggle","visibilityChanged","color","menuIcon","hidden","attrs","Object","assign","icon","lazy","MenuToggle"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-3ccd7557.js';\nimport { c as config, b as getIonMode } from './ionic-global-ddef3a45.js';\nimport { m as isEndSide, l as assert, j as clamp } from './helpers-cf6e85ee.js';\nimport './animation-5782b3f0.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-31cb6bb9.js';\nimport './hardware-back-button-4a6b37fb.js';\nimport { m as menuController } from './index-8cd461d4.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    /**\n     * If `true`, the menu is disabled.\n     */\n    this.disabled = false;\n    /**\n     * Which side of the view the menu should be placed.\n     */\n    this.side = 'start';\n    /**\n     * If `true`, swiping the menu is enabled.\n     */\n    this.swipeGesture = true;\n    /**\n     * The edge threshold for dragging the menu open.\n     * If a drag/swipe happens over this value, the menu is not triggered.\n     */\n    this.maxEdgeStart = 50;\n  }\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n    this.animation = undefined;\n  }\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen\n    });\n  }\n  sideChanged() {\n    this.isEndSide = isEndSide(this.side);\n  }\n  swipeGestureChanged() {\n    this.updateState();\n  }\n  async connectedCallback() {\n    if (this.type === undefined) {\n      this.type = config.get('menuType', 'overlay');\n    }\n    const el = this.el;\n    const parent = el.parentNode;\n    if (this.contentId === undefined) {\n      console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-menu>...</ion-menu>\n  <div main>...</div>\n\nAFTER:\n  <ion-menu contentId=\"main-content\"></ion-menu>\n  <div id=\"main-content\">...</div>\n`);\n    }\n    const content = this.contentId !== undefined\n      ? document.getElementById(this.contentId)\n      : parent && parent.querySelector && parent.querySelector('[main]');\n    if (!content || !content.tagName) {\n      // requires content element\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\n      return;\n    }\n    this.contentEl = content;\n    // add menu's content classes\n    content.classList.add('menu-content');\n    this.typeChanged(this.type, undefined);\n    this.sideChanged();\n    // register this menu with the app's menu controller\n    menuController._register(this);\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: document,\n      gestureName: 'menu-swipe',\n      gesturePriority: 30,\n      threshold: 10,\n      blurOnStart: true,\n      canStart: ev => this.canStart(ev),\n      onWillStart: () => this.onWillStart(),\n      onStart: () => this.onStart(),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev),\n    });\n    this.updateState();\n  }\n  async componentDidLoad() {\n    this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.blocker.destroy();\n    menuController._unregister(this);\n    if (this.animation) {\n      this.animation.destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.animation = undefined;\n    this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n  }\n  onSplitPaneChanged(ev) {\n    this.isPaneVisible = ev.detail.isPane(this.el);\n    this.updateState();\n  }\n  onBackdropClick(ev) {\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = (ev.composedPath)\n        ? !ev.composedPath().includes(this.menuInnerEl)\n        : false;\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close();\n      }\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` is the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   */\n  open(animated = true) {\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   */\n  close(animated = true) {\n    return this.setOpen(false, animated);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  toggle(animated = true) {\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the button.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  setOpen(shouldOpen, animated = true) {\n    return menuController._setOpen(this, shouldOpen, animated);\n  }\n  async _setOpen(shouldOpen, animated = true) {\n    // If the menu is disabled or it is currently being animated, let's do nothing\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n      return false;\n    }\n    this.beforeAnimation(shouldOpen);\n    await this.loadAnimation();\n    await this.startAnimation(shouldOpen, animated);\n    this.afterAnimation(shouldOpen);\n    return true;\n  }\n  async loadAnimation() {\n    // Menu swipe animation takes the menu's inner width as parameter,\n    // If `offsetWidth` changes, we need to create a new animation.\n    const width = this.menuInnerEl.offsetWidth;\n    if (width === this.width && this.animation !== undefined) {\n      return;\n    }\n    this.width = width;\n    // Destroy existing animation\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = undefined;\n    }\n    // Create new animation\n    this.animation = await menuController._createAnimation(this.type, this);\n    if (!config.getBoolean('animated', true)) {\n      this.animation.duration(0);\n    }\n    this.animation.fill('both');\n  }\n  async startAnimation(shouldOpen, animated) {\n    const isReversed = !shouldOpen;\n    const mode = getIonMode(this);\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n    const ani = this.animation\n      .direction((isReversed) ? 'reverse' : 'normal')\n      .easing((isReversed) ? easingReverse : easing)\n      .onFinish(() => {\n      if (ani.getDirection() === 'reverse') {\n        ani.direction('normal');\n      }\n    });\n    if (animated) {\n      await ani.play();\n    }\n    else {\n      ani.play({ sync: true });\n    }\n  }\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n    if (this._isOpen) {\n      return true;\n      // TODO error\n    }\n    else if (menuController._getOpenSync()) {\n      return false;\n    }\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen);\n    return this.loadAnimation();\n  }\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    // the cloned animation should not use an easing curve during seek\n    this.animation.progressStart(true, (this._isOpen) ? 1 : 0);\n  }\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep((this._isOpen) ? 1 - stepValue : stepValue);\n  }\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen\n      ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n      : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n    this.lastOnEnd = detail.currentTime;\n    // Account for rounding errors in JS\n    let newStepValue = (shouldComplete) ? 0.001 : -0.001;\n    /**\n     * TODO: stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     * Not sure if the negative step value is an error or not\n     */\n    const adjustedStepValue = (stepValue < 0) ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n    newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = (this._isOpen) ? !shouldComplete : shouldComplete;\n    this.animation\n      .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n      .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n      .progressEnd((playTo) ? 1 : 0, (this._isOpen) ? 1 - newStepValue : newStepValue, 300);\n  }\n  beforeAnimation(shouldOpen) {\n    assert(!this.isAnimating, '_before() should not be called while animating');\n    // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n    this.el.classList.add(SHOW_MENU);\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n    this.blocker.block();\n    this.isAnimating = true;\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    }\n    else {\n      this.ionWillClose.emit();\n    }\n  }\n  afterAnimation(isOpen) {\n    assert(this.isAnimating, '_before() should be called while animating');\n    // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n    if (isOpen) {\n      // add css class\n      if (this.contentEl) {\n        this.contentEl.classList.add(MENU_CONTENT_OPEN);\n      }\n      // emit open event\n      this.ionDidOpen.emit();\n    }\n    else {\n      // remove css classes\n      this.el.classList.remove(SHOW_MENU);\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n      }\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n      if (this.animation) {\n        this.animation.stop();\n      }\n      // emit close event\n      this.ionDidClose.emit();\n    }\n  }\n  updateState() {\n    const isActive = this._isActive();\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    }\n    // Close menu immediately\n    if (!isActive && this._isOpen) {\n      // close if this menu is open, and should not be enabled\n      this.forceClosing();\n    }\n    if (!this.disabled) {\n      menuController._setActiveMenu(this);\n    }\n    assert(!this.isAnimating, 'can not be animating');\n  }\n  forceClosing() {\n    assert(this._isOpen, 'menu cannot be closed');\n    this.isAnimating = true;\n    const ani = this.animation.direction('reverse');\n    ani.play({ sync: true });\n    this.afterAnimation(false);\n  }\n  render() {\n    const { isEndSide, type, disabled, isPaneVisible } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"navigation\", class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        'menu-side-end': isEndSide,\n        'menu-side-start': !isEndSide,\n        'menu-pane-visible': isPaneVisible\n      } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"type\": [\"typeChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"side\": [\"sideChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"]\n  }; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  }\n  else {\n    return posX <= maxEdgeStart;\n  }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n  ios: menuIosCss,\n  md: menuMdCss\n};\n\n// Given a menu, return whether or not the menu toggle should be visible\nconst updateVisibility = async (menu) => {\n  const menuEl = await menuController.get(menu);\n  return !!(menuEl && await menuEl.isActive());\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\n\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\n\nconst MenuButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * If `true`, the user cannot interact with the menu button.\n     */\n    this.disabled = false;\n    /**\n     * Automatically hides the menu button when the corresponding menu is not active\n     */\n    this.autoHide = true;\n    /**\n     * The type of the button.\n     */\n    this.type = 'button';\n    this.onClick = async () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n  componentDidLoad() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const { color, disabled } = this;\n    const mode = getIonMode(this);\n    const menuIcon = config.get('menuIcon', mode === 'ios' ? 'menu-outline' : 'menu-sharp');\n    const hidden = this.autoHide && !this.visible;\n    const attrs = {\n      type: this.type\n    };\n    return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\n        [mode]: true,\n        'button': true,\n        'menu-button-hidden': hidden,\n        'menu-button-disabled': disabled,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': true,\n        'ion-focusable': true\n      }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": \"menu\" }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n  }\n  get el() { return getElement(this); }\n};\nMenuButton.style = {\n  ios: menuButtonIosCss,\n  md: menuButtonMdCss\n};\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * Automatically hides the content when the corresponding menu is not active.\n     *\n     * By default, it's `true`. Change it to `false` in order to\n     * keep `ion-menu-toggle` always visible regardless the state of the menu.\n     */\n    this.autoHide = true;\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden,\n      } }, h(\"slot\", null)));\n  }\n};\nMenuToggle.style = menuToggleCss;\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\n"]}