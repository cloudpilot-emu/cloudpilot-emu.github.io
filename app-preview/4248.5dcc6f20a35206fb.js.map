{"version":3,"file":"4248.5dcc6f20a35206fb.js","mappings":"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","names":["hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassMap","classes","map","getClassList","undefined","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","_ref","_asyncToGenerator","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push","_x","_x2","_x3","_x4","apply","this","arguments","Checkbox","constructor","hostRef","registerInstance","ionChange","createEvent","ionFocus","ionBlur","inputId","checkboxIds","inputLabelId","helperTextId","errorTextId","inheritedAttributes","name","checked","indeterminate","disabled","value","labelPlacement","required","setChecked","state","isChecked","emit","toggleChecked","setFocus","onFocus","onBlur","onKeyDown","key","onClick","onDivLabelClick","stopPropagation","componentWillLoad","inheritAriaAttributes","_this","focusEl","focus","getHintTextID","helperText","errorText","classList","contains","renderHintText","h","class","id","part","render","getSVGPath","justify","alignment","mode","getIonMode","path","hasLabelContent","textContent","renderHiddenInput","Host","role","tabindex","y","interactive","htmlFor","type","onChange","ref","viewBox","d","getElement","style","ios","md"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/theme-DiVJyqlX.js","./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, h, d as Host, g as getElement } from './index-4DxY6_gG.js';\nimport { i as inheritAriaAttributes, a as renderHiddenInput } from './helpers-8KSQQGQy.js';\nimport { c as createColorClasses, h as hostContext } from './theme-DiVJyqlX.js';\nimport { b as getIonMode } from './ionic-global-CTSyufhF.js';\n\nconst checkboxIosCss = \":host{--checkbox-background-checked:var(--ion-color-primary, #0054e9);--border-color-checked:var(--ion-color-primary, #0054e9);--checkmark-color:var(--ion-color-primary-contrast, #fff);--transition:none;display:inline-block;position:relative;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}:host(.ion-color){--checkbox-background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}.checkbox-wrapper{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper,:host(.in-item:not(.checkbox-label-placement-stacked):not([slot])) .native-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.checkbox-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.checkbox-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}input{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.checkbox-icon{border-radius:var(--border-radius);position:relative;width:var(--size);height:var(--size);-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--checkbox-background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}.checkbox-bottom{padding-top:4px;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;font-size:0.75rem;white-space:normal}:host(.checkbox-label-placement-stacked) .checkbox-bottom{font-size:1rem}.checkbox-bottom .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.checkbox-bottom .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}:host(.ion-touched.ion-invalid) .checkbox-bottom .error-text{display:block}:host(.ion-touched.ion-invalid) .checkbox-bottom .helper-text{display:none}:host(.checkbox-label-placement-start) .checkbox-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.checkbox-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-end) .checkbox-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse;-ms-flex-pack:start;justify-content:start}:host(.checkbox-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.checkbox-label-placement-stacked) .checkbox-wrapper{-ms-flex-direction:column;flex-direction:column;text-align:center}:host(.checkbox-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.checkbox-label-placement-stacked.checkbox-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.checkbox-label-placement-stacked.checkbox-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host(.checkbox-justify-space-between) .checkbox-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.checkbox-justify-start) .checkbox-wrapper{-ms-flex-pack:start;justify-content:start}:host(.checkbox-justify-end) .checkbox-wrapper{-ms-flex-pack:end;justify-content:end}:host(.checkbox-alignment-start) .checkbox-wrapper{-ms-flex-align:start;align-items:start}:host(.checkbox-alignment-center) .checkbox-wrapper{-ms-flex-align:center;align-items:center}:host(.checkbox-justify-space-between),:host(.checkbox-justify-start),:host(.checkbox-justify-end),:host(.checkbox-alignment-start),:host(.checkbox-alignment-center){display:block}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--checkbox-background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:0.125rem;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--checkbox-background:var(--ion-item-background, var(--ion-background-color, #fff));--size:min(1.375rem, 55.836px);--checkmark-width:1.5px}:host(.checkbox-disabled){opacity:0.3}\";\n\nconst checkboxMdCss = \":host{--checkbox-background-checked:var(--ion-color-primary, #0054e9);--border-color-checked:var(--ion-color-primary, #0054e9);--checkmark-color:var(--ion-color-primary-contrast, #fff);--transition:none;display:inline-block;position:relative;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}:host(.ion-color){--checkbox-background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}.checkbox-wrapper{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper,:host(.in-item:not(.checkbox-label-placement-stacked):not([slot])) .native-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.checkbox-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.checkbox-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}input{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.checkbox-icon{border-radius:var(--border-radius);position:relative;width:var(--size);height:var(--size);-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--checkbox-background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}.checkbox-bottom{padding-top:4px;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;font-size:0.75rem;white-space:normal}:host(.checkbox-label-placement-stacked) .checkbox-bottom{font-size:1rem}.checkbox-bottom .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.checkbox-bottom .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}:host(.ion-touched.ion-invalid) .checkbox-bottom .error-text{display:block}:host(.ion-touched.ion-invalid) .checkbox-bottom .helper-text{display:none}:host(.checkbox-label-placement-start) .checkbox-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.checkbox-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-end) .checkbox-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse;-ms-flex-pack:start;justify-content:start}:host(.checkbox-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.checkbox-label-placement-stacked) .checkbox-wrapper{-ms-flex-direction:column;flex-direction:column;text-align:center}:host(.checkbox-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.checkbox-label-placement-stacked.checkbox-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.checkbox-label-placement-stacked.checkbox-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host(.checkbox-justify-space-between) .checkbox-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.checkbox-justify-start) .checkbox-wrapper{-ms-flex-pack:start;justify-content:start}:host(.checkbox-justify-end) .checkbox-wrapper{-ms-flex-pack:end;justify-content:end}:host(.checkbox-alignment-start) .checkbox-wrapper{-ms-flex-align:start;align-items:start}:host(.checkbox-alignment-center) .checkbox-wrapper{-ms-flex-align:center;align-items:center}:host(.checkbox-justify-space-between),:host(.checkbox-justify-start),:host(.checkbox-justify-end),:host(.checkbox-alignment-start),:host(.checkbox-alignment-center){display:block}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--checkbox-background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--checkmark-width:3;--checkbox-background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled) .label-text-wrapper{opacity:0.38}:host(.checkbox-disabled) .native-wrapper{opacity:0.63}\";\n\nconst Checkbox = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        this.inputLabelId = `${this.inputId}-lbl`;\n        this.helperTextId = `${this.inputId}-helper-text`;\n        this.errorTextId = `${this.inputId}-error-text`;\n        this.inheritedAttributes = {};\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the checkbox does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n         * it's only used when the checkbox participates in a native `<form>`.\n         */\n        this.value = 'on';\n        /**\n         * Where to place the label relative to the checkbox.\n         * `\"start\"`: The label will appear to the left of the checkbox in LTR and to the right in RTL.\n         * `\"end\"`: The label will appear to the right of the checkbox in LTR and to the left in RTL.\n         * `\"fixed\"`: The label has the same behavior as `\"start\"` except it also has a fixed width. Long text will be truncated with ellipses (\"...\").\n         * `\"stacked\"`: The label will appear above the checkbox regardless of the direction. The alignment of the label can be controlled with the `alignment` property.\n         */\n        this.labelPlacement = 'start';\n        /**\n         * If true, screen readers will announce it as a required field. This property\n         * works only for accessibility purposes, it will not prevent the form from\n         * submitting if the value is invalid.\n         */\n        this.required = false;\n        /**\n         * Sets the checked property and emits\n         * the ionChange event. Use this to update the\n         * checked state in response to user-generated\n         * actions such as a click.\n         */\n        this.setChecked = (state) => {\n            const isChecked = (this.checked = state);\n            this.ionChange.emit({\n                checked: isChecked,\n                value: this.value,\n            });\n        };\n        this.toggleChecked = (ev) => {\n            ev.preventDefault();\n            this.setFocus();\n            this.setChecked(!this.checked);\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.onKeyDown = (ev) => {\n            if (ev.key === ' ') {\n                ev.preventDefault();\n                if (!this.disabled) {\n                    this.toggleChecked(ev);\n                }\n            }\n        };\n        this.onClick = (ev) => {\n            if (this.disabled) {\n                return;\n            }\n            this.toggleChecked(ev);\n        };\n        /**\n         * Stops propagation when the display label is clicked,\n         * otherwise, two clicks will be triggered.\n         */\n        this.onDivLabelClick = (ev) => {\n            ev.stopPropagation();\n        };\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = Object.assign({}, inheritAriaAttributes(this.el));\n    }\n    /** @internal */\n    async setFocus() {\n        if (this.focusEl) {\n            this.focusEl.focus();\n        }\n    }\n    getHintTextID() {\n        const { el, helperText, errorText, helperTextId, errorTextId } = this;\n        if (el.classList.contains('ion-touched') && el.classList.contains('ion-invalid') && errorText) {\n            return errorTextId;\n        }\n        if (helperText) {\n            return helperTextId;\n        }\n        return undefined;\n    }\n    /**\n     * Responsible for rendering helper text and error text.\n     * This element should only be rendered if hint text is set.\n     */\n    renderHintText() {\n        const { helperText, errorText, helperTextId, errorTextId } = this;\n        /**\n         * undefined and empty string values should\n         * be treated as not having helper/error text.\n         */\n        const hasHintText = !!helperText || !!errorText;\n        if (!hasHintText) {\n            return;\n        }\n        return (h(\"div\", { class: \"checkbox-bottom\" }, h(\"div\", { id: helperTextId, class: \"helper-text\", part: \"supporting-text helper-text\" }, helperText), h(\"div\", { id: errorTextId, class: \"error-text\", part: \"supporting-text error-text\" }, errorText)));\n    }\n    render() {\n        const { color, checked, disabled, el, getSVGPath, indeterminate, inheritedAttributes, inputId, justify, labelPlacement, name, value, alignment, required, } = this;\n        const mode = getIonMode(this);\n        const path = getSVGPath(mode, indeterminate);\n        const hasLabelContent = el.textContent !== '';\n        renderHiddenInput(true, el, name, checked ? value : '', disabled);\n        // The host element must have a checkbox role to ensure proper VoiceOver\n        // support in Safari for accessibility.\n        return (h(Host, { key: '26cbe7220e555107200e9b5deeae754aa534a80b', role: \"checkbox\", \"aria-checked\": indeterminate ? 'mixed' : `${checked}`, \"aria-describedby\": this.getHintTextID(), \"aria-invalid\": this.getHintTextID() === this.errorTextId, \"aria-labelledby\": hasLabelContent ? this.inputLabelId : null, \"aria-label\": inheritedAttributes['aria-label'] || null, \"aria-disabled\": disabled ? 'true' : null, tabindex: disabled ? undefined : 0, onKeyDown: this.onKeyDown, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'checkbox-checked': checked,\n                'checkbox-disabled': disabled,\n                'checkbox-indeterminate': indeterminate,\n                interactive: true,\n                [`checkbox-justify-${justify}`]: justify !== undefined,\n                [`checkbox-alignment-${alignment}`]: alignment !== undefined,\n                [`checkbox-label-placement-${labelPlacement}`]: true,\n            }), onClick: this.onClick }, h(\"label\", { key: 'f025cec5ff08e8be4487b9cc0324616ca5dfae2a', class: \"checkbox-wrapper\", htmlFor: inputId }, h(\"input\", Object.assign({ key: 'dc53f7e4e240dc2e18556e6350df2b5c3169f553', type: \"checkbox\", checked: checked ? true : undefined, disabled: disabled, id: inputId, onChange: this.toggleChecked, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl), required: required }, inheritedAttributes)), h(\"div\", { key: 'a625e9b50c3b617de8bbbfd624d772454fecaf2d', class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': !hasLabelContent,\n            }, part: \"label\", id: this.inputLabelId, onClick: this.onDivLabelClick }, h(\"slot\", { key: '87d1a90691327945f4343406706e4ab27f453844' }), this.renderHintText()), h(\"div\", { key: 'b57fed8cdecee4df1ef0d57f157267ee77fac653', class: \"native-wrapper\" }, h(\"svg\", { key: '13a8aac044d46dc99e3b60a1a643785511f216ac', class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\", \"aria-hidden\": \"true\" }, path)))));\n    }\n    getSVGPath(mode, indeterminate) {\n        let path = indeterminate ? (h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })) : (h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" }));\n        if (mode === 'md') {\n            path = indeterminate ? (h(\"path\", { d: \"M2 12H22\", part: \"mark\" })) : (h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" }));\n        }\n        return path;\n    }\n    get el() { return getElement(this); }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n    ios: checkboxIosCss,\n    md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n"],"x_google_ignoreList":[0,1]}