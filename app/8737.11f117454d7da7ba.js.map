{"version":3,"file":"8737.11f117454d7da7ba.js","mappings":"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","names":["win","window","undefined","Style","Dark","Light","Default","StatusBar","getEngine","_a","_b","_c","Capacitor","isPluginAvailable","Plugins","supportsDefaultStatusBarStyle","PluginHeaders","setStyle","options","engine","this","getBackdropValueForSheet","x","backdropBreakpoint","slope","setCardStatusBarDark","innerWidth","style","setCardStatusBarDefault","handleCanDismiss","el","animation","canDismiss","isRunning","onFinish","dismiss","oneTimeCallback","calculateSpringStep","t","computeDuration","remaining","velocity","clamp","Math","abs","createSheetEnterAnimation","opts","currentBreakpoint","shouldShowBackdrop","initialBackdrop","backdropAnimation","createAnimation","fromTo","beforeStyles","afterClearStyles","wrapperAnimation","keyframes","offset","opacity","transform","createSheetLeaveAnimation","backdropValue","defaultBackdrop","customBackdrop","iosEnterAnimation","baseEl","presentingEl","root","getElementRoot","addElement","querySelector","querySelectorAll","baseAnimation","easing","duration","addAnimation","isMobile","hasCardModal","tagName","presentingElement","presentingElRoot","presentingAnimation","overflow","bodyEl","document","body","transformOffset","CSS","supports","finalTransform","afterStyles","beforeAddWrite","setProperty","filter","borderRadius","shadowAnimation","iosLeaveAnimation","beforeClearStyles","currentStep","numModals","from","m","length","mdEnterAnimation","mdLeaveAnimation","Modal","constructor","hostRef","registerInstance","didPresent","createEvent","willPresent","willDismiss","didDismiss","ionBreakpointDidChange","didPresentShorthand","willPresentShorthand","willDismissShorthand","didDismissShorthand","modalIndex","modalIds","coreDelegate","CoreDelegate","isSheetModal","inline","gestureAnimationDismissing","presented","hasController","keyboardClose","backdropDismiss","showBackdrop","animated","swipeToClose","isOpen","configureTriggerInteraction","trigger","destroyTriggerInteraction","triggerEl","getElementById","trigEl","modalEl","openModal","present","addEventListener","removeEventListener","onBackdropTap","BACKDROP","onLifecycle","modalEvent","usersElement","name","LIFECYCLE_MAP","type","ev","CustomEvent","bubbles","cancelable","detail","dispatchEvent","onIsOpenChange","newValue","oldValue","onTriggerChange","swipeToCloseChanged","enable","gesture","initSwipeToClose","breakpointsChanged","breakpoints","sortedBreakpoints","sort","a","b","connectedCallback","prepareOverlay","componentWillLoad","initialBreakpoint","modalId","hasAttribute","getAttribute","includes","printIonWarning","componentDidLoad","raf","getDelegate","force","workingDelegate","delegate","parentNode","checkCanDismiss","e","currentTransition","data","Object","assign","componentProps","modal","attachComponent","component","deepReady","writeTask","classList","add","getIonMode","initSheetGesture","keyboardOpenCallback","KEYBOARD_DID_OPEN","animationBuilder","leaveAnimation","config","ani","findIonContent","onDismiss","height","offsetHeight","canDismissBlocksGesture","contentEl","scrollEl","initialScrollY","lastStep","createGesture","gestureName","gesturePriority","direction","threshold","canStart","target","event","closest","findClosestIonContent","isIonContent","scrollTop","footer","onStart","deltaY","scrollY","disableContentScrollY","progressStart","onMove","step","isAttempingDismissWithCanDismiss","maxStep","processedStep","clampedStep","progressStep","S","DISMISS_THRESHOLD","onEnd","velocityY","shouldComplete","newStepValue","getTimeGivenProgression","resetContentScrollY","progressEnd","A","createSwipeToCloseGesture","B","printIonContentErrorMsg","wrapperEl","enterAnimation","moveSheetToBreakpoint","backdropEl","getCurrentBreakpoint","onBreakpointChange","SheetDefaults","WRAPPER_KEYFRAMES","BACKDROP_KEYFRAMES","clientHeight","childAnimations","find","id","maxBreakpoint","minBreakpoint","enableBackdrop","remove","disableBackdrop","d","breakpoint","breakpointOffset","shouldPreventDismiss","snapToBreakpoint","shouldRemainOpen","W","content","focus","secondToLastBreakpoint","isAttemptingDismissWithCanDismiss","diff","reduce","createSheetGesture","sheetOnDismiss","emit","role","n","enteringAnimation","activeAnimations","dismissed","detachComponent","destroy","forEach","onDidDismiss","eventMethod","onWillDismiss","setCurrentBreakpoint","render","handle","htmlAttributes","showHandle","mode","isCardModal","h","Host","tabindex","zIndex","overlayIndex","class","getClassMap","cssClass","onIonBackdropTap","onIonModalDidPresent","onIonModalWillPresent","onIonModalWillDismiss","onIonModalDidDismiss","ref","visible","tappable","part","getElement","watchers","ionModalDidPresent","ionModalWillPresent","ionModalWillDismiss","ionModalDidDismiss","ios","md"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-modal.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement } from './index-88bdeaae.js';\nimport { b as getIonMode, c as config } from './ionic-global-00475c3a.js';\nimport { f as findClosestIonContent, i as isIonContent, d as disableContentScrollY, r as resetContentScrollY, a as findIonContent, p as printIonContentErrorMsg } from './index-8bf9b0cd.js';\nimport { C as CoreDelegate, a as attachComponent, d as detachComponent } from './framework-delegate-ce4f806c.js';\nimport { g as getElementRoot, l as clamp, r as raf } from './helpers-4d272360.js';\nimport { KEYBOARD_DID_OPEN } from './keyboard-4d5544a0.js';\nimport { p as printIonWarning } from './index-9ac92660.js';\nimport { B as BACKDROP, e as prepareOverlay, d as present, h as activeAnimations, f as dismiss, g as eventMethod } from './overlays-ab6211c7.js';\nimport { g as getClassMap } from './theme-7670341c.js';\nimport { e as deepReady } from './index-7e1d3e32.js';\nimport { c as createAnimation } from './animation-36c1d77d.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-c313947a.js';\nimport { createGesture } from './index-3f1a7d95.js';\nimport './hardware-back-button-490df115.js';\nimport './gesture-controller-17e82006.js';\n\n/**\n * When accessing the window, it is important\n * to account for SSR applications where the\n * window is not available. Code that accesses\n * window when it is not available will crash.\n * Even checking if `window === undefined` will cause\n * apps to crash in SSR.\n *\n * Use win below to access an SSR-safe version\n * of the window.\n *\n * Example 1:\n * Before:\n * if (window.innerWidth > 768) { ... }\n *\n * After:\n * import { win } from 'path/to/this/file';\n * if (win?.innerWidth > 768) { ... }\n *\n * Note: Code inside of this if-block will\n * not run in an SSR environment.\n */\nconst win = typeof window !== 'undefined' ? window : undefined;\n\nvar Style;\n(function (Style) {\n  Style[\"Dark\"] = \"DARK\";\n  Style[\"Light\"] = \"LIGHT\";\n  Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nconst StatusBar = {\n  getEngine() {\n    var _a, _b, _c;\n    return ((_b = (_a = win) === null || _a === void 0 ? void 0 : _a.Capacitor) === null || _b === void 0 ? void 0 : _b.isPluginAvailable('StatusBar')) && ((_c = win) === null || _c === void 0 ? void 0 : _c.Capacitor.Plugins.StatusBar);\n  },\n  supportsDefaultStatusBarStyle() {\n    var _a, _b;\n    /**\n     * The 'DEFAULT' status bar style was added\n     * to the @capacitor/status-bar plugin in Capacitor 3.\n     * PluginHeaders is only supported in Capacitor 3+,\n     * so we can use this to detect Capacitor 3.\n     */\n    return !!((_b = (_a = win) === null || _a === void 0 ? void 0 : _a.Capacitor) === null || _b === void 0 ? void 0 : _b.PluginHeaders);\n  },\n  setStyle(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    engine.setStyle(options);\n  },\n};\n\n/**\n * Use y = mx + b to\n * figure out the backdrop value\n * at a particular x coordinate. This\n * is useful when the backdrop does\n * not begin to fade in until after\n * the 0 breakpoint.\n */\nconst getBackdropValueForSheet = (x, backdropBreakpoint) => {\n  /**\n   * We will use these points:\n   * (backdropBreakpoint, 0)\n   * (maxBreakpoint, 1)\n   * We know that at the beginning breakpoint,\n   * the backdrop will be hidden. We also\n   * know that at the maxBreakpoint, the backdrop\n   * must be fully visible. maxBreakpoint should\n   * always be 1 even if the maximum value\n   * of the breakpoints array is not 1 since\n   * the animation runs from a progress of 0\n   * to a progress of 1.\n   * m = (y2 - y1) / (x2 - x1)\n   *\n   * This is simplified from:\n   * m = (1 - 0) / (maxBreakpoint - backdropBreakpoint)\n   *\n   * If the backdropBreakpoint is 1, we return 0 as the\n   * backdrop is completely hidden.\n   *\n   */\n  if (backdropBreakpoint === 1) {\n    return 0;\n  }\n  const slope = 1 / (1 - backdropBreakpoint);\n  /**\n   * From here, compute b which is\n   * the backdrop opacity if the offset\n   * is 0. If the backdrop does not\n   * begin to fade in until after the\n   * 0 breakpoint, this b value will be\n   * negative. This is fine as we never pass\n   * b directly into the animation keyframes.\n   * b = y - mx\n   * Use a known point: (backdropBreakpoint, 0)\n   * This is simplified from:\n   * b = 0 - (backdropBreakpoint * slope)\n   */\n  const b = -(backdropBreakpoint * slope);\n  /**\n   * Finally, we can now determine the\n   * backdrop offset given an arbitrary\n   * gesture offset.\n   */\n  return x * slope + b;\n};\n/**\n * The tablet/desktop card modal activates\n * when the window width is >= 768.\n * At that point, the presenting element\n * is not transformed, so we do not need to\n * adjust the status bar color.\n *\n * Note: We check supportsDefaultStatusBarStyle so that\n * Capacitor <= 2 users do not get their status bar\n * stuck in an inconsistent state due to a lack of\n * support for Style.Default.\n */\nconst setCardStatusBarDark = () => {\n  if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\n    return;\n  }\n  StatusBar.setStyle({ style: Style.Dark });\n};\nconst setCardStatusBarDefault = () => {\n  if (!win || win.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {\n    return;\n  }\n  StatusBar.setStyle({ style: Style.Default });\n};\n\nconst handleCanDismiss = async (el, animation) => {\n  /**\n   * If canDismiss is not a function\n   * then we can return early. If canDismiss is `true`,\n   * then canDismissBlocksGesture is `false` as canDismiss\n   * will never interrupt the gesture. As a result,\n   * this code block is never reached. If canDismiss is `false`,\n   * then we never dismiss.\n   */\n  if (typeof el.canDismiss !== 'function') {\n    return;\n  }\n  /**\n   * Run the canDismiss callback.\n   * If the function returns `true`,\n   * then we can proceed with dismiss.\n   */\n  const shouldDismiss = await el.canDismiss();\n  if (!shouldDismiss) {\n    return;\n  }\n  /**\n   * If canDismiss resolved after the snap\n   * back animation finished, we can\n   * dismiss immediately.\n   *\n   * If canDismiss resolved before the snap\n   * back animation finished, we need to\n   * wait until the snap back animation is\n   * done before dismissing.\n   */\n  if (animation.isRunning()) {\n    animation.onFinish(() => {\n      el.dismiss(undefined, 'handler');\n    }, { oneTimeCallback: true });\n  }\n  else {\n    el.dismiss(undefined, 'handler');\n  }\n};\n/**\n * This function lets us simulate a realistic spring-like animation\n * when swiping down on the modal.\n * There are two forces that we need to use to compute the spring physics:\n *\n * 1. Stiffness, k: This is a measure of resistance applied a spring.\n * 2. Dampening, c: This value has the effect of reducing or preventing oscillation.\n *\n * Using these two values, we can calculate the Spring Force and the Dampening Force\n * to compute the total force applied to a spring.\n *\n * Spring Force: This force pulls a spring back into its equilibrium position.\n * Hooke's Law tells us that that spring force (FS) = kX.\n * k is the stiffness of a spring, and X is the displacement of the spring from its\n * equilibrium position. In this case, it is the amount by which the free end\n * of a spring was displaced (stretched/pushed) from its \"relaxed\" position.\n *\n * Dampening Force: This force slows down motion. Without it, a spring would oscillate forever.\n * The dampening force, FD, can be found via this formula: FD = -cv\n * where c the dampening value and v is velocity.\n *\n * Therefore, the resulting force that is exerted on the block is:\n * F = FS + FD = -kX - cv\n *\n * Newton's 2nd Law tells us that F = ma:\n * ma = -kX - cv.\n *\n * For Ionic's purposes, we can assume that m = 1:\n * a = -kX - cv\n *\n * Imagine a block attached to the end of a spring. At equilibrium\n * the block is at position x = 1.\n * Pressing on the block moves it to position x = 0;\n * So, to calculate the displacement, we need to take the\n * current position and subtract the previous position from it.\n * X = x - x0 = 0 - 1 = -1.\n *\n * For Ionic's purposes, we are only pushing on the spring modal\n * so we have a max position of 1.\n * As a result, we can expand displacement to this formula:\n * X = x - 1\n *\n * a = -k(x - 1) - cv\n *\n * We can represent the motion of something as a function of time: f(t) = x.\n * The derivative of position gives us the velocity: f'(t)\n * The derivative of the velocity gives us the acceleration: f''(t)\n *\n * We can substitute the formula above with these values:\n *\n * f\"(t) = -k * (f(t) - 1) - c * f'(t)\n *\n * This is called a differential equation.\n *\n * We know that at t = 0, we are at x = 0 because the modal does not move: f(0) = 0\n * This means our velocity is also zero: f'(0) = 0.\n *\n * We can cheat a bit and plug the formula into Wolfram Alpha.\n * However, we need to pick stiffness and dampening values:\n * k = 0.57\n * c = 15\n *\n * I picked these as they are fairly close to native iOS's spring effect\n * with the modal.\n *\n * What we plug in is this: f(0) = 0; f'(0) = 0; f''(t) = -0.57(f(t) - 1) - 15f'(t)\n *\n * The result is a formula that lets us calculate the acceleration\n * for a given time t.\n * Note: This is the approximate form of the solution. Wolfram Alpha will\n * give you a complex differential equation too.\n */\nconst calculateSpringStep = (t) => {\n  return 0.00255275 * 2.71828 ** (-14.9619 * t) - 1.00255 * 2.71828 ** (-0.0380968 * t) + 1;\n};\n\n// Defaults for the card swipe animation\nconst SwipeToCloseDefaults = {\n  MIN_PRESENTING_SCALE: 0.93,\n};\nconst createSwipeToCloseGesture = (el, animation, onDismiss) => {\n  /**\n   * The step value at which a card modal\n   * is eligible for dismissing via gesture.\n   */\n  const DISMISS_THRESHOLD = 0.5;\n  const height = el.offsetHeight;\n  let isOpen = false;\n  let canDismissBlocksGesture = false;\n  let contentEl = null;\n  let scrollEl = null;\n  const canDismissMaxStep = 0.2;\n  let initialScrollY = true;\n  let lastStep = 0;\n  const getScrollY = () => {\n    if (contentEl && isIonContent(contentEl)) {\n      return contentEl.scrollY;\n      /**\n       * Custom scroll containers are intended to be\n       * used with virtual scrolling, so we assume\n       * there is scrolling in this case.\n       */\n    }\n    else {\n      return true;\n    }\n  };\n  const canStart = (detail) => {\n    const target = detail.event.target;\n    if (target === null || !target.closest) {\n      return true;\n    }\n    /**\n     * If we are swiping on the content,\n     * swiping should only be possible if\n     * the content is scrolled all the way\n     * to the top so that we do not interfere\n     * with scrolling.\n     *\n     * We cannot assume that the `ion-content`\n     * target will remain consistent between\n     * swipes. For example, when using\n     * ion-nav within a card modal it is\n     * possible to swipe, push a view, and then\n     * swipe again. The target content will not\n     * be the same between swipes.\n     */\n    contentEl = findClosestIonContent(target);\n    if (contentEl) {\n      /**\n       * The card should never swipe to close\n       * on the content with a refresher.\n       * Note: We cannot solve this by making the\n       * swipeToClose gesture have a higher priority\n       * than the refresher gesture as the iOS native\n       * refresh gesture uses a scroll listener in\n       * addition to a gesture.\n       *\n       * Note: Do not use getScrollElement here\n       * because we need this to be a synchronous\n       * operation, and getScrollElement is\n       * asynchronous.\n       */\n      if (isIonContent(contentEl)) {\n        const root = getElementRoot(contentEl);\n        scrollEl = root.querySelector('.inner-scroll');\n      }\n      else {\n        scrollEl = contentEl;\n      }\n      const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n      return !hasRefresherInContent && scrollEl.scrollTop === 0;\n    }\n    /**\n     * Card should be swipeable on all\n     * parts of the modal except for the footer.\n     */\n    const footer = target.closest('ion-footer');\n    if (footer === null) {\n      return true;\n    }\n    return false;\n  };\n  const onStart = (detail) => {\n    const { deltaY } = detail;\n    /**\n     * Get the initial scrollY value so\n     * that we can correctly reset the scrollY\n     * prop when the gesture ends.\n     */\n    initialScrollY = getScrollY();\n    /**\n     * If canDismiss is anything other than `true`\n     * then users should be able to swipe down\n     * until a threshold is hit. At that point,\n     * the card modal should not proceed any further.\n     * TODO (FW-937)\n     * Remove undefined check\n     */\n    canDismissBlocksGesture = el.canDismiss !== undefined && el.canDismiss !== true;\n    /**\n     * If we are pulling down, then\n     * it is possible we are pulling on the\n     * content. We do not want scrolling to\n     * happen at the same time as the gesture.\n     */\n    if (deltaY > 0 && contentEl) {\n      disableContentScrollY(contentEl);\n    }\n    animation.progressStart(true, isOpen ? 1 : 0);\n  };\n  const onMove = (detail) => {\n    const { deltaY } = detail;\n    /**\n     * If we are pulling down, then\n     * it is possible we are pulling on the\n     * content. We do not want scrolling to\n     * happen at the same time as the gesture.\n     */\n    if (deltaY > 0 && contentEl) {\n      disableContentScrollY(contentEl);\n    }\n    /**\n     * If we are swiping on the content\n     * then the swipe gesture should only\n     * happen if we are pulling down.\n     *\n     * However, if we pull up and\n     * then down such that the scroll position\n     * returns to 0, we should be able to swipe\n     * the card.\n     */\n    const step = detail.deltaY / height;\n    /**\n     * Check if user is swiping down and\n     * if we have a canDismiss value that\n     * should block the gesture from\n     * proceeding,\n     */\n    const isAttempingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n    /**\n     * If we are blocking the gesture from dismissing,\n     * set the max step value so that the sheet cannot be\n     * completely hidden.\n     */\n    const maxStep = isAttempingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n    /**\n     * If we are blocking the gesture from\n     * dismissing, calculate the spring modifier value\n     * this will be added to the starting breakpoint\n     * value to give the gesture a spring-like feeling.\n     * Note that the starting breakpoint is always 0,\n     * so we omit adding 0 to the result.\n     */\n    const processedStep = isAttempingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n    const clampedStep = clamp(0.0001, processedStep, maxStep);\n    animation.progressStep(clampedStep);\n    /**\n     * When swiping down half way, the status bar style\n     * should be reset to its default value.\n     *\n     * We track lastStep so that we do not fire these\n     * functions on every onMove, only when the user has\n     * crossed a certain threshold.\n     */\n    if (clampedStep >= DISMISS_THRESHOLD && lastStep < DISMISS_THRESHOLD) {\n      setCardStatusBarDefault();\n      /**\n       * However, if we swipe back up, then the\n       * status bar style should be set to have light\n       * text on a dark background.\n       */\n    }\n    else if (clampedStep < DISMISS_THRESHOLD && lastStep >= DISMISS_THRESHOLD) {\n      setCardStatusBarDark();\n    }\n    lastStep = clampedStep;\n  };\n  const onEnd = (detail) => {\n    const velocity = detail.velocityY;\n    const step = detail.deltaY / height;\n    const isAttempingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n    const maxStep = isAttempingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n    const processedStep = isAttempingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n    const clampedStep = clamp(0.0001, processedStep, maxStep);\n    const threshold = (detail.deltaY + velocity * 1000) / height;\n    /**\n     * If canDismiss blocks\n     * the swipe gesture, then the\n     * animation can never complete until\n     * canDismiss is checked.\n     */\n    const shouldComplete = !isAttempingDismissWithCanDismiss && threshold >= DISMISS_THRESHOLD;\n    let newStepValue = shouldComplete ? -0.001 : 0.001;\n    if (!shouldComplete) {\n      animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n      newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], clampedStep)[0];\n    }\n    else {\n      animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\n      newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], clampedStep)[0];\n    }\n    const duration = shouldComplete\n      ? computeDuration(step * height, velocity)\n      : computeDuration((1 - clampedStep) * height, velocity);\n    isOpen = shouldComplete;\n    gesture.enable(false);\n    if (contentEl) {\n      resetContentScrollY(contentEl, initialScrollY);\n    }\n    animation\n      .onFinish(() => {\n      if (!shouldComplete) {\n        gesture.enable(true);\n      }\n    })\n      .progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);\n    /**\n     * If the canDismiss value blocked the gesture\n     * from proceeding, then we should ignore whatever\n     * shouldComplete is. Whether or not the modal\n     * animation should complete is now determined by\n     * canDismiss.\n     *\n     * If the user swiped >25% of the way\n     * to the max step, then we should\n     * check canDismiss. 25% was chosen\n     * to avoid accidental swipes.\n     */\n    if (isAttempingDismissWithCanDismiss && clampedStep > maxStep / 4) {\n      handleCanDismiss(el, animation);\n    }\n    else if (shouldComplete) {\n      onDismiss();\n    }\n  };\n  const gesture = createGesture({\n    el,\n    gestureName: 'modalSwipeToClose',\n    gesturePriority: 39,\n    direction: 'y',\n    threshold: 10,\n    canStart,\n    onStart,\n    onMove,\n    onEnd,\n  });\n  return gesture;\n};\nconst computeDuration = (remaining, velocity) => {\n  return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\n};\n\nconst createSheetEnterAnimation = (opts) => {\n  const { currentBreakpoint, backdropBreakpoint } = opts;\n  /**\n   * If the backdropBreakpoint is undefined, then the backdrop\n   * should always fade in. If the backdropBreakpoint came before the\n   * current breakpoint, then the backdrop should be fading in.\n   */\n  const shouldShowBackdrop = backdropBreakpoint === undefined || backdropBreakpoint < currentBreakpoint;\n  const initialBackdrop = shouldShowBackdrop ? `calc(var(--backdrop-opacity) * ${currentBreakpoint})` : '0';\n  const backdropAnimation = createAnimation('backdropAnimation').fromTo('opacity', 0, initialBackdrop);\n  if (shouldShowBackdrop) {\n    backdropAnimation\n      .beforeStyles({\n      'pointer-events': 'none',\n    })\n      .afterClearStyles(['pointer-events']);\n  }\n  const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n    { offset: 0, opacity: 1, transform: 'translateY(100%)' },\n    { offset: 1, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n  ]);\n  return { wrapperAnimation, backdropAnimation };\n};\nconst createSheetLeaveAnimation = (opts) => {\n  const { currentBreakpoint, backdropBreakpoint } = opts;\n  /**\n   * Backdrop does not always fade in from 0 to 1 if backdropBreakpoint\n   * is defined, so we need to account for that offset by figuring out\n   * what the current backdrop value should be.\n   */\n  const backdropValue = `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(currentBreakpoint, backdropBreakpoint)})`;\n  const defaultBackdrop = [\n    { offset: 0, opacity: backdropValue },\n    { offset: 1, opacity: 0 },\n  ];\n  const customBackdrop = [\n    { offset: 0, opacity: backdropValue },\n    { offset: backdropBreakpoint, opacity: 0 },\n    { offset: 1, opacity: 0 },\n  ];\n  const backdropAnimation = createAnimation('backdropAnimation').keyframes(backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop);\n  const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n    { offset: 0, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n    { offset: 1, opacity: 1, transform: `translateY(100%)` },\n  ]);\n  return { wrapperAnimation, backdropAnimation };\n};\n\nconst createEnterAnimation$1 = () => {\n  const backdropAnimation = createAnimation()\n    .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n    .beforeStyles({\n    'pointer-events': 'none',\n  })\n    .afterClearStyles(['pointer-events']);\n  const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');\n  return { backdropAnimation, wrapperAnimation };\n};\n/**\n * iOS Modal Enter Animation for the Card presentation style\n */\nconst iosEnterAnimation = (baseEl, opts) => {\n  const { presentingEl, currentBreakpoint } = opts;\n  const root = getElementRoot(baseEl);\n  const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation$1();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n  const baseAnimation = createAnimation('entering-base')\n    .addElement(baseEl)\n    .easing('cubic-bezier(0.32,0.72,0,1)')\n    .duration(500)\n    .addAnimation(wrapperAnimation);\n  if (presentingEl) {\n    const isMobile = window.innerWidth < 768;\n    const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingElRoot = getElementRoot(presentingEl);\n    const presentingAnimation = createAnimation().beforeStyles({\n      transform: 'translateY(0)',\n      'transform-origin': 'top center',\n      overflow: 'hidden',\n    });\n    const bodyEl = document.body;\n    if (isMobile) {\n      /**\n       * Fallback for browsers that does not support `max()` (ex: Firefox)\n       * No need to worry about statusbar padding since engines like Gecko\n       * are not used as the engine for standalone Cordova/Capacitor apps\n       */\n      const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n      const modalTransform = hasCardModal ? '-10px' : transformOffset;\n      const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n      const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n      presentingAnimation\n        .afterStyles({\n        transform: finalTransform,\n      })\n        .beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black'))\n        .addElement(presentingEl)\n        .keyframes([\n        { offset: 0, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n        { offset: 1, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n      ]);\n      baseAnimation.addAnimation(presentingAnimation);\n    }\n    else {\n      baseAnimation.addAnimation(backdropAnimation);\n      if (!hasCardModal) {\n        wrapperAnimation.fromTo('opacity', '0', '1');\n      }\n      else {\n        const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n        const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation\n          .afterStyles({\n          transform: finalTransform,\n        })\n          .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n          .keyframes([\n          { offset: 0, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n          { offset: 1, filter: 'contrast(0.85)', transform: finalTransform },\n        ]);\n        const shadowAnimation = createAnimation()\n          .afterStyles({\n          transform: finalTransform,\n        })\n          .addElement(presentingElRoot.querySelector('.modal-shadow'))\n          .keyframes([\n          { offset: 0, opacity: '1', transform: 'translateY(0) scale(1)' },\n          { offset: 1, opacity: '0', transform: finalTransform },\n        ]);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n      }\n    }\n  }\n  else {\n    baseAnimation.addAnimation(backdropAnimation);\n  }\n  return baseAnimation;\n};\n\nconst createLeaveAnimation$1 = () => {\n  const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');\n  return { backdropAnimation, wrapperAnimation };\n};\n/**\n * iOS Modal Leave Animation\n */\nconst iosLeaveAnimation = (baseEl, opts, duration = 500) => {\n  const { presentingEl, currentBreakpoint } = opts;\n  const root = getElementRoot(baseEl);\n  const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation$1();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n  const baseAnimation = createAnimation('leaving-base')\n    .addElement(baseEl)\n    .easing('cubic-bezier(0.32,0.72,0,1)')\n    .duration(duration)\n    .addAnimation(wrapperAnimation);\n  if (presentingEl) {\n    const isMobile = window.innerWidth < 768;\n    const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingElRoot = getElementRoot(presentingEl);\n    const presentingAnimation = createAnimation()\n      .beforeClearStyles(['transform'])\n      .afterClearStyles(['transform'])\n      .onFinish((currentStep) => {\n      // only reset background color if this is the last card-style modal\n      if (currentStep !== 1) {\n        return;\n      }\n      presentingEl.style.setProperty('overflow', '');\n      const numModals = Array.from(bodyEl.querySelectorAll('ion-modal')).filter((m) => m.presentingElement !== undefined).length;\n      if (numModals <= 1) {\n        bodyEl.style.setProperty('background-color', '');\n      }\n    });\n    const bodyEl = document.body;\n    if (isMobile) {\n      const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n      const modalTransform = hasCardModal ? '-10px' : transformOffset;\n      const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n      const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n      presentingAnimation.addElement(presentingEl).keyframes([\n        { offset: 0, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n        { offset: 1, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n      ]);\n      baseAnimation.addAnimation(presentingAnimation);\n    }\n    else {\n      baseAnimation.addAnimation(backdropAnimation);\n      if (!hasCardModal) {\n        wrapperAnimation.fromTo('opacity', '1', '0');\n      }\n      else {\n        const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n        const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation\n          .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n          .afterStyles({\n          transform: 'translate3d(0, 0, 0)',\n        })\n          .keyframes([\n          { offset: 0, filter: 'contrast(0.85)', transform: finalTransform },\n          { offset: 1, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n        ]);\n        const shadowAnimation = createAnimation()\n          .addElement(presentingElRoot.querySelector('.modal-shadow'))\n          .afterStyles({\n          transform: 'translateY(0) scale(1)',\n        })\n          .keyframes([\n          { offset: 0, opacity: '0', transform: finalTransform },\n          { offset: 1, opacity: '1', transform: 'translateY(0) scale(1)' },\n        ]);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n      }\n    }\n  }\n  else {\n    baseAnimation.addAnimation(backdropAnimation);\n  }\n  return baseAnimation;\n};\n\nconst createEnterAnimation = () => {\n  const backdropAnimation = createAnimation()\n    .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n    .beforeStyles({\n    'pointer-events': 'none',\n  })\n    .afterClearStyles(['pointer-events']);\n  const wrapperAnimation = createAnimation().keyframes([\n    { offset: 0, opacity: 0.01, transform: 'translateY(40px)' },\n    { offset: 1, opacity: 1, transform: `translateY(0px)` },\n  ]);\n  return { backdropAnimation, wrapperAnimation };\n};\n/**\n * Md Modal Enter Animation\n */\nconst mdEnterAnimation = (baseEl, opts) => {\n  const { currentBreakpoint } = opts;\n  const root = getElementRoot(baseEl);\n  const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n  return createAnimation()\n    .addElement(baseEl)\n    .easing('cubic-bezier(0.36,0.66,0.04,1)')\n    .duration(280)\n    .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst createLeaveAnimation = () => {\n  const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  const wrapperAnimation = createAnimation().keyframes([\n    { offset: 0, opacity: 0.99, transform: `translateY(0px)` },\n    { offset: 1, opacity: 0, transform: 'translateY(40px)' },\n  ]);\n  return { backdropAnimation, wrapperAnimation };\n};\n/**\n * Md Modal Leave Animation\n */\nconst mdLeaveAnimation = (baseEl, opts) => {\n  const { currentBreakpoint } = opts;\n  const root = getElementRoot(baseEl);\n  const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n  wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n  return createAnimation()\n    .easing('cubic-bezier(0.47,0,0.745,0.715)')\n    .duration(200)\n    .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst createSheetGesture = (baseEl, backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, animation, breakpoints = [], getCurrentBreakpoint, onDismiss, onBreakpointChange) => {\n  // Defaults for the sheet swipe animation\n  const defaultBackdrop = [\n    { offset: 0, opacity: 'var(--backdrop-opacity)' },\n    { offset: 1, opacity: 0.01 },\n  ];\n  const customBackdrop = [\n    { offset: 0, opacity: 'var(--backdrop-opacity)' },\n    { offset: 1 - backdropBreakpoint, opacity: 0 },\n    { offset: 1, opacity: 0 },\n  ];\n  const SheetDefaults = {\n    WRAPPER_KEYFRAMES: [\n      { offset: 0, transform: 'translateY(0%)' },\n      { offset: 1, transform: 'translateY(100%)' },\n    ],\n    BACKDROP_KEYFRAMES: backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop,\n  };\n  const contentEl = baseEl.querySelector('ion-content');\n  const height = wrapperEl.clientHeight;\n  let currentBreakpoint = initialBreakpoint;\n  let offset = 0;\n  let canDismissBlocksGesture = false;\n  const canDismissMaxStep = 0.95;\n  const wrapperAnimation = animation.childAnimations.find((ani) => ani.id === 'wrapperAnimation');\n  const backdropAnimation = animation.childAnimations.find((ani) => ani.id === 'backdropAnimation');\n  const maxBreakpoint = breakpoints[breakpoints.length - 1];\n  const minBreakpoint = breakpoints[0];\n  const enableBackdrop = () => {\n    baseEl.style.setProperty('pointer-events', 'auto');\n    backdropEl.style.setProperty('pointer-events', 'auto');\n    /**\n     * When the backdrop is enabled, elements such\n     * as inputs should not be focusable outside\n     * the sheet.\n     */\n    baseEl.classList.remove('ion-disable-focus-trap');\n  };\n  const disableBackdrop = () => {\n    baseEl.style.setProperty('pointer-events', 'none');\n    backdropEl.style.setProperty('pointer-events', 'none');\n    /**\n     * When the backdrop is enabled, elements such\n     * as inputs should not be focusable outside\n     * the sheet.\n     * Adding this class disables focus trapping\n     * for the sheet temporarily.\n     */\n    baseEl.classList.add('ion-disable-focus-trap');\n  };\n  /**\n   * After the entering animation completes,\n   * we need to set the animation to go from\n   * offset 0 to offset 1 so that users can\n   * swipe in any direction. We then set the\n   * animation offset to the current breakpoint\n   * so there is no flickering.\n   */\n  if (wrapperAnimation && backdropAnimation) {\n    wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n    backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n    animation.progressStart(true, 1 - currentBreakpoint);\n    /**\n     * If backdrop is not enabled, then content\n     * behind modal should be clickable. To do this, we need\n     * to remove pointer-events from ion-modal as a whole.\n     * ion-backdrop and .modal-wrapper always have pointer-events: auto\n     * applied, so the modal content can still be interacted with.\n     */\n    const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n    if (shouldEnableBackdrop) {\n      enableBackdrop();\n    }\n    else {\n      disableBackdrop();\n    }\n  }\n  if (contentEl && currentBreakpoint !== maxBreakpoint) {\n    contentEl.scrollY = false;\n  }\n  const canStart = (detail) => {\n    /**\n     * If the sheet is fully expanded and\n     * the user is swiping on the content,\n     * the gesture should not start to\n     * allow for scrolling on the content.\n     */\n    const content = detail.event.target.closest('ion-content');\n    currentBreakpoint = getCurrentBreakpoint();\n    if (currentBreakpoint === 1 && content) {\n      return false;\n    }\n    return true;\n  };\n  const onStart = () => {\n    /**\n     * If canDismiss is anything other than `true`\n     * then users should be able to swipe down\n     * until a threshold is hit. At that point,\n     * the card modal should not proceed any further.\n     *\n     * canDismiss is never fired via gesture if there is\n     * no 0 breakpoint. However, it can be fired if the user\n     * presses Esc or the hardware back button.\n     * TODO (FW-937)\n     * Remove undefined check\n     */\n    canDismissBlocksGesture = baseEl.canDismiss !== undefined && baseEl.canDismiss !== true && minBreakpoint === 0;\n    /**\n     * If swiping on the content\n     * we should disable scrolling otherwise\n     * the sheet will expand and the content will scroll.\n     */\n    if (contentEl) {\n      contentEl.scrollY = false;\n    }\n    raf(() => {\n      /**\n       * Dismisses the open keyboard when the sheet drag gesture is started.\n       * Sets the focus onto the modal element.\n       */\n      baseEl.focus();\n    });\n    animation.progressStart(true, 1 - currentBreakpoint);\n  };\n  const onMove = (detail) => {\n    /**\n     * Given the change in gesture position on the Y axis,\n     * compute where the offset of the animation should be\n     * relative to where the user dragged.\n     */\n    const initialStep = 1 - currentBreakpoint;\n    const secondToLastBreakpoint = breakpoints.length > 1 ? 1 - breakpoints[1] : undefined;\n    const step = initialStep + detail.deltaY / height;\n    const isAttemptingDismissWithCanDismiss = secondToLastBreakpoint !== undefined && step >= secondToLastBreakpoint && canDismissBlocksGesture;\n    /**\n     * If we are blocking the gesture from dismissing,\n     * set the max step value so that the sheet cannot be\n     * completely hidden.\n     */\n    const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n    /**\n     * If we are blocking the gesture from\n     * dismissing, calculate the spring modifier value\n     * this will be added to the starting breakpoint\n     * value to give the gesture a spring-like feeling.\n     * Note that when isAttemptingDismissWithCanDismiss is true,\n     * the modifier is always added to the breakpoint that\n     * appears right after the 0 breakpoint.\n     *\n     * Note that this modifier is essentially the progression\n     * between secondToLastBreakpoint and maxStep which is\n     * why we subtract secondToLastBreakpoint. This lets us get\n     * the result as a value from 0 to 1.\n     */\n    const processedStep = isAttemptingDismissWithCanDismiss && secondToLastBreakpoint !== undefined\n      ? secondToLastBreakpoint +\n        calculateSpringStep((step - secondToLastBreakpoint) / (maxStep - secondToLastBreakpoint))\n      : step;\n    offset = clamp(0.0001, processedStep, maxStep);\n    animation.progressStep(offset);\n  };\n  const onEnd = (detail) => {\n    /**\n     * When the gesture releases, we need to determine\n     * the closest breakpoint to snap to.\n     */\n    const velocity = detail.velocityY;\n    const threshold = (detail.deltaY + velocity * 100) / height;\n    const diff = currentBreakpoint - threshold;\n    const closest = breakpoints.reduce((a, b) => {\n      return Math.abs(b - diff) < Math.abs(a - diff) ? b : a;\n    });\n    moveSheetToBreakpoint({\n      breakpoint: closest,\n      breakpointOffset: offset,\n      canDismiss: canDismissBlocksGesture,\n    });\n  };\n  const moveSheetToBreakpoint = (options) => {\n    const { breakpoint, canDismiss, breakpointOffset } = options;\n    /**\n     * canDismiss should only prevent snapping\n     * when users are trying to dismiss. If canDismiss\n     * is present but the user is trying to swipe upwards,\n     * we should allow that to happen,\n     */\n    const shouldPreventDismiss = canDismiss && breakpoint === 0;\n    const snapToBreakpoint = shouldPreventDismiss ? currentBreakpoint : breakpoint;\n    const shouldRemainOpen = snapToBreakpoint !== 0;\n    currentBreakpoint = 0;\n    /**\n     * Update the animation so that it plays from\n     * the last offset to the closest snap point.\n     */\n    if (wrapperAnimation && backdropAnimation) {\n      wrapperAnimation.keyframes([\n        { offset: 0, transform: `translateY(${breakpointOffset * 100}%)` },\n        { offset: 1, transform: `translateY(${(1 - snapToBreakpoint) * 100}%)` },\n      ]);\n      backdropAnimation.keyframes([\n        {\n          offset: 0,\n          opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(1 - breakpointOffset, backdropBreakpoint)})`,\n        },\n        {\n          offset: 1,\n          opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(snapToBreakpoint, backdropBreakpoint)})`,\n        },\n      ]);\n      animation.progressStep(0);\n    }\n    /**\n     * Gesture should remain disabled until the\n     * snapping animation completes.\n     */\n    gesture.enable(false);\n    animation\n      .onFinish(() => {\n      if (shouldRemainOpen) {\n        /**\n         * Once the snapping animation completes,\n         * we need to reset the animation to go\n         * from 0 to 1 so users can swipe in any direction.\n         * We then set the animation offset to the current\n         * breakpoint so that it starts at the snapped position.\n         */\n        if (wrapperAnimation && backdropAnimation) {\n          raf(() => {\n            wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n            backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n            animation.progressStart(true, 1 - snapToBreakpoint);\n            currentBreakpoint = snapToBreakpoint;\n            onBreakpointChange(currentBreakpoint);\n            /**\n             * If the sheet is fully expanded, we can safely\n             * enable scrolling again.\n             */\n            if (contentEl && currentBreakpoint === breakpoints[breakpoints.length - 1]) {\n              contentEl.scrollY = true;\n            }\n            /**\n             * Backdrop should become enabled\n             * after the backdropBreakpoint value\n             */\n            const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n            if (shouldEnableBackdrop) {\n              enableBackdrop();\n            }\n            else {\n              disableBackdrop();\n            }\n            gesture.enable(true);\n          });\n        }\n        else {\n          gesture.enable(true);\n        }\n      }\n      /**\n       * This must be a one time callback\n       * otherwise a new callback will\n       * be added every time onEnd runs.\n       */\n    }, { oneTimeCallback: true })\n      .progressEnd(1, 0, 500);\n    if (shouldPreventDismiss) {\n      handleCanDismiss(baseEl, animation);\n    }\n    else if (!shouldRemainOpen) {\n      onDismiss();\n    }\n  };\n  const gesture = createGesture({\n    el: wrapperEl,\n    gestureName: 'modalSheet',\n    gesturePriority: 40,\n    direction: 'y',\n    threshold: 10,\n    canStart,\n    onStart,\n    onMove,\n    onEnd,\n  });\n  return {\n    gesture,\n    moveSheetToBreakpoint,\n  };\n};\n\nconst modalIosCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;margin-left:auto;margin-right:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);background:var(--ion-color-step-350, #c0c0be);z-index:11}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}:host(.modal-card),:host(.modal-sheet){--border-radius:10px}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:10px}}.modal-wrapper{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: 1px){:host(.modal-card){--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: 1px){:host(.modal-card){--height:calc(100% - 40px)}}:host(.modal-card) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-card) .modal-wrapper,:host-context([dir=rtl]).modal-card .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host(.modal-card){--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}:host(.modal-card) .modal-shadow{display:none}:host(.modal-card) ion-backdrop{pointer-events:none}}@media screen and (min-width: 768px){:host(.modal-card){--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px;--backdrop-opacity:0;--box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}:host(.modal-card) .modal-wrapper{-webkit-box-shadow:none;box-shadow:none}:host(.modal-card) .modal-shadow{-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}}:host(.modal-sheet) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-sheet) .modal-wrapper,:host-context([dir=rtl]).modal-sheet .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}\";\n\nconst modalMdCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;margin-left:auto;margin-right:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);background:var(--ion-color-step-350, #c0c0be);z-index:11}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:2px;--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}\";\n\nconst Modal = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.didPresent = createEvent(this, \"ionModalDidPresent\", 7);\n    this.willPresent = createEvent(this, \"ionModalWillPresent\", 7);\n    this.willDismiss = createEvent(this, \"ionModalWillDismiss\", 7);\n    this.didDismiss = createEvent(this, \"ionModalDidDismiss\", 7);\n    this.ionBreakpointDidChange = createEvent(this, \"ionBreakpointDidChange\", 7);\n    this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n    this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n    this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n    this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n    this.modalIndex = modalIds++;\n    this.coreDelegate = CoreDelegate();\n    this.isSheetModal = false;\n    this.inline = false;\n    // Whether or not modal is being dismissed via gesture\n    this.gestureAnimationDismissing = false;\n    this.presented = false;\n    /** @internal */\n    this.hasController = false;\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n    this.keyboardClose = true;\n    /**\n     * A decimal value between 0 and 1 that indicates the\n     * point after which the backdrop will begin to fade in\n     * when using a sheet modal. Prior to this point, the\n     * backdrop will be hidden and the content underneath\n     * the sheet can be interacted with. This value is exclusive\n     * meaning the backdrop will become active after the value\n     * specified.\n     */\n    this.backdropBreakpoint = 0;\n    /**\n     * If `true`, the modal will be dismissed when the backdrop is clicked.\n     */\n    this.backdropDismiss = true;\n    /**\n     * If `true`, a backdrop will be displayed behind the modal.\n     * This property controls whether or not the backdrop\n     * darkens the screen when the modal is presented.\n     * It does not control whether or not the backdrop\n     * is active or present in the DOM.\n     */\n    this.showBackdrop = true;\n    /**\n     * If `true`, the modal will animate.\n     */\n    this.animated = true;\n    /**\n     * If `true`, the modal can be swiped to dismiss. Only applies in iOS mode.\n     * @deprecated - To prevent modals from dismissing, use canDismiss instead.\n     */\n    this.swipeToClose = false;\n    /**\n     * If `true`, the modal will open. If `false`, the modal will close.\n     * Use this if you need finer grained control over presentation, otherwise\n     * just use the modalController or the `trigger` property.\n     * Note: `isOpen` will not automatically be set back to `false` when\n     * the modal dismisses. You will need to do that in your code.\n     */\n    this.isOpen = false;\n    this.configureTriggerInteraction = () => {\n      const { trigger, el, destroyTriggerInteraction } = this;\n      if (destroyTriggerInteraction) {\n        destroyTriggerInteraction();\n      }\n      const triggerEl = trigger !== undefined ? document.getElementById(trigger) : null;\n      if (!triggerEl) {\n        return;\n      }\n      const configureTriggerInteraction = (trigEl, modalEl) => {\n        const openModal = () => {\n          modalEl.present();\n        };\n        trigEl.addEventListener('click', openModal);\n        return () => {\n          trigEl.removeEventListener('click', openModal);\n        };\n      };\n      this.destroyTriggerInteraction = configureTriggerInteraction(triggerEl, el);\n    };\n    this.onBackdropTap = () => {\n      this.dismiss(undefined, BACKDROP);\n    };\n    this.onLifecycle = (modalEvent) => {\n      const el = this.usersElement;\n      const name = LIFECYCLE_MAP[modalEvent.type];\n      if (el && name) {\n        const ev = new CustomEvent(name, {\n          bubbles: false,\n          cancelable: false,\n          detail: modalEvent.detail,\n        });\n        el.dispatchEvent(ev);\n      }\n    };\n  }\n  onIsOpenChange(newValue, oldValue) {\n    if (newValue === true && oldValue === false) {\n      this.present();\n    }\n    else if (newValue === false && oldValue === true) {\n      this.dismiss();\n    }\n  }\n  onTriggerChange() {\n    this.configureTriggerInteraction();\n  }\n  async swipeToCloseChanged(enable) {\n    if (this.gesture) {\n      this.gesture.enable(enable);\n    }\n    else if (enable) {\n      await this.initSwipeToClose();\n    }\n  }\n  breakpointsChanged(breakpoints) {\n    if (breakpoints !== undefined) {\n      this.sortedBreakpoints = breakpoints.sort((a, b) => a - b);\n    }\n  }\n  connectedCallback() {\n    prepareOverlay(this.el);\n  }\n  componentWillLoad() {\n    const { breakpoints, initialBreakpoint, swipeToClose } = this;\n    /**\n     * If user has custom ID set then we should\n     * not assign the default incrementing ID.\n     */\n    this.modalId = this.el.hasAttribute('id') ? this.el.getAttribute('id') : `ion-modal-${this.modalIndex}`;\n    const isSheetModal = (this.isSheetModal = breakpoints !== undefined && initialBreakpoint !== undefined);\n    if (isSheetModal) {\n      this.currentBreakpoint = this.initialBreakpoint;\n    }\n    if (breakpoints !== undefined && initialBreakpoint !== undefined && !breakpoints.includes(initialBreakpoint)) {\n      printIonWarning('Your breakpoints array must include the initialBreakpoint value.');\n    }\n    if (swipeToClose) {\n      printIonWarning('swipeToClose has been deprecated in favor of canDismiss.\\n\\nIf you want a card modal to be swipeable, set canDismiss to `true`. In the next major release of Ionic, swipeToClose will be removed, and all card modals will be swipeable by default.');\n    }\n  }\n  componentDidLoad() {\n    /**\n     * If modal was rendered with isOpen=\"true\"\n     * then we should open modal immediately.\n     */\n    if (this.isOpen === true) {\n      raf(() => this.present());\n    }\n    this.breakpointsChanged(this.breakpoints);\n    this.configureTriggerInteraction();\n  }\n  /**\n   * Determines whether or not an overlay\n   * is being used inline or via a controller/JS\n   * and returns the correct delegate.\n   * By default, subsequent calls to getDelegate\n   * will use a cached version of the delegate.\n   * This is useful for calling dismiss after\n   * present so that the correct delegate is given.\n   */\n  getDelegate(force = false) {\n    if (this.workingDelegate && !force) {\n      return {\n        delegate: this.workingDelegate,\n        inline: this.inline,\n      };\n    }\n    /**\n     * If using overlay inline\n     * we potentially need to use the coreDelegate\n     * so that this works in vanilla JS apps.\n     * If a developer has presented this component\n     * via a controller, then we can assume\n     * the component is already in the\n     * correct place.\n     */\n    const parentEl = this.el.parentNode;\n    const inline = (this.inline = parentEl !== null && !this.hasController);\n    const delegate = (this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate);\n    return { inline, delegate };\n  }\n  /**\n   * Determines whether or not the\n   * modal is allowed to dismiss based\n   * on the state of the canDismiss prop.\n   */\n  async checkCanDismiss() {\n    const { canDismiss } = this;\n    /**\n     * TODO (FW-937) - Remove the following check in\n     * the next major release of Ionic.\n     */\n    if (canDismiss === undefined) {\n      return true;\n    }\n    if (typeof canDismiss === 'function') {\n      return canDismiss();\n    }\n    return canDismiss;\n  }\n  /**\n   * Present the modal overlay after it has been created.\n   */\n  async present() {\n    if (this.presented) {\n      return;\n    }\n    /**\n     * When using an inline modal\n     * and dismissing a modal it is possible to\n     * quickly present the modal while it is\n     * dismissing. We need to await any current\n     * transition to allow the dismiss to finish\n     * before presenting again.\n     */\n    if (this.currentTransition !== undefined) {\n      await this.currentTransition;\n    }\n    /**\n     * If the modal is presented multiple times (inline modals), we\n     * need to reset the current breakpoint to the initial breakpoint.\n     */\n    this.currentBreakpoint = this.initialBreakpoint;\n    const data = Object.assign(Object.assign({}, this.componentProps), { modal: this.el });\n    const { inline, delegate } = this.getDelegate(true);\n    this.usersElement = await attachComponent(delegate, this.el, this.component, ['ion-page'], data, inline);\n    await deepReady(this.usersElement);\n    writeTask(() => this.el.classList.add('show-modal'));\n    this.currentTransition = present(this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, {\n      presentingEl: this.presentingElement,\n      currentBreakpoint: this.initialBreakpoint,\n      backdropBreakpoint: this.backdropBreakpoint,\n    });\n    /**\n     * TODO (FW-937) - In the next major release of Ionic, all card modals\n     * will be swipeable by default. canDismiss will be used to determine if the\n     * modal can be dismissed. This check should change to check the presence of\n     * presentingElement instead.\n     *\n     * If we did not do this check, then not using swipeToClose would mean you could\n     * not run canDismiss on swipe as there would be no swipe gesture created.\n     */\n    const hasCardModal = this.swipeToClose || (this.canDismiss !== undefined && this.presentingElement !== undefined);\n    /**\n     * We need to change the status bar at the\n     * start of the animation so that it completes\n     * by the time the card animation is done.\n     */\n    if (hasCardModal && getIonMode(this) === 'ios') {\n      setCardStatusBarDark();\n    }\n    await this.currentTransition;\n    if (this.isSheetModal) {\n      this.initSheetGesture();\n    }\n    else if (hasCardModal) {\n      await this.initSwipeToClose();\n    }\n    /* tslint:disable-next-line */\n    if (typeof window !== 'undefined') {\n      this.keyboardOpenCallback = () => {\n        if (this.gesture) {\n          /**\n           * When the native keyboard is opened and the webview\n           * is resized, the gesture implementation will become unresponsive\n           * and enter a free-scroll mode.\n           *\n           * When the keyboard is opened, we disable the gesture for\n           * a single frame and re-enable once the contents have repositioned\n           * from the keyboard placement.\n           */\n          this.gesture.enable(false);\n          raf(() => {\n            if (this.gesture) {\n              this.gesture.enable(true);\n            }\n          });\n        }\n      };\n      window.addEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n    }\n    this.currentTransition = undefined;\n  }\n  initSwipeToClose() {\n    if (getIonMode(this) !== 'ios') {\n      return;\n    }\n    const { el } = this;\n    // All of the elements needed for the swipe gesture\n    // should be in the DOM and referenced by now, except\n    // for the presenting el\n    const animationBuilder = this.leaveAnimation || config.get('modalLeave', iosLeaveAnimation);\n    const ani = (this.animation = animationBuilder(el, { presentingEl: this.presentingElement }));\n    const contentEl = findIonContent(el);\n    if (!contentEl) {\n      printIonContentErrorMsg(el);\n      return;\n    }\n    this.gesture = createSwipeToCloseGesture(el, ani, () => {\n      /**\n       * While the gesture animation is finishing\n       * it is possible for a user to tap the backdrop.\n       * This would result in the dismiss animation\n       * being played again. Typically this is avoided\n       * by setting `presented = false` on the overlay\n       * component; however, we cannot do that here as\n       * that would prevent the element from being\n       * removed from the DOM.\n       */\n      this.gestureAnimationDismissing = true;\n      this.animation.onFinish(async () => {\n        await this.dismiss(undefined, 'gesture');\n        this.gestureAnimationDismissing = false;\n      });\n    });\n    this.gesture.enable(true);\n  }\n  initSheetGesture() {\n    const { wrapperEl, initialBreakpoint, backdropBreakpoint } = this;\n    if (!wrapperEl || initialBreakpoint === undefined) {\n      return;\n    }\n    const animationBuilder = this.enterAnimation || config.get('modalEnter', iosEnterAnimation);\n    const ani = (this.animation = animationBuilder(this.el, {\n      presentingEl: this.presentingElement,\n      currentBreakpoint: initialBreakpoint,\n      backdropBreakpoint,\n    }));\n    ani.progressStart(true, 1);\n    const { gesture, moveSheetToBreakpoint } = createSheetGesture(this.el, this.backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, ani, this.sortedBreakpoints, () => { var _a; return (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : 0; }, () => this.sheetOnDismiss(), (breakpoint) => {\n      if (this.currentBreakpoint !== breakpoint) {\n        this.currentBreakpoint = breakpoint;\n        this.ionBreakpointDidChange.emit({ breakpoint });\n      }\n    });\n    this.gesture = gesture;\n    this.moveSheetToBreakpoint = moveSheetToBreakpoint;\n    this.gesture.enable(true);\n  }\n  sheetOnDismiss() {\n    /**\n     * While the gesture animation is finishing\n     * it is possible for a user to tap the backdrop.\n     * This would result in the dismiss animation\n     * being played again. Typically this is avoided\n     * by setting `presented = false` on the overlay\n     * component; however, we cannot do that here as\n     * that would prevent the element from being\n     * removed from the DOM.\n     */\n    this.gestureAnimationDismissing = true;\n    this.animation.onFinish(async () => {\n      this.currentBreakpoint = 0;\n      this.ionBreakpointDidChange.emit({ breakpoint: this.currentBreakpoint });\n      await this.dismiss(undefined, 'gesture');\n      this.gestureAnimationDismissing = false;\n    });\n  }\n  /**\n   * Dismiss the modal overlay after it has been presented.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the modal. For example, 'cancel' or 'backdrop'.\n   */\n  async dismiss(data, role) {\n    if (this.gestureAnimationDismissing && role !== 'gesture') {\n      return false;\n    }\n    /**\n     * If a canDismiss handler is responsible\n     * for calling the dismiss method, we should\n     * not run the canDismiss check again.\n     */\n    if (role !== 'handler' && !(await this.checkCanDismiss())) {\n      return false;\n    }\n    /**\n     * We need to start the status bar change\n     * before the animation so that the change\n     * finishes when the dismiss animation does.\n     * TODO (FW-937)\n     */\n    const hasCardModal = this.swipeToClose || (this.canDismiss !== undefined && this.presentingElement !== undefined);\n    if (hasCardModal && getIonMode(this) === 'ios') {\n      setCardStatusBarDefault();\n    }\n    /* tslint:disable-next-line */\n    if (typeof window !== 'undefined' && this.keyboardOpenCallback) {\n      window.removeEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n    }\n    /**\n     * When using an inline modal\n     * and presenting a modal it is possible to\n     * quickly dismiss the modal while it is\n     * presenting. We need to await any current\n     * transition to allow the present to finish\n     * before dismissing again.\n     */\n    if (this.currentTransition !== undefined) {\n      await this.currentTransition;\n    }\n    const enteringAnimation = activeAnimations.get(this) || [];\n    this.currentTransition = dismiss(this, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, {\n      presentingEl: this.presentingElement,\n      currentBreakpoint: this.currentBreakpoint || this.initialBreakpoint,\n      backdropBreakpoint: this.backdropBreakpoint,\n    });\n    const dismissed = await this.currentTransition;\n    if (dismissed) {\n      const { delegate } = this.getDelegate();\n      await detachComponent(delegate, this.usersElement);\n      writeTask(() => this.el.classList.remove('show-modal'));\n      if (this.animation) {\n        this.animation.destroy();\n      }\n      if (this.gesture) {\n        this.gesture.destroy();\n      }\n      enteringAnimation.forEach((ani) => ani.destroy());\n    }\n    this.currentBreakpoint = undefined;\n    this.currentTransition = undefined;\n    this.animation = undefined;\n    return dismissed;\n  }\n  /**\n   * Returns a promise that resolves when the modal did dismiss.\n   */\n  onDidDismiss() {\n    return eventMethod(this.el, 'ionModalDidDismiss');\n  }\n  /**\n   * Returns a promise that resolves when the modal will dismiss.\n   */\n  onWillDismiss() {\n    return eventMethod(this.el, 'ionModalWillDismiss');\n  }\n  /**\n   * Move a sheet style modal to a specific breakpoint. The breakpoint value must\n   * be a value defined in your `breakpoints` array.\n   */\n  async setCurrentBreakpoint(breakpoint) {\n    if (!this.isSheetModal) {\n      printIonWarning('setCurrentBreakpoint is only supported on sheet modals.');\n      return;\n    }\n    if (!this.breakpoints.includes(breakpoint)) {\n      printIonWarning(`Attempted to set invalid breakpoint value ${breakpoint}. Please double check that the breakpoint value is part of your defined breakpoints.`);\n      return;\n    }\n    const { currentBreakpoint, moveSheetToBreakpoint, canDismiss, breakpoints } = this;\n    if (currentBreakpoint === breakpoint) {\n      return;\n    }\n    if (moveSheetToBreakpoint) {\n      moveSheetToBreakpoint({\n        breakpoint,\n        breakpointOffset: 1 - currentBreakpoint,\n        canDismiss: canDismiss !== undefined && canDismiss !== true && breakpoints[0] === 0,\n      });\n    }\n  }\n  /**\n   * Returns the current breakpoint of a sheet style modal\n   */\n  async getCurrentBreakpoint() {\n    return this.currentBreakpoint;\n  }\n  render() {\n    const { handle, isSheetModal, presentingElement, htmlAttributes } = this;\n    const showHandle = handle !== false && isSheetModal;\n    const mode = getIonMode(this);\n    const { modalId } = this;\n    const isCardModal = presentingElement !== undefined && mode === 'ios';\n    return (h(Host, Object.assign({ \"no-router\": true, \"aria-modal\": \"true\", tabindex: \"-1\" }, htmlAttributes, { style: {\n        zIndex: `${20000 + this.overlayIndex}`,\n      }, class: Object.assign({ [mode]: true, ['modal-default']: !isCardModal && !isSheetModal, [`modal-card`]: isCardModal, [`modal-sheet`]: isSheetModal, 'overlay-hidden': true }, getClassMap(this.cssClass)), id: modalId, onIonBackdropTap: this.onBackdropTap, onIonModalDidPresent: this.onLifecycle, onIonModalWillPresent: this.onLifecycle, onIonModalWillDismiss: this.onLifecycle, onIonModalDidDismiss: this.onLifecycle }), h(\"ion-backdrop\", { ref: (el) => (this.backdropEl = el), visible: this.showBackdrop, tappable: this.backdropDismiss, part: \"backdrop\" }), mode === 'ios' && h(\"div\", { class: \"modal-shadow\" }), h(\"div\", { role: \"dialog\", class: \"modal-wrapper ion-overlay-wrapper\", part: \"content\", ref: (el) => (this.wrapperEl = el) }, showHandle && h(\"div\", { class: \"modal-handle\", part: \"handle\" }), h(\"slot\", null))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"isOpen\": [\"onIsOpenChange\"],\n    \"trigger\": [\"onTriggerChange\"],\n    \"swipeToClose\": [\"swipeToCloseChanged\"]\n  }; }\n};\nconst LIFECYCLE_MAP = {\n  ionModalDidPresent: 'ionViewDidEnter',\n  ionModalWillPresent: 'ionViewWillEnter',\n  ionModalWillDismiss: 'ionViewWillLeave',\n  ionModalDidDismiss: 'ionViewDidLeave',\n};\nlet modalIds = 0;\nModal.style = {\n  ios: modalIosCss,\n  md: modalMdCss\n};\n\nexport { Modal as ion_modal };\n"]}