{"version":3,"file":"polyfills.82cb691d4719f973.js","mappings":"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","names":["global","globalThis","self","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","name","String","test","TypeError","toLowerCase","value","items","iterator","next","shift","done","undefined","headers","this","map","o","Headers","forEach","append","Array","isArray","header","getOwnPropertyNames","body","bodyUsed","Promise","reject","reader","resolve","onload","result","onerror","error","blob","FileReader","promise","fileReaderReady","readAsArrayBuffer","buf","slice","view","Uint8Array","byteLength","set","buffer","_initBody","_bodyInit","_bodyText","ie","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","isDataView","_bodyArrayBuffer","bufferClone","get","type","rejected","consumed","Error","arrayBuffer","byteOffset","then","readBlobAsArrayBuffer","text","readAsText","readBlobAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","normalizeName","normalizeValue","oldValue","delete","has","hasOwnProperty","callback","thisArg","keys","push","iteratorFor","values","entries","methods","input","options","Request","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","cache","reParamSearch","replace","Date","getTime","form","trim","split","bytes","decodeURIComponent","rawHeaders","preProcessedHeaders","substr","line","parts","key","bodyInit","Response","status","ok","statusText","clone","Body","response","redirectStatuses","redirect","RangeError","location","DOMException","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abort","parseHeaders","getAllResponseHeaders","responseURL","responseText","setTimeout","ontimeout","onabort","open","href","fixUrl","X","withCredentials","responseType","l","setRequestHeader","addEventListener","abortXhr","onreadystatechange","readyState","removeEventListener","send","fetch","polyfill","window","__Zone_disable_customElements","root","AbortController","SECRET","AbortSignal","secret","EventTarget","_aborted","defineProperty","_onabort","existing","_signal","dispatchEvent","Event","performance","mark","label","measure","symbolPrefix","__Zone_symbol_prefix","checkDuplicate","__symbol__","Zone","parent","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","_ZoneDelegate","static","patches","ZoneAwarePromise","zone","current","_currentZoneFrame","currentTask","_currentTask","fn","ignoreDuplicate","perfName","_api","performanceMeasure","getZoneWith","fork","wrap","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","handleError","runTask","task","NO_ZONE","state","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","scheduleFn","isEmpty","counts","prev","change","_state","useG","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","handleId","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","func","nativeThen","nativeScheduleMicroTask","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","ObjectGetPrototypeOf","getPrototypeOf","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","zoneSymbol","isWindowExists","internalWindow","_global","propertyDesc","writable","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","errorEvent","filename","lineno","colno","preventDefault","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","REMOVE_ATTRIBUTE","removeAttribute","patchProperty","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","isPropertyWritable","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","scheduleMacroTaskWithCurrentZone","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","uncaughtPromiseError","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","v","resolvePromise","once","wasCalled","wrappedFunction","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","clearRejectedNoCatch","makeResolver","trace","creationTrace","scheduleResolveOrReject","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","forwardResolution","forwardRejection","parentPromiseValue","isFinallyPromise","AggregateError","promises","finished","errors","res","rej","isThenable","onResolve","onReject","allWithCallback","thenCallback","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","_a","C","catch","finally","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","wrapped","resultPromise","ctor","zoneify","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","context","isCapture","tasks","copyTasks","globalZoneAwareCallback","globalCallback","globalZoneAwareCaptureCallback","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","existingTask","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","buildEventListenerOptions","ke","prepareEventNames","constructorName","targetSource","A","unshift","PREPEND_EVENT_LISTENER","findEventTasks","captureTasks","removeTasks","match","exec","evtName","results","patchEventTargetMethods","foundTasks","captureFalseTasks","captureTrueTasks","concat","targetName","callbacks","nativeDelegate","opts","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","startsWith","substring","eventNames","getOnEventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","delay","clearTask","handle","ref","unref","bind","id","L","legacyPatch","clear","patchTimer","blockingMethods","s","patchEvent","EVENT_TARGET","eventTargetPatch","XMLHttpRequestEventTarget","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchFilteredProperties","propertyDescriptorPatch","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","DONE","loadTasks","oriInvoke","storedTask","XHR_TASK","sendNative","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","placeholderCallback","findPendingTask","patchXHR","geolocation","fnNames","patchPrototype","PromiseRejectionEvent","evt","findPromiseRejectionHandler"],"sourceRoot":"webpack:///","sources":["./node_modules/whatwg-fetch/fetch.js","./pwa/src/zone-flags.ts","./node_modules/yet-another-abortcontroller-polyfill/index.js","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["var global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof self !== 'undefined' && self) ||\n  (typeof global !== 'undefined' && global)\n\nvar support = {\n  searchParams: 'URLSearchParams' in global,\n  iterable: 'Symbol' in global && 'iterator' in Symbol,\n  blob:\n    'FileReader' in global &&\n    'Blob' in global &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in global,\n  arrayBuffer: 'ArrayBuffer' in global\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n    throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    /*\n      fetch-mock wraps the Response object in an ES6 Proxy to\n      provide useful test harness features such as flush. However, on\n      ES5 browsers without fetch or Proxy support pollyfills must be used;\n      the proxy-pollyfill is unable to proxy an attribute unless it exists\n      on the object before the Proxy is created. This change ensures\n      Response.bodyUsed exists on the instance, while maintaining the\n      semantic of setting Request.bodyUsed in the constructor before\n      _initBody is called.\n    */\n    this.bodyUsed = this.bodyUsed\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this)\n        if (isConsumed) {\n          return isConsumed\n        }\n        if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  if (!(this instanceof Request)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n\n  if (this.method === 'GET' || this.method === 'HEAD') {\n    if (options.cache === 'no-store' || options.cache === 'no-cache') {\n      // Search for a '_' parameter in the query string\n      var reParamSearch = /([?&])_=[^&]*/\n      if (reParamSearch.test(this.url)) {\n        // If it already exists then set the value with the current time\n        this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime())\n      } else {\n        // Otherwise add a new '_' parameter to the end with the current time\n        var reQueryString = /\\?/\n        this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime()\n      }\n    }\n  }\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n  // https://github.com/github/fetch/issues/748\n  // https://github.com/zloirock/core-js/issues/751\n  preProcessedHeaders\n    .split('\\r')\n    .map(function(header) {\n      return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n    })\n    .forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!(this instanceof Response)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = options.statusText === undefined ? '' : '' + options.statusText\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = global.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      setTimeout(function() {\n        resolve(new Response(body, options))\n      }, 0)\n    }\n\n    xhr.onerror = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.ontimeout = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.onabort = function() {\n      setTimeout(function() {\n        reject(new DOMException('Aborted', 'AbortError'))\n      }, 0)\n    }\n\n    function fixUrl(url) {\n      try {\n        return url === '' && global.location.href ? global.location.href : url\n      } catch (e) {\n        return url\n      }\n    }\n\n    xhr.open(request.method, fixUrl(request.url), true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr) {\n      if (support.blob) {\n        xhr.responseType = 'blob'\n      } else if (\n        support.arrayBuffer &&\n        request.headers.get('Content-Type') &&\n        request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1\n      ) {\n        xhr.responseType = 'arraybuffer'\n      }\n    }\n\n    if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {\n      Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n        xhr.setRequestHeader(name, normalizeValue(init.headers[name]))\n      })\n    } else {\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n    }\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!global.fetch) {\n  global.fetch = fetch\n  global.Headers = Headers\n  global.Request = Request\n  global.Response = Response\n}\n","/**\n * Prevents Angular change detection from\n * running with certain Web Component callbacks\n */\n(window as any).__Zone_disable_customElements = true;\n","const root =\n  (typeof globalThis !== \"undefined\" && globalThis) ||\n  (typeof self !== \"undefined\" && self) ||\n  (typeof global !== \"undefined\" && global);\n\nif (typeof root.AbortController === \"undefined\") {\n  const SECRET = {};\n\n  root.AbortSignal = (function () {\n    function AbortSignal(secret) {\n      if (secret !== SECRET) {\n        throw new TypeError(\"Illegal constructor.\");\n      }\n      EventTarget.call(this);\n      this._aborted = false;\n    }\n\n    AbortSignal.prototype = Object.create(EventTarget.prototype);\n    AbortSignal.prototype.constructor = AbortSignal;\n\n    Object.defineProperty(AbortSignal.prototype, \"onabort\", {\n      get: function () {\n        return this._onabort;\n      },\n      set: function (callback) {\n        const existing = this._onabort;\n        if (existing) {\n          this.removeEventListener(\"abort\", existing);\n        }\n        this._onabort = callback;\n        this.addEventListener(\"abort\", callback);\n      },\n    });\n\n    Object.defineProperty(AbortSignal.prototype, \"aborted\", {\n      get: function () {\n        return this._aborted;\n      },\n    });\n\n    return AbortSignal;\n  })();\n\n  root.AbortController = (function () {\n    function AbortController() {\n      this._signal = new AbortSignal(SECRET);\n    }\n\n    AbortController.prototype = Object.create(Object.prototype);\n\n    Object.defineProperty(AbortController.prototype, \"signal\", {\n      get: function () {\n        return this._signal;\n      },\n    });\n\n    AbortController.prototype.abort = function () {\n      const signal = this.signal;\n      if (!signal.aborted) {\n        signal._aborted = true;\n        signal.dispatchEvent(new Event(\"abort\"));\n      }\n    };\n\n    return AbortController;\n  })();\n}\n","'use strict';\n/**\n * @license Angular v14.1.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            var _a;\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            var _a;\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch (_a) {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"]}