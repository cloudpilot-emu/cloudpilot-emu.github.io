{"version":3,"file":"6199.d5ffd89889b31762.js","mappings":"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","names":["createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","createAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","translateElement","el","value","Promise","resolve","trans","transitionEndAsync","writeTask","style","setProperty","undefined","removeProperty","shouldUseNativeRefresher","_ref","_asyncToGenerator","referenceEl","mode","refresherContent","componentOnReady","pullingSpinner","refreshingSpinner","isPlatform","webkitOverflowScrolling","_x","_x2","apply","this","arguments","Refresher","constructor","hostRef","registerInstance","ionRefresh","createEvent","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","lastVelocityY","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","disabledChanged","gesture","enable","checkNativeRefresher","_this","useNativeRefresher","getIonMode","contentEl","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","removeEventListener","resetNativeRefresher","_this2","forEach","ani","destroy","setupiOSNativeRefresher","_this3","elementToTransform","ticks","querySelectorAll","MAX_PULL","clientHeight","NUM_TICKS","length","readTask","scrollTop","refresherHeight","ratio","clamp","setSpinnerOpacity","toString","emit","pullAmount","Math","abs","handleScrollWhileRefreshing","beginRefresh","hapticImpact","ImpactStyle","Light","handleScrollWhilePulling","numTicks","i","min","max","progression","addEventListener","then","__webpack_require__","bind","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","ev","velocityY","onEnd","setupMDNativeRefresher","_this4","getElementRoot","refreshingCircle","canStart","data","animation","cancelled","overflowProperty","matches","ION_CONTENT_CLASS_SELECTOR","animationType","previousSibling","previousElementSibling","tagName","getRefresherAnimationType","createPullingAnimation","type","refresherEl","createScaleAnimation","height","spinnerAnimation","createTranslateAnimation","progressStart","push","deltaY","progressStep","progressEnd","onFinish","getTimeGivenProgression","snapBackAnimation","fromTo","createSnapBackAnimation","play","_this5","setCss","componentDidUpdate","connectedCallback","_this6","getAttribute","console","error","ION_CONTENT_ELEMENT_SELECTOR","customScrollTarget","getScrollElement","backgroundContentEl","getBackgroundElement","passive","printIonContentErrorMsg","disconnectedCallback","complete","_this7","raf","close","cancel","_this8","getProgress","memoizeOverflowStyle","detail","event","touches","Number","isNaN","cancelable","preventDefault","restoreOverflowStyle","delay","setTimeout","y","overflowVisible","shouldRestoreOverflowStyle","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","overflowX","overflowY","overflowStyles","render","h","Host","slot","class","e","getElement","watchers","ios","md","RefresherContent","customHTMLEnabled","config","get","ENABLE_HTML_CONTENT_DEFAULT","pullingIcon","pullingText","refreshingText","componentWillLoad","overflowRefresher","arrowDown","renderPullingText","innerHTML","sanitizeDOMString","renderRefreshingText","hasSpinner","SPINNERS","name","paused","icon","caretBackSharp","lazy"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as writeTask, r as registerInstance, d as createEvent, e as readTask, h, f as getElement, H as Host } from './index-b7d870cf.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-fe2083dc.js';\nimport { I as ION_CONTENT_CLASS_SELECTOR, b as ION_CONTENT_ELEMENT_SELECTOR, p as printIonContentErrorMsg, g as getScrollElement } from './index-b9e742e5.js';\nimport { t as transitionEndAsync, c as componentOnReady, l as clamp, g as getElementRoot, r as raf } from './helpers-ae653409.js';\nimport { d as hapticImpact, I as ImpactStyle } from './haptic-554688a5.js';\nimport { a as isPlatform, b as getIonMode, c as config } from './ionic-global-1f99b929.js';\nimport { c as createAnimation } from './animation-dde8cc0d.js';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config-49c88215.js';\nimport { h as caretBackSharp, i as arrowDown } from './index-c132c5f1.js';\nimport { S as SPINNERS } from './spinner-configs-964f7cf3.js';\nimport './index-9b0d46f4.js';\nimport './capacitor-59395cbd.js';\nimport './index-a5d50daf.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n    const previousSibling = contentEl.previousElementSibling;\n    const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n    return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n    return type === 'scale'\n        ? createScaleAnimation(pullingSpinner, refresherEl)\n        : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n    const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n    const circle = spinner.shadowRoot.querySelector('circle');\n    const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n    const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n    const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n    const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n    const spinnerArrowContainerAnimation = createAnimation()\n        .addElement(spinnerArrowContainer)\n        .keyframes([\n        { offset: 0, opacity: '0.3' },\n        { offset: 0.45, opacity: '0.3' },\n        { offset: 0.55, opacity: '1' },\n        { offset: 1, opacity: '1' },\n    ]);\n    const circleInnerAnimation = createAnimation()\n        .addElement(circle)\n        .keyframes([\n        { offset: 0, strokeDasharray: '1px, 200px' },\n        { offset: 0.2, strokeDasharray: '1px, 200px' },\n        { offset: 0.55, strokeDasharray: '100px, 200px' },\n        { offset: 1, strokeDasharray: '100px, 200px' },\n    ]);\n    const circleOuterAnimation = createAnimation()\n        .addElement(spinner)\n        .keyframes([\n        { offset: 0, transform: 'rotate(-90deg)' },\n        { offset: 1, transform: 'rotate(210deg)' },\n    ]);\n    /**\n     * Only add arrow animation if present\n     * this allows users to customize the spinners\n     * without errors being thrown\n     */\n    if (arrowContainer && arrow) {\n        const arrowContainerAnimation = createAnimation()\n            .addElement(arrowContainer)\n            .keyframes([\n            { offset: 0, transform: 'rotate(0deg)' },\n            { offset: 0.3, transform: 'rotate(0deg)' },\n            { offset: 0.55, transform: 'rotate(280deg)' },\n            { offset: 1, transform: 'rotate(400deg)' },\n        ]);\n        const arrowAnimation = createAnimation()\n            .addElement(arrow)\n            .keyframes([\n            { offset: 0, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.3, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n            { offset: 1, transform: 'translateX(-1.5px) scale(1)' },\n        ]);\n        baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n    }\n    return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n    /**\n     * Do not take the height of the refresher icon\n     * because at this point the DOM has not updated,\n     * so the refresher icon is still hidden with\n     * display: none.\n     * The `ion-refresher` container height\n     * is roughly the amount we need to offset\n     * the icon by when pulling down.\n     */\n    const height = refresherEl.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `scale(0) translateY(-${height}px)` },\n        { offset: 1, transform: 'scale(1) translateY(100px)' },\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n    /**\n     * Do not take the height of the refresher icon\n     * because at this point the DOM has not updated,\n     * so the refresher icon is still hidden with\n     * display: none.\n     * The `ion-refresher` container height\n     * is roughly the amount we need to offset\n     * the icon by when pulling down.\n     */\n    const height = refresherEl.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `translateY(-${height}px)` },\n        { offset: 1, transform: 'translateY(100px)' },\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n    return createAnimation()\n        .duration(125)\n        .addElement(pullingRefresherIcon)\n        .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n    spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (ticks, numTicks, pullAmount) => {\n    const max = 1;\n    writeTask(() => {\n        ticks.forEach((el, i) => {\n            /**\n             * Compute the opacity of each tick\n             * mark as a percentage of the pullAmount\n             * offset by max / numTicks so\n             * the tick marks are shown staggered.\n             */\n            const min = i * (max / numTicks);\n            const range = max - min;\n            const start = pullAmount - min;\n            const progression = clamp(0, start / range, 1);\n            el.style.setProperty('opacity', progression.toString());\n        });\n    });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n    writeTask(() => {\n        // If user pulls down quickly, the spinner should spin faster\n        spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n        spinner.style.setProperty('opacity', '1');\n    });\n};\nconst translateElement = (el, value, duration = 200) => {\n    if (!el) {\n        return Promise.resolve();\n    }\n    const trans = transitionEndAsync(el, duration);\n    writeTask(() => {\n        el.style.setProperty('transition', `${duration}ms all ease-out`);\n        if (value === undefined) {\n            el.style.removeProperty('transform');\n        }\n        else {\n            el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n        }\n    });\n    return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n    const refresherContent = referenceEl.querySelector('ion-refresher-content');\n    if (!refresherContent) {\n        return Promise.resolve(false);\n    }\n    await new Promise((resolve) => componentOnReady(refresherContent, resolve));\n    const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    return (pullingSpinner !== null &&\n        refreshingSpinner !== null &&\n        /**\n         * We use webkitOverflowScrolling for feature detection with rubber band scrolling\n         * on iOS. When doing referenceEl.style, webkitOverflowScrolling is undefined on non-iOS platforms.\n         * However, it will be the empty string on iOS.\n         * Note that we do not use getPropertyValue (and thus need to cast as any) because calling\n         * getPropertyValue('-webkit-overflow-scrolling') will return the empty string if it is not\n         * set on the element, even if the platform does not support that.\n         */\n        ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n            mode === 'md'));\n};\n\nconst refresherIosCss = \"ion-refresher{top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}@supports (inset-inline-start: 0){ion-refresher{inset-inline-start:0}}@supports not (inset-inline-start: 0){ion-refresher{left:0}:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}[dir=rtl] ion-refresher{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){ion-refresher:dir(rtl){left:unset;right:unset;right:0}}}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}:host-context([dir=rtl]) .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}[dir=rtl] .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}@supports selector(:dir(rtl)){.refresher-pulling-icon:dir(rtl),.refresher-refreshing-icon:dir(rtl){-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}@supports (inset-inline-start: 0){ion-refresher{inset-inline-start:0}}@supports not (inset-inline-start: 0){ion-refresher{left:0}:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}[dir=rtl] ion-refresher{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){ion-refresher:dir(rtl){left:unset;right:unset;right:0}}}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}:host-context([dir=rtl]) .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}[dir=rtl] .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}@supports selector(:dir(rtl)){.refresher-pulling-icon:dir(rtl),.refresher-refreshing-icon:dir(rtl){-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;border-radius:100%;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}\";\n\nconst Refresher = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n        this.ionPull = createEvent(this, \"ionPull\", 7);\n        this.ionStart = createEvent(this, \"ionStart\", 7);\n        this.appliedStyles = false;\n        this.didStart = false;\n        this.progress = 0;\n        this.pointerDown = false;\n        this.needsCompletion = false;\n        this.didRefresh = false;\n        this.lastVelocityY = 0;\n        this.animations = [];\n        this.nativeRefresher = false;\n        this.state = 1 /* RefresherState.Inactive */;\n        this.pullMin = 60;\n        this.pullMax = this.pullMin + 60;\n        this.closeDuration = '280ms';\n        this.snapbackDuration = '280ms';\n        this.pullFactor = 1;\n        this.disabled = false;\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    async checkNativeRefresher() {\n        const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n        if (useNativeRefresher && !this.nativeRefresher) {\n            const contentEl = this.el.closest('ion-content');\n            this.setupNativeRefresher(contentEl);\n        }\n        else if (!useNativeRefresher) {\n            this.destroyNativeRefresher();\n        }\n    }\n    destroyNativeRefresher() {\n        if (this.scrollEl && this.scrollListenerCallback) {\n            this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n            this.scrollListenerCallback = undefined;\n        }\n        this.nativeRefresher = false;\n    }\n    async resetNativeRefresher(el, state) {\n        this.state = state;\n        if (getIonMode(this) === 'ios') {\n            await translateElement(el, undefined, 300);\n        }\n        else {\n            await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n        }\n        this.didRefresh = false;\n        this.needsCompletion = false;\n        this.pointerDown = false;\n        this.animations.forEach((ani) => ani.destroy());\n        this.animations = [];\n        this.progress = 0;\n        this.state = 1 /* RefresherState.Inactive */;\n    }\n    async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n        this.elementToTransform = this.scrollEl;\n        const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n        let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        const NUM_TICKS = ticks.length;\n        writeTask(() => ticks.forEach((el) => el.style.setProperty('animation', 'none')));\n        this.scrollListenerCallback = () => {\n            // If pointer is not on screen or refresher is not active, ignore scroll\n            if (!this.pointerDown && this.state === 1 /* RefresherState.Inactive */) {\n                return;\n            }\n            readTask(() => {\n                // PTR should only be active when overflow scrolling at the top\n                const scrollTop = this.scrollEl.scrollTop;\n                const refresherHeight = this.el.clientHeight;\n                if (scrollTop > 0) {\n                    /**\n                     * If refresher is refreshing and user tries to scroll\n                     * progressively fade refresher out/in\n                     */\n                    if (this.state === 8 /* RefresherState.Refreshing */) {\n                        const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n                        writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n                        return;\n                    }\n                    return;\n                }\n                if (this.pointerDown) {\n                    if (!this.didStart) {\n                        this.didStart = true;\n                        this.ionStart.emit();\n                    }\n                    // emit \"pulling\" on every move\n                    if (this.pointerDown) {\n                        this.ionPull.emit();\n                    }\n                }\n                /**\n                 * We want to delay the start of this gesture by ~30px\n                 * when initially pulling down so the refresher does not\n                 * overlap with the content. But when letting go of the\n                 * gesture before the refresher completes, we want the\n                 * refresher tick marks to quickly fade out.\n                 */\n                const offset = this.didStart ? 30 : 0;\n                const pullAmount = (this.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1));\n                const shouldShowRefreshingSpinner = this.state === 8 /* RefresherState.Refreshing */ || pullAmount === 1;\n                if (shouldShowRefreshingSpinner) {\n                    if (this.pointerDown) {\n                        handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n                    }\n                    if (!this.didRefresh) {\n                        this.beginRefresh();\n                        this.didRefresh = true;\n                        hapticImpact({ style: ImpactStyle.Light });\n                        /**\n                         * Translate the content element otherwise when pointer is removed\n                         * from screen the scroll content will bounce back over the refresher\n                         */\n                        if (!this.pointerDown) {\n                            translateElement(this.elementToTransform, `${refresherHeight}px`);\n                        }\n                    }\n                }\n                else {\n                    this.state = 2 /* RefresherState.Pulling */;\n                    handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n                }\n            });\n        };\n        this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n        this.gesture = (await import('./index-2cf77112.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 31,\n            direction: 'y',\n            threshold: 5,\n            onStart: () => {\n                this.pointerDown = true;\n                if (!this.didRefresh) {\n                    translateElement(this.elementToTransform, '0px');\n                }\n                /**\n                 * If the content had `display: none` when\n                 * the refresher was initialized, its clientHeight\n                 * will be 0. When the gesture starts, the content\n                 * will be visible, so try to get the correct\n                 * client height again. This is most common when\n                 * using the refresher in an ion-menu.\n                 */\n                if (MAX_PULL === 0) {\n                    MAX_PULL = this.scrollEl.clientHeight * 0.16;\n                }\n            },\n            onMove: (ev) => {\n                this.lastVelocityY = ev.velocityY;\n            },\n            onEnd: () => {\n                this.pointerDown = false;\n                this.didStart = false;\n                if (this.needsCompletion) {\n                    this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */);\n                    this.needsCompletion = false;\n                }\n                else if (this.didRefresh) {\n                    readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n                }\n            },\n        });\n        this.disabledChanged();\n    }\n    async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n        const circle = getElementRoot(pullingSpinner).querySelector('circle');\n        const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n        const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n        if (circle !== null && refreshingCircle !== null) {\n            writeTask(() => {\n                circle.style.setProperty('animation', 'none');\n                // This lines up the animation on the refreshing spinner with the pulling spinner\n                refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n                refreshingCircle.style.setProperty('animation-delay', '-655ms');\n            });\n        }\n        this.gesture = (await import('./index-2cf77112.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 31,\n            direction: 'y',\n            threshold: 5,\n            canStart: () => this.state !== 8 /* RefresherState.Refreshing */ &&\n                this.state !== 32 /* RefresherState.Completing */ &&\n                this.scrollEl.scrollTop === 0,\n            onStart: (ev) => {\n                this.progress = 0;\n                ev.data = { animation: undefined, didStart: false, cancelled: false };\n            },\n            onMove: (ev) => {\n                if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n                    ev.data.cancelled = true;\n                    return;\n                }\n                if (!ev.data.didStart) {\n                    ev.data.didStart = true;\n                    this.state = 2 /* RefresherState.Pulling */;\n                    // When ion-refresher is being used with a custom scroll target, the overflow styles need to be applied directly instead of via a css variable\n                    const { scrollEl } = this;\n                    const overflowProperty = scrollEl.matches(ION_CONTENT_CLASS_SELECTOR) ? 'overflow' : '--overflow';\n                    writeTask(() => scrollEl.style.setProperty(overflowProperty, 'hidden'));\n                    const animationType = getRefresherAnimationType(contentEl);\n                    const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n                    ev.data.animation = animation;\n                    animation.progressStart(false, 0);\n                    this.ionStart.emit();\n                    this.animations.push(animation);\n                    return;\n                }\n                // Since we are using an easing curve, slow the gesture tracking down a bit\n                this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n                ev.data.animation.progressStep(this.progress);\n                this.ionPull.emit();\n            },\n            onEnd: (ev) => {\n                if (!ev.data.didStart) {\n                    return;\n                }\n                this.gesture.enable(false);\n                const { scrollEl } = this;\n                const overflowProperty = scrollEl.matches(ION_CONTENT_CLASS_SELECTOR) ? 'overflow' : '--overflow';\n                writeTask(() => scrollEl.style.removeProperty(overflowProperty));\n                if (this.progress <= 0.4) {\n                    ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n                        this.animations.forEach((ani) => ani.destroy());\n                        this.animations = [];\n                        this.gesture.enable(true);\n                        this.state = 1 /* RefresherState.Inactive */;\n                    });\n                    return;\n                }\n                const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n                const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n                this.animations.push(snapBackAnimation);\n                writeTask(async () => {\n                    pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n                    ev.data.animation.progressEnd();\n                    await snapBackAnimation.play();\n                    this.beginRefresh();\n                    ev.data.animation.destroy();\n                    this.gesture.enable(true);\n                });\n            },\n        });\n        this.disabledChanged();\n    }\n    async setupNativeRefresher(contentEl) {\n        if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n            return;\n        }\n        /**\n         * If using non-native refresher before make sure\n         * we clean up any old CSS. This can happen when\n         * a user manually calls the refresh method in a\n         * component create callback before the native\n         * refresher is setup.\n         */\n        this.setCss(0, '', false, '');\n        this.nativeRefresher = true;\n        const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n        const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n        if (getIonMode(this) === 'ios') {\n            this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n        }\n        else {\n            this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n        }\n    }\n    componentDidUpdate() {\n        this.checkNativeRefresher();\n    }\n    async connectedCallback() {\n        if (this.el.getAttribute('slot') !== 'fixed') {\n            console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n            return;\n        }\n        const contentEl = this.el.closest(ION_CONTENT_ELEMENT_SELECTOR);\n        if (!contentEl) {\n            printIonContentErrorMsg(this.el);\n            return;\n        }\n        /**\n         * Waits for the content to be ready before querying the scroll\n         * or the background content element.\n         */\n        componentOnReady(contentEl, async () => {\n            const customScrollTarget = contentEl.querySelector(ION_CONTENT_CLASS_SELECTOR);\n            /**\n             * Query the custom scroll target (if available), first. In refresher implementations,\n             * the ion-refresher element will always be a direct child of ion-content (slot=\"fixed\"). By\n             * querying the custom scroll target first and falling back to the ion-content element,\n             * the correct scroll element will be returned by the implementation.\n             */\n            this.scrollEl = await getScrollElement(customScrollTarget !== null && customScrollTarget !== void 0 ? customScrollTarget : contentEl);\n            /**\n             * Query the background content element from the host ion-content element directly.\n             */\n            this.backgroundContentEl = await contentEl.getBackgroundElement();\n            if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n                this.setupNativeRefresher(contentEl);\n            }\n            else {\n                this.gesture = (await import('./index-2cf77112.js')).createGesture({\n                    el: contentEl,\n                    gestureName: 'refresher',\n                    gesturePriority: 31,\n                    direction: 'y',\n                    threshold: 20,\n                    passive: false,\n                    canStart: () => this.canStart(),\n                    onStart: () => this.onStart(),\n                    onMove: (ev) => this.onMove(ev),\n                    onEnd: () => this.onEnd(),\n                });\n                this.disabledChanged();\n            }\n        });\n    }\n    disconnectedCallback() {\n        this.destroyNativeRefresher();\n        this.scrollEl = undefined;\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n    async complete() {\n        if (this.nativeRefresher) {\n            this.needsCompletion = true;\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */)));\n            }\n        }\n        else {\n            this.close(32 /* RefresherState.Completing */, '120ms');\n        }\n    }\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n    async cancel() {\n        if (this.nativeRefresher) {\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* RefresherState.Cancelling */)));\n            }\n        }\n        else {\n            this.close(16 /* RefresherState.Cancelling */, '');\n        }\n    }\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n    getProgress() {\n        return Promise.resolve(this.progress);\n    }\n    canStart() {\n        if (!this.scrollEl) {\n            return false;\n        }\n        if (this.state !== 1 /* RefresherState.Inactive */) {\n            return false;\n        }\n        // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n        if (this.scrollEl.scrollTop > 0) {\n            return false;\n        }\n        return true;\n    }\n    onStart() {\n        this.progress = 0;\n        this.state = 1 /* RefresherState.Inactive */;\n        this.memoizeOverflowStyle();\n    }\n    onMove(detail) {\n        if (!this.scrollEl) {\n            return;\n        }\n        // this method can get called like a bazillion times per second,\n        // so it's built to be as efficient as possible, and does its\n        // best to do any DOM read/writes only when absolutely necessary\n        // if multi-touch then get out immediately\n        const ev = detail.event;\n        if (ev.touches !== undefined && ev.touches.length > 1) {\n            return;\n        }\n        // do nothing if it's actively refreshing\n        // or it's in the way of closing\n        // or this was never a startY\n        if ((this.state & 56 /* RefresherState._BUSY_ */) !== 0) {\n            return;\n        }\n        const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n        const deltaY = detail.deltaY * pullFactor;\n        // don't bother if they're scrolling up\n        // and have not already started dragging\n        if (deltaY <= 0) {\n            // the current Y is higher than the starting Y\n            // so they scrolled up enough to be ignored\n            this.progress = 0;\n            this.state = 1 /* RefresherState.Inactive */;\n            if (this.appliedStyles) {\n                // reset the styles only if they were applied\n                this.setCss(0, '', false, '');\n                return;\n            }\n            return;\n        }\n        if (this.state === 1 /* RefresherState.Inactive */) {\n            // this refresh is not already actively pulling down\n            // get the content's scrollTop\n            const scrollHostScrollTop = this.scrollEl.scrollTop;\n            // if the scrollTop is greater than zero then it's\n            // not possible to pull the content down yet\n            if (scrollHostScrollTop > 0) {\n                this.progress = 0;\n                return;\n            }\n            // content scrolled all the way to the top, and dragging down\n            this.state = 2 /* RefresherState.Pulling */;\n        }\n        // prevent native scroll events\n        if (ev.cancelable) {\n            ev.preventDefault();\n        }\n        // the refresher is actively pulling at this point\n        // move the scroll element within the content element\n        this.setCss(deltaY, '0ms', true, '');\n        if (deltaY === 0) {\n            // don't continue if there's no delta yet\n            this.progress = 0;\n            return;\n        }\n        const pullMin = this.pullMin;\n        // set pull progress\n        this.progress = deltaY / pullMin;\n        // emit \"start\" if it hasn't started yet\n        if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n        }\n        // emit \"pulling\" on every move\n        this.ionPull.emit();\n        // do nothing if the delta is less than the pull threshold\n        if (deltaY < pullMin) {\n            // ensure it stays in the pulling state, cuz its not ready yet\n            this.state = 2 /* RefresherState.Pulling */;\n            return;\n        }\n        if (deltaY > this.pullMax) {\n            // they pulled farther than the max, so kick off the refresh\n            this.beginRefresh();\n            return;\n        }\n        // pulled farther than the pull min!!\n        // it is now in the `ready` state!!\n        // if they let go then it'll refresh, kerpow!!\n        this.state = 4 /* RefresherState.Ready */;\n        return;\n    }\n    onEnd() {\n        // only run in a zone when absolutely necessary\n        if (this.state === 4 /* RefresherState.Ready */) {\n            // they pulled down far enough, so it's ready to refresh\n            this.beginRefresh();\n        }\n        else if (this.state === 2 /* RefresherState.Pulling */) {\n            // they were pulling down, but didn't pull down far enough\n            // set the content back to it's original location\n            // and close the refresher\n            // set that the refresh is actively cancelling\n            this.cancel();\n        }\n        else if (this.state === 1 /* RefresherState.Inactive */) {\n            /**\n             * The pull to refresh gesture was aborted\n             * so we should immediately restore any overflow styles\n             * that have been modified. Do not call this.cancel\n             * because the styles will only be reset after a timeout.\n             * If the gesture is aborted then scrolling should be\n             * available right away.\n             */\n            this.restoreOverflowStyle();\n        }\n    }\n    beginRefresh() {\n        // assumes we're already back in a zone\n        // they pulled down far enough, so it's ready to refresh\n        this.state = 8 /* RefresherState.Refreshing */;\n        // place the content in a hangout position while it thinks\n        this.setCss(this.pullMin, this.snapbackDuration, true, '');\n        // emit \"refresh\" because it was pulled down far enough\n        // and they let go to begin refreshing\n        this.ionRefresh.emit({\n            complete: this.complete.bind(this),\n        });\n    }\n    close(state, delay) {\n        // create fallback timer incase something goes wrong with transitionEnd event\n        setTimeout(() => {\n            this.state = 1 /* RefresherState.Inactive */;\n            this.progress = 0;\n            this.didStart = false;\n            /**\n             * Reset any overflow styles so the\n             * user can scroll again.\n             */\n            this.setCss(0, '0ms', false, '', true);\n        }, 600);\n        // reset the styles on the scroll element\n        // set that the refresh is actively cancelling/completing\n        this.state = state;\n        this.setCss(0, this.closeDuration, true, delay);\n    }\n    setCss(y, duration, overflowVisible, delay, shouldRestoreOverflowStyle = false) {\n        if (this.nativeRefresher) {\n            return;\n        }\n        this.appliedStyles = y > 0;\n        writeTask(() => {\n            if (this.scrollEl && this.backgroundContentEl) {\n                const scrollStyle = this.scrollEl.style;\n                const backgroundStyle = this.backgroundContentEl.style;\n                scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n                scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n                scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n                scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n            }\n            /**\n             * Reset the overflow styles only once\n             * the pull to refresh effect has been closed.\n             * This ensures that the gesture is done\n             * and the refresh operation has either\n             * been aborted or has completed.\n             */\n            if (shouldRestoreOverflowStyle) {\n                this.restoreOverflowStyle();\n            }\n        });\n    }\n    memoizeOverflowStyle() {\n        if (this.scrollEl) {\n            const { overflow, overflowX, overflowY } = this.scrollEl.style;\n            this.overflowStyles = {\n                overflow: overflow !== null && overflow !== void 0 ? overflow : '',\n                overflowX: overflowX !== null && overflowX !== void 0 ? overflowX : '',\n                overflowY: overflowY !== null && overflowY !== void 0 ? overflowY : '',\n            };\n        }\n    }\n    restoreOverflowStyle() {\n        if (this.overflowStyles !== undefined && this.scrollEl !== undefined) {\n            const { overflow, overflowX, overflowY } = this.overflowStyles;\n            this.scrollEl.style.overflow = overflow;\n            this.scrollEl.style.overflowX = overflowX;\n            this.scrollEl.style.overflowY = overflowY;\n            this.overflowStyles = undefined;\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { slot: \"fixed\", class: {\n                [mode]: true,\n                // Used internally for styling\n                [`refresher-${mode}`]: true,\n                'refresher-native': this.nativeRefresher,\n                'refresher-active': this.state !== 1 /* RefresherState.Inactive */,\n                'refresher-pulling': this.state === 2 /* RefresherState.Pulling */,\n                'refresher-ready': this.state === 4 /* RefresherState.Ready */,\n                'refresher-refreshing': this.state === 8 /* RefresherState.Refreshing */,\n                'refresher-cancelling': this.state === 16 /* RefresherState.Cancelling */,\n                'refresher-completing': this.state === 32 /* RefresherState.Completing */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nRefresher.style = {\n    ios: refresherIosCss,\n    md: refresherMdCss\n};\n\nconst RefresherContent = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n        this.pullingIcon = undefined;\n        this.pullingText = undefined;\n        this.refreshingSpinner = undefined;\n        this.refreshingText = undefined;\n    }\n    componentWillLoad() {\n        if (this.pullingIcon === undefined) {\n            const mode = getIonMode(this);\n            const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : arrowDown;\n            this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n        }\n        if (this.refreshingSpinner === undefined) {\n            const mode = getIonMode(this);\n            this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n        }\n    }\n    renderPullingText() {\n        const { customHTMLEnabled, pullingText } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(pullingText) });\n        }\n        return h(\"div\", { class: \"refresher-pulling-text\" }, pullingText);\n    }\n    renderRefreshingText() {\n        const { customHTMLEnabled, refreshingText } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(refreshingText) });\n        }\n        return h(\"div\", { class: \"refresher-refreshing-text\" }, refreshingText);\n    }\n    render() {\n        const pullingIcon = this.pullingIcon;\n        const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n        const mode = getIonMode(this);\n        return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner && (h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' && (h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { icon: caretBackSharp, \"aria-hidden\": \"true\" })))))), this.pullingIcon && !hasSpinner && (h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false, \"aria-hidden\": \"true\" }))), this.pullingText !== undefined && this.renderPullingText()), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner && (h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner }))), this.refreshingText !== undefined && this.renderRefreshingText())));\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"],"x_google_ignoreList":[0]}