{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","webpack:///node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-27b3f981.js"],"names":["hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassMap","classes","map","undefined","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","async","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push","createButtonActiveGesture","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","classList","add","dispatchClick","remove","click","createGesture","gestureName","threshold","onStart","currentX","currentY","onMove","onEnd","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","appendChild","Promise","resolve","detachComponent","element","removeViewFromDom","parentElement","SPINNERS","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","style","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","HapticEngine","win","window","Capacitor","isPluginAvailable","Plugins","Haptics","this","getEngine","isCordova","TapticEngine","isCapacitor","options","engine","toUpperCase","impact","notification","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","selection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact"],"mappings":"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","file":"x","sourcesContent":["const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-f49d994d.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n"]}