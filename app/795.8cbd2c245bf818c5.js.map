{"version":3,"mappings":"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","names":["isSameDay","baseParts","compareParts","month","day","year","isBefore","isAfter","getNumDaysInMonth","isLeapYear","twoDigit","val","undefined","Math","abs","slice","convertDataToISO","data","rtn","fourDigit","hour","minute","tzOffset","floor","convert12HourTo24Hour","ampm","subtractDays","refParts","numDays","Error","workingParts","daysInMonth","addDays","getPreviousMonth","numDaysInMonth","getNextMonth","changeYear","yearDelta","getInternalHourValue","use24Hour","getToday","date","Date","getTimezoneOffset","setHours","getHours","toISOString","minutes","hour12","hour23","getFormattedTime","getFormattedHour","get12HourTime","addTimePadding","toUpperCase","getFormattedAMPM","value","valueToString","toString","length","generateDayAriaLabel","locale","today","labelString","Intl","DateTimeFormat","weekday","format","ISO_8601_REGEXP","TIME_REGEXP","convertToArrayOfNumbers","input","values","processedInput","replace","split","Array","isArray","map","num","parseInt","filter","isFinite","parseDate","parse","exec","e","unshift","i","second","millisecond","isDayDisabled","minParts","maxParts","dayValues","includes","Datetime","constructor","hostRef","registerInstance","this","ionCancel","createEvent","ionChange","ionFocus","ionBlur","ionStyle","inputId","datetimeIds","overlayIsPresenting","showMonthAndYear","activeParts","todayParts","isPresented","isTimePopoverOpen","color","name","disabled","readonly","presentation","cancelText","doneText","clearText","firstDayOfWeek","showDefaultTitle","showDefaultButtons","showClearButton","showDefaultTimeLabel","size","closeParentOverlay","popoverOrModal","el","closest","dismiss","setWorkingParts","parts","Object","assign","setActiveParts","querySelector","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","mo","MutationObserver","ev","_a","record","oldValue","classList","contains","focusWorkingDay","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","getAttribute","dayOfWeek","getPartsFromCalendarDay","partsToFocus","key","preventDefault","getNextWeek","getPreviousWeek","getNextDay","getPreviousDay","getStartOfWeek","getEndOfWeek","shiftKey","getPreviousYear","getNextYear","requestAnimationFrame","padding","querySelectorAll","dayEl","focus","processMinParts","min","processMaxParts","max","initializeCalendarIOListeners","mode","getIonMode","months","startMonth","workingMonth","endMonth","writeTask","endIO","startIO","scrollLeft","clientWidth","ioCallback","callbackType","entries","refIO","refMonth","refMonthFn","isIntersecting","intersectionRatio","style","setProperty","removeProperty","IntersectionObserver","threshold","destroyCalendarIO","destroyListeners","initializeOverlayListener","overlay","processValue","valueToProcess","activePartsClone","onFocus","emit","onBlur","hasValue","nextMonth","scrollTo","top","left","offsetWidth","behavior","prevMonth","toggleMonthAndYearView","disabledChanged","emitStyle","minChanged","maxChanged","yearValuesChanged","parsedYearValues","yearValues","monthValuesChanged","parsedMonthValues","monthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","hourValues","minuteValuesChanged","parsedMinuteValues","minuteValues","valueChanged","closeOverlay","reset","startDate","cancel","connectedCallback","clearFocusVisible","startFocusVisible","destroy","disconnectedCallback","componentDidLoad","visibleIO","hiddenIO","add","raf","remove","getElementRoot","stopPropagation","componentWillLoad","interactive","datetime","renderFooter","clearButtonClick","h","class","id","onClick","renderYearView","calendarYears","processedYears","minYear","years","push","getCalendarYears","showMonth","showYear","processedMonths","forEach","processedMonth","monthString","text","maxMonth","getPickerMonths","items","onIonChange","detail","renderCalendarHeader","expandedIcon","chevronDown","caretUpSharp","collapsedIcon","chevronForward","caretDownSharp","button","lines","getMonthAndYear","icon","lazy","slot","chevronBack","intl","daysOfWeek","currentDate","setDate","getDate","getDaysOfWeek","d","renderMonth","yearAllowed","monthAllowed","isMonthDisabled","firstOfMonth","getDay","offset","days","getDaysOfMonth","dateObject","index","referenceParts","isActive","isToday","ariaLabel","ariaSelected","getCalendarDayState","tabindex","renderCalendarBody","ref","renderCalendar","renderTimeLabel","renderTimePicker","hoursItems","minutesItems","ampmItems","numericInput","currentParts","newAMPM","currentAMPM","newHour","calculateHourFromAMPM","renderTimeOverlay","o","s","popoverRef","present","onWillDismiss","alignment","translucent","overlayIndex","arrow","keyboardEvents","renderTime","timeOnlyPresentation","hourCycle","formatted","options","resolvedOptions","formatToParts","find","p","type","is24Hour","hours","am","pm","processedHours","processedMinutes","isAMAllowed","isPMAllowed","generateTime","renderCalendarViewHeader","getMonthAndDay","renderDatetime","render","shouldShowMonthAndYear","renderHiddenInput","Host","createColorClasses","getElement","watchers","ios","md"],"sources":["./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement } from './index-06cd27b1.js';\nimport { a as chevronBack, b as chevronForward, d as chevronDown, f as caretUpSharp, g as caretDownSharp } from './index-e2988509.js';\nimport { b as getIonMode } from './ionic-global-a049bcbf.js';\nimport { startFocusVisible } from './focus-visible-02bf7a99.js';\nimport { r as raf, h as renderHiddenInput, g as getElementRoot } from './helpers-eed79a2b.js';\nimport { c as createColorClasses } from './theme-a24ff1ad.js';\nexport { e as ion_picker, f as ion_picker_column } from './overlays-5f2f4ffc.js';\nimport './haptic-9a9aa7ec.js';\nimport './index-41bf41f2.js';\nimport './gesture-controller-68c023a4.js';\nimport './index-c841c933.js';\nimport './animation-c9c2a359.js';\nimport './framework-delegate-a922018c.js';\nimport './index-c8ef55b5.js';\nimport './cubic-bezier-154a53a5.js';\nimport './hardware-back-button-ace6a71b.js';\n\n/**\n * Returns true if the selected day is equal to the reference day\n */\nconst isSameDay = (baseParts, compareParts) => {\n  return (baseParts.month === compareParts.month &&\n    baseParts.day === compareParts.day &&\n    baseParts.year === compareParts.year);\n};\n/**\n * Returns true is the selected day is before the reference day.\n */\nconst isBefore = (baseParts, compareParts) => {\n  return (baseParts.year < compareParts.year ||\n    baseParts.year === compareParts.year && baseParts.month < compareParts.month ||\n    baseParts.year === compareParts.year && baseParts.month === compareParts.month && baseParts.day < compareParts.day);\n};\n/**\n * Returns true is the selected day is after the reference day.\n */\nconst isAfter = (baseParts, compareParts) => {\n  return (baseParts.year > compareParts.year ||\n    baseParts.year === compareParts.year && baseParts.month > compareParts.month ||\n    baseParts.year === compareParts.year && baseParts.month === compareParts.month && baseParts.day > compareParts.day);\n};\n\n/**\n * Determines if given year is a\n * leap year. Returns `true` if year\n * is a leap year. Returns `false`\n * otherwise.\n */\nconst isLeapYear = (year) => {\n  return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\n};\nconst is24Hour = (locale, hourCycle) => {\n  /**\n   * If developer has explicitly enabled h23 time\n   * then return early and do not look at the system default.\n   */\n  if (hourCycle !== undefined) {\n    return hourCycle === 'h23';\n  }\n  /**\n   * If hourCycle was not specified, check the locale\n   * that is set on the user's device. We first check the\n   * Intl.DateTimeFormat hourCycle option as developers can encode this\n   * option into the locale string. Example: `en-US-u-hc-h23`\n   */\n  const formatted = new Intl.DateTimeFormat(locale, { hour: 'numeric' });\n  const options = formatted.resolvedOptions();\n  if (options.hourCycle !== undefined) {\n    return options.hourCycle === 'h23';\n  }\n  /**\n   * If hourCycle is not specified (either through lack\n   * of browser support or locale information) then fall\n   * back to this slower hourCycle check.\n   */\n  const date = new Date('5/18/2021 00:00');\n  const parts = formatted.formatToParts(date);\n  const hour = parts.find(p => p.type === 'hour');\n  if (!hour) {\n    throw new Error('Hour value not found from DateTimeFormat');\n  }\n  return hour.value === '00';\n};\n/**\n * Given a date object, returns the number\n * of days in that month.\n * Month value begin at 1, not 0.\n * i.e. January = month 1.\n */\nconst getNumDaysInMonth = (month, year) => {\n  return (month === 4 || month === 6 || month === 9 || month === 11) ? 30 : (month === 2) ? isLeapYear(year) ? 29 : 28 : 31;\n};\n\nconst twoDigit = (val) => {\n  return ('0' + (val !== undefined ? Math.abs(val) : '0')).slice(-2);\n};\nconst fourDigit = (val) => {\n  return ('000' + (val !== undefined ? Math.abs(val) : '0')).slice(-4);\n};\nconst convertDataToISO = (data) => {\n  // https://www.w3.org/TR/NOTE-datetime\n  let rtn = '';\n  if (data.year !== undefined) {\n    // YYYY\n    rtn = fourDigit(data.year);\n    if (data.month !== undefined) {\n      // YYYY-MM\n      rtn += '-' + twoDigit(data.month);\n      if (data.day !== undefined) {\n        // YYYY-MM-DD\n        rtn += '-' + twoDigit(data.day);\n        if (data.hour !== undefined) {\n          // YYYY-MM-DDTHH:mm:SS\n          rtn += `T${twoDigit(data.hour)}:${twoDigit(data.minute)}:00`;\n          if (data.tzOffset === undefined) {\n            // YYYY-MM-DDTHH:mm:SSZ\n            rtn += 'Z';\n          }\n          else {\n            // YYYY-MM-DDTHH:mm:SS+/-HH:mm\n            rtn += (data.tzOffset > 0 ? '+' : '-') + twoDigit(Math.floor(Math.abs(data.tzOffset / 60))) + ':' + twoDigit(data.tzOffset % 60);\n          }\n        }\n      }\n    }\n  }\n  else if (data.hour !== undefined) {\n    // HH:mm\n    rtn = twoDigit(data.hour) + ':' + twoDigit(data.minute);\n  }\n  return rtn;\n};\n/**\n * Converts an 12 hour value to 24 hours.\n */\nconst convert12HourTo24Hour = (hour, ampm) => {\n  if (ampm === undefined) {\n    return hour;\n  }\n  /**\n   * If AM and 12am\n   * then return 00:00.\n   * Otherwise just return\n   * the hour since it is\n   * already in 24 hour format.\n   */\n  if (ampm === 'am') {\n    if (hour === 12) {\n      return 0;\n    }\n    return hour;\n  }\n  /**\n   * If PM and 12pm\n   * just return 12:00\n   * since it is already\n   * in 24 hour format.\n   * Otherwise add 12 hours\n   * to the time.\n   */\n  if (hour === 12) {\n    return 12;\n  }\n  return hour + 12;\n};\nconst getStartOfWeek = (refParts) => {\n  const { dayOfWeek } = refParts;\n  if (dayOfWeek === null || dayOfWeek === undefined) {\n    throw new Error('No day of week provided');\n  }\n  return subtractDays(refParts, dayOfWeek);\n};\nconst getEndOfWeek = (refParts) => {\n  const { dayOfWeek } = refParts;\n  if (dayOfWeek === null || dayOfWeek === undefined) {\n    throw new Error('No day of week provided');\n  }\n  return addDays(refParts, 6 - dayOfWeek);\n};\nconst getNextDay = (refParts) => {\n  return addDays(refParts, 1);\n};\nconst getPreviousDay = (refParts) => {\n  return subtractDays(refParts, 1);\n};\nconst getPreviousWeek = (refParts) => {\n  return subtractDays(refParts, 7);\n};\nconst getNextWeek = (refParts) => {\n  return addDays(refParts, 7);\n};\n/**\n * Given datetime parts, subtract\n * numDays from the date.\n * Returns a new DatetimeParts object\n * Currently can only go backward at most 1 month.\n */\nconst subtractDays = (refParts, numDays) => {\n  const { month, day, year } = refParts;\n  if (day === null) {\n    throw new Error('No day provided');\n  }\n  const workingParts = {\n    month,\n    day,\n    year\n  };\n  workingParts.day = day - numDays;\n  /**\n   * If wrapping to previous month\n   * update days and decrement month\n   */\n  if (workingParts.day < 1) {\n    workingParts.month -= 1;\n  }\n  /**\n   * If moving to previous year, reset\n   * month to December and decrement year\n   */\n  if (workingParts.month < 1) {\n    workingParts.month = 12;\n    workingParts.year -= 1;\n  }\n  /**\n   * Determine how many days are in the current\n   * month\n   */\n  if (workingParts.day < 1) {\n    const daysInMonth = getNumDaysInMonth(workingParts.month, workingParts.year);\n    /**\n     * Take num days in month and add the\n     * number of underflow days. This number will\n     * be negative.\n     * Example: 1 week before Jan 2, 2021 is\n     * December 26, 2021 so:\n     * 2 - 7 = -5\n     * 31 + (-5) = 26\n     */\n    workingParts.day = daysInMonth + workingParts.day;\n  }\n  return workingParts;\n};\n/**\n * Given datetime parts, add\n * numDays to the date.\n * Returns a new DatetimeParts object\n * Currently can only go forward at most 1 month.\n */\nconst addDays = (refParts, numDays) => {\n  const { month, day, year } = refParts;\n  if (day === null) {\n    throw new Error('No day provided');\n  }\n  const workingParts = {\n    month,\n    day,\n    year\n  };\n  const daysInMonth = getNumDaysInMonth(month, year);\n  workingParts.day = day + numDays;\n  /**\n   * If wrapping to next month\n   * update days and increment month\n   */\n  if (workingParts.day > daysInMonth) {\n    workingParts.day -= daysInMonth;\n    workingParts.month += 1;\n  }\n  /**\n   * If moving to next year, reset\n   * month to January and increment year\n   */\n  if (workingParts.month > 12) {\n    workingParts.month = 1;\n    workingParts.year += 1;\n  }\n  return workingParts;\n};\n/**\n * Given DatetimeParts, generate the previous month.\n */\nconst getPreviousMonth = (refParts) => {\n  /**\n   * If current month is January, wrap backwards\n   *  to December of the previous year.\n   */\n  const month = (refParts.month === 1) ? 12 : refParts.month - 1;\n  const year = (refParts.month === 1) ? refParts.year - 1 : refParts.year;\n  const numDaysInMonth = getNumDaysInMonth(month, year);\n  const day = (numDaysInMonth < refParts.day) ? numDaysInMonth : refParts.day;\n  return { month, year, day };\n};\n/**\n * Given DatetimeParts, generate the next month.\n */\nconst getNextMonth = (refParts) => {\n  /**\n   * If current month is December, wrap forwards\n   *  to January of the next year.\n   */\n  const month = (refParts.month === 12) ? 1 : refParts.month + 1;\n  const year = (refParts.month === 12) ? refParts.year + 1 : refParts.year;\n  const numDaysInMonth = getNumDaysInMonth(month, year);\n  const day = (numDaysInMonth < refParts.day) ? numDaysInMonth : refParts.day;\n  return { month, year, day };\n};\nconst changeYear = (refParts, yearDelta) => {\n  const month = refParts.month;\n  const year = refParts.year + yearDelta;\n  const numDaysInMonth = getNumDaysInMonth(month, year);\n  const day = (numDaysInMonth < refParts.day) ? numDaysInMonth : refParts.day;\n  return { month, year, day };\n};\n/**\n * Given DatetimeParts, generate the previous year.\n */\nconst getPreviousYear = (refParts) => {\n  return changeYear(refParts, -1);\n};\n/**\n * Given DatetimeParts, generate the next year.\n */\nconst getNextYear = (refParts) => {\n  return changeYear(refParts, 1);\n};\n/**\n * If PM, then internal value should\n * be converted to 24-hr time.\n * Does not apply when public\n * values are already 24-hr time.\n */\nconst getInternalHourValue = (hour, use24Hour, ampm) => {\n  if (use24Hour) {\n    return hour;\n  }\n  return convert12HourTo24Hour(hour, ampm);\n};\n/**\n * Unless otherwise stated, all month values are\n * 1 indexed instead of the typical 0 index in JS Date.\n * Example:\n *   January = Month 0 when using JS Date\n *   January = Month 1 when using this datetime util\n */\n/**\n * Given the current datetime parts and a new AM/PM value\n * calculate what the hour should be in 24-hour time format.\n * Used when toggling the AM/PM segment since we store our hours\n * in 24-hour time format internally.\n */\nconst calculateHourFromAMPM = (currentParts, newAMPM) => {\n  const { ampm: currentAMPM, hour } = currentParts;\n  let newHour = hour;\n  /**\n   * If going from AM --> PM, need to update the\n   *\n   */\n  if (currentAMPM === 'am' && newAMPM === 'pm') {\n    newHour = convert12HourTo24Hour(newHour, 'pm');\n    /**\n     * If going from PM --> AM\n     */\n  }\n  else if (currentAMPM === 'pm' && newAMPM === 'am') {\n    newHour = Math.abs(newHour - 12);\n  }\n  return newHour;\n};\n\n/**\n * Returns the current date as\n * an ISO string in the user's\n * timezone.\n */\nconst getToday = () => {\n  /**\n   * Grab the current date object\n   * as well as the timezone offset\n   */\n  const date = new Date();\n  const tzOffset = date.getTimezoneOffset();\n  /**\n   * When converting to ISO string, everything is\n   * set to UTC. Since we want to show these dates\n   * relative to the user's timezone, we need to\n   * subtract the timezone offset from the date\n   * so that when `toISOString()` adds it back\n   * there was a net change of zero hours from the\n   * local date.\n   */\n  date.setHours(date.getHours() - (tzOffset / 60));\n  return date.toISOString();\n};\nconst minutes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59];\nconst hour12 = [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nconst hour23 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23];\n/**\n * Given a locale and a mode,\n * return an array with formatted days\n * of the week. iOS should display days\n * such as \"Mon\" or \"Tue\".\n * MD should display days such as \"M\"\n * or \"T\".\n */\nconst getDaysOfWeek = (locale, mode, firstDayOfWeek = 0) => {\n  /**\n   * Nov 1st, 2020 starts on a Sunday.\n   * ion-datetime assumes weeks start on Sunday,\n   * but is configurable via `firstDayOfWeek`.\n   */\n  const weekdayFormat = mode === 'ios' ? 'short' : 'narrow';\n  const intl = new Intl.DateTimeFormat(locale, { weekday: weekdayFormat });\n  const startDate = new Date('11/01/2020');\n  const daysOfWeek = [];\n  /**\n   * For each day of the week,\n   * get the day name.\n   */\n  for (let i = firstDayOfWeek; i < firstDayOfWeek + 7; i++) {\n    const currentDate = new Date(startDate);\n    currentDate.setDate(currentDate.getDate() + i);\n    daysOfWeek.push(intl.format(currentDate));\n  }\n  return daysOfWeek;\n};\n/**\n * Returns an array containing all of the\n * days in a month for a given year. Values are\n * aligned with a week calendar starting on\n * the firstDayOfWeek value (Sunday by default)\n * using null values.\n */\nconst getDaysOfMonth = (month, year, firstDayOfWeek) => {\n  const numDays = getNumDaysInMonth(month, year);\n  const firstOfMonth = new Date(`${month}/1/${year}`).getDay();\n  /**\n   * To get the first day of the month aligned on the correct\n   * day of the week, we need to determine how many \"filler\" days\n   * to generate. These filler days as empty/disabled buttons\n   * that fill the space of the days of the week before the first\n   * of the month.\n   *\n   * There are two cases here:\n   *\n   * 1. If firstOfMonth = 4, firstDayOfWeek = 0 then the offset\n   * is (4 - (0 + 1)) = 3. Since the offset loop goes from 0 to 3 inclusive,\n   * this will generate 4 filler days (0, 1, 2, 3), and then day of week 4 will have\n   * the first day of the month.\n   *\n   * 2. If firstOfMonth = 2, firstDayOfWeek = 4 then the offset\n   * is (6 - (4 - 2)) = 4. Since the offset loop goes from 0 to 4 inclusive,\n   * this will generate 5 filler days (0, 1, 2, 3, 4), and then day of week 5 will have\n   * the first day of the month.\n   */\n  const offset = firstOfMonth >= firstDayOfWeek ? firstOfMonth - (firstDayOfWeek + 1) : 6 - (firstDayOfWeek - firstOfMonth);\n  let days = [];\n  for (let i = 1; i <= numDays; i++) {\n    days.push({ day: i, dayOfWeek: (offset + i) % 7 });\n  }\n  for (let i = 0; i <= offset; i++) {\n    days = [\n      { day: null, dayOfWeek: null },\n      ...days\n    ];\n  }\n  return days;\n};\n/**\n * Given a local, reference datetime parts and option\n * max/min bound datetime parts, calculate the acceptable\n * hour and minute values according to the bounds and locale.\n */\nconst generateTime = (refParts, hourCycle = 'h12', minParts, maxParts, hourValues, minuteValues) => {\n  let processedHours = hourCycle === 'h23' ? hour23 : hour12;\n  let processedMinutes = minutes;\n  let isAMAllowed = true;\n  let isPMAllowed = true;\n  if (hourValues) {\n    processedHours = processedHours.filter(hour => hourValues.includes(hour));\n  }\n  if (minuteValues) {\n    processedMinutes = processedMinutes.filter(minute => minuteValues.includes(minute));\n  }\n  if (minParts) {\n    /**\n     * If ref day is the same as the\n     * minimum allowed day, filter hour/minute\n     * values according to min hour and minute.\n     */\n    if (isSameDay(refParts, minParts)) {\n      /**\n       * Users may not always set the hour/minute for\n       * min value (i.e. 2021-06-02) so we should allow\n       * all hours/minutes in that case.\n       */\n      if (minParts.hour !== undefined) {\n        processedHours = processedHours.filter(hour => {\n          const convertedHour = refParts.ampm === 'pm' ? (hour + 12) % 24 : hour;\n          return convertedHour >= minParts.hour;\n        });\n        isAMAllowed = minParts.hour < 13;\n      }\n      if (minParts.minute !== undefined) {\n        processedMinutes = processedMinutes.filter(minute => minute >= minParts.minute);\n      }\n      /**\n       * If ref day is before minimum\n       * day do not render any hours/minute values\n       */\n    }\n    else if (isBefore(refParts, minParts)) {\n      processedHours = [];\n      processedMinutes = [];\n      isAMAllowed = isPMAllowed = false;\n    }\n  }\n  if (maxParts) {\n    /**\n     * If ref day is the same as the\n     * maximum allowed day, filter hour/minute\n     * values according to max hour and minute.\n     */\n    if (isSameDay(refParts, maxParts)) {\n      /**\n       * Users may not always set the hour/minute for\n       * max value (i.e. 2021-06-02) so we should allow\n       * all hours/minutes in that case.\n       */\n      if (maxParts.hour !== undefined) {\n        processedHours = processedHours.filter(hour => {\n          const convertedHour = refParts.ampm === 'pm' ? (hour + 12) % 24 : hour;\n          return convertedHour <= maxParts.hour;\n        });\n        isPMAllowed = maxParts.hour >= 13;\n      }\n      if (maxParts.minute !== undefined) {\n        processedMinutes = processedMinutes.filter(minute => minute <= maxParts.minute);\n      }\n      /**\n       * If ref day is after minimum\n       * day do not render any hours/minute values\n       */\n    }\n    else if (isAfter(refParts, maxParts)) {\n      processedHours = [];\n      processedMinutes = [];\n      isAMAllowed = isPMAllowed = false;\n    }\n  }\n  return {\n    hours: processedHours,\n    minutes: processedMinutes,\n    am: isAMAllowed,\n    pm: isPMAllowed\n  };\n};\n/**\n * Given DatetimeParts, generate the previous,\n * current, and and next months.\n */\nconst generateMonths = (refParts) => {\n  return [\n    getPreviousMonth(refParts),\n    { month: refParts.month, year: refParts.year, day: refParts.day },\n    getNextMonth(refParts)\n  ];\n};\nconst getPickerMonths = (locale, refParts, minParts, maxParts, monthValues) => {\n  const { year } = refParts;\n  const months = [];\n  if (monthValues !== undefined) {\n    let processedMonths = monthValues;\n    if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.month) !== undefined) {\n      processedMonths = processedMonths.filter(month => month <= maxParts.month);\n    }\n    if ((minParts === null || minParts === void 0 ? void 0 : minParts.month) !== undefined) {\n      processedMonths = processedMonths.filter(month => month >= minParts.month);\n    }\n    processedMonths.forEach(processedMonth => {\n      const date = new Date(`${processedMonth}/1/${year}`);\n      const monthString = new Intl.DateTimeFormat(locale, { month: 'long' }).format(date);\n      months.push({ text: monthString, value: processedMonth });\n    });\n  }\n  else {\n    const maxMonth = maxParts && maxParts.year === year ? maxParts.month : 12;\n    const minMonth = minParts && minParts.year === year ? minParts.month : 1;\n    for (let i = minMonth; i <= maxMonth; i++) {\n      const date = new Date(`${i}/1/${year}`);\n      const monthString = new Intl.DateTimeFormat(locale, { month: 'long' }).format(date);\n      months.push({ text: monthString, value: i });\n    }\n  }\n  return months;\n};\nconst getCalendarYears = (refParts, minParts, maxParts, yearValues) => {\n  if (yearValues !== undefined) {\n    let processedYears = yearValues;\n    if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.year) !== undefined) {\n      processedYears = processedYears.filter(year => year <= maxParts.year);\n    }\n    if ((minParts === null || minParts === void 0 ? void 0 : minParts.year) !== undefined) {\n      processedYears = processedYears.filter(year => year >= minParts.year);\n    }\n    return processedYears;\n  }\n  else {\n    const { year } = refParts;\n    const maxYear = ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.year) || year);\n    const minYear = ((minParts === null || minParts === void 0 ? void 0 : minParts.year) || year - 100);\n    const years = [];\n    for (let i = maxYear; i >= minYear; i--) {\n      years.push(i);\n    }\n    return years;\n  }\n};\n\nconst get12HourTime = (hour) => {\n  return hour % 12 || 12;\n};\nconst getFormattedAMPM = (ampm) => {\n  if (ampm === undefined) {\n    return '';\n  }\n  return ampm.toUpperCase();\n};\nconst getFormattedTime = (refParts, use24Hour) => {\n  if (refParts.hour === undefined || refParts.minute === undefined) {\n    return 'Invalid Time';\n  }\n  const hour = use24Hour ? getFormattedHour(refParts.hour, use24Hour) : get12HourTime(refParts.hour);\n  const minute = addTimePadding(refParts.minute);\n  if (use24Hour) {\n    return `${hour}:${minute}`;\n  }\n  return `${hour}:${minute} ${getFormattedAMPM(refParts.ampm)}`;\n};\n/**\n * Adds padding to a time value so\n * that it is always 2 digits.\n */\nconst addTimePadding = (value) => {\n  const valueToString = value.toString();\n  if (valueToString.length > 1) {\n    return valueToString;\n  }\n  return `0${valueToString}`;\n};\n/**\n * Formats the hour value so that it\n * is always 2 digits. Only applies\n * if using 12 hour format.\n */\nconst getFormattedHour = (hour, use24Hour) => {\n  if (!use24Hour) {\n    return hour.toString();\n  }\n  return addTimePadding(hour);\n};\n/**\n * Generates an aria-label to be read by screen readers\n * given a local, a date, and whether or not that date is\n * today's date.\n */\nconst generateDayAriaLabel = (locale, today, refParts) => {\n  if (refParts.day === null) {\n    return null;\n  }\n  /**\n   * MM/DD/YYYY will return midnight in the user's timezone.\n   */\n  const date = new Date(`${refParts.month}/${refParts.day}/${refParts.year}`);\n  const labelString = new Intl.DateTimeFormat(locale, { weekday: 'long', month: 'long', day: 'numeric' }).format(date);\n  /**\n   * If date is today, prepend \"Today\" so screen readers indicate\n   * that the date is today.\n   */\n  return (today) ? `Today, ${labelString}` : labelString;\n};\n/**\n * Gets the day of the week, month, and day\n * Used for the header in MD mode.\n */\nconst getMonthAndDay = (locale, refParts) => {\n  const date = new Date(`${refParts.month}/${refParts.day}/${refParts.year}`);\n  return new Intl.DateTimeFormat(locale, { weekday: 'short', month: 'short', day: 'numeric' }).format(date);\n};\n/**\n * Given a locale and a date object,\n * return a formatted string that includes\n * the month name and full year.\n * Example: May 2021\n */\nconst getMonthAndYear = (locale, refParts) => {\n  const date = new Date(`${refParts.month}/${refParts.day}/${refParts.year}`);\n  return new Intl.DateTimeFormat(locale, { month: 'long', year: 'numeric' }).format(date);\n};\n\nconst ISO_8601_REGEXP = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\nconst TIME_REGEXP = /^((\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n/**\n * Use to convert a string of comma separated numbers or\n * an array of numbers, and clean up any user input\n */\nconst convertToArrayOfNumbers = (input) => {\n  if (input === undefined) {\n    return;\n  }\n  let processedInput = input;\n  if (typeof input === 'string') {\n    // convert the string to an array of strings\n    // auto remove any whitespace and [] characters\n    processedInput = input.replace(/\\[|\\]|\\s/g, '').split(',');\n  }\n  let values;\n  if (Array.isArray(processedInput)) {\n    // ensure each value is an actual number in the returned array\n    values = processedInput\n      .map((num) => parseInt(num, 10))\n      .filter(isFinite);\n  }\n  else {\n    values = [processedInput];\n  }\n  return values;\n};\n/**\n * Extracts date information\n * from a .calendar-day element\n * into DatetimeParts.\n */\nconst getPartsFromCalendarDay = (el) => {\n  return {\n    month: parseInt(el.getAttribute('data-month'), 10),\n    day: parseInt(el.getAttribute('data-day'), 10),\n    year: parseInt(el.getAttribute('data-year'), 10),\n    dayOfWeek: parseInt(el.getAttribute('data-day-of-week'), 10)\n  };\n};\n/**\n * Given an ISO-8601 string, format out the parts\n * We do not use the JS Date object here because\n * it adjusts the date for the current timezone.\n */\nconst parseDate = (val) => {\n  // manually parse IS0 cuz Date.parse cannot be trusted\n  // ISO 8601 format: 1994-12-15T13:47:20Z\n  let parse = null;\n  if (val != null && val !== '') {\n    // try parsing for just time first, HH:MM\n    parse = TIME_REGEXP.exec(val);\n    if (parse) {\n      // adjust the array so it fits nicely with the datetime parse\n      parse.unshift(undefined, undefined);\n      parse[2] = parse[3] = undefined;\n    }\n    else {\n      // try parsing for full ISO datetime\n      parse = ISO_8601_REGEXP.exec(val);\n    }\n  }\n  if (parse === null) {\n    // wasn't able to parse the ISO datetime\n    return undefined;\n  }\n  // ensure all the parse values exist with at least 0\n  for (let i = 1; i < 8; i++) {\n    parse[i] = parse[i] !== undefined ? parseInt(parse[i], 10) : undefined;\n  }\n  let tzOffset = 0;\n  if (parse[9] && parse[10]) {\n    // hours\n    tzOffset = parseInt(parse[10], 10) * 60;\n    if (parse[11]) {\n      // minutes\n      tzOffset += parseInt(parse[11], 10);\n    }\n    if (parse[9] === '-') {\n      // + or -\n      tzOffset *= -1;\n    }\n  }\n  return {\n    year: parse[1],\n    month: parse[2],\n    day: parse[3],\n    hour: parse[4],\n    minute: parse[5],\n    second: parse[6],\n    millisecond: parse[7],\n    tzOffset,\n  };\n};\n\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date, and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  const isActive = isSameDay(refParts, activeParts);\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts)\n  };\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;max-width:350px;height:auto}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;left:50%;top:50%;position:absolute;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host-context([dir=rtl]){left:unset;right:unset;right:50%}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time),:host(.datetime-presentation-time-date),:host(.datetime-presentation-date){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color);font-size:14px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;max-width:350px;height:auto}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;left:50%;top:50%;position:absolute;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host-context([dir=rtl]){left:unset;right:unset;right:50%}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\n\nlet Datetime = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.overlayIsPresenting = false;\n    this.showMonthAndYear = false;\n    this.activeParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    this.todayParts = parseDate(getToday());\n    this.isPresented = false;\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. On `ios` mode this will include the\n     * slotted title, and on `md` mode this will include\n     * the slotted title and the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = (parts) => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts) => {\n      this.activeParts = Object.assign({}, parts);\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const { calendarBodyRef } = this;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = (ev) => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) ||\n          !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      this.calendarBodyRef.addEventListener('keydown', (ev) => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = (currentMonth) => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const { day } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      if (this.min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      const { month, day, year, hour, minute } = parseDate(this.min);\n      this.minParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      };\n    };\n    this.processMaxParts = () => {\n      if (this.max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      const { month, day, year, hour, minute } = parseDate(this.max);\n      this.maxParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      };\n    };\n    this.initializeCalendarIOListeners = () => {\n      const { calendarBodyRef } = this;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const mode = getIonMode(this);\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have IntersectionObservers\n       * on the previous and next month elements to append/prepend\n       * new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      /**\n       * Before setting up the IntersectionObserver,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth;\n        let endIO;\n        let startIO;\n        const ioCallback = (callbackType, entries) => {\n          const refIO = (callbackType === 'start') ? startIO : endIO;\n          const refMonth = (callbackType === 'start') ? startMonth : endMonth;\n          const refMonthFn = (callbackType === 'start') ? getPreviousMonth : getNextMonth;\n          /**\n           * If the month is not fully in view, do not do anything\n           */\n          const ev = entries[0];\n          if (!ev.isIntersecting) {\n            return;\n          }\n          /**\n           * When presenting an inline overlay,\n           * subsequent presentations will cause\n           * the IO to fire again (since the overlay\n           * is now visible and therefore the calendar\n           * months are intersecting).\n           */\n          if (this.overlayIsPresenting) {\n            this.overlayIsPresenting = false;\n            return;\n          }\n          /**\n           * On iOS, we need to set pointer-events: none\n           * when the user is almost done with the gesture\n           * so that they cannot quickly swipe while\n           * the scrollable container is snapping.\n           * Updating the container while snapping\n           * causes WebKit to snap incorrectly.\n           */\n          if (mode === 'ios') {\n            const ratio = ev.intersectionRatio;\n            const shouldDisable = Math.abs(ratio - 0.7) <= 0.1;\n            if (shouldDisable) {\n              calendarBodyRef.style.setProperty('pointer-events', 'none');\n              return;\n            }\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Remove the IO temporarily\n           * otherwise you can sometimes get duplicate\n           * events when rubber banding.\n           */\n          if (refIO === undefined) {\n            return;\n          }\n          refIO.disconnect();\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            const { month, year, day } = refMonthFn(this.workingParts);\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth;\n            calendarBodyRef.style.removeProperty('overflow');\n            calendarBodyRef.style.removeProperty('pointer-events');\n            /**\n             * Now that state has been updated\n             * and the correct month is in view,\n             * we can resume the IO.\n             */\n            // tslint:disable-next-line\n            if (refIO === undefined) {\n              return;\n            }\n            refIO.observe(refMonth);\n          });\n        };\n        /**\n         * Listen on the first month to\n         * prepend a new month and on the last\n         * month to append a new month.\n         * The 0.7 threshold is required on ios\n         * so that we can remove pointer-events\n         * when adding new months.\n         * Adding to a scroll snapping container\n         * while the container is snapping does not\n         * completely work as expected in WebKit.\n         * Adding pointer-events: none allows us to\n         * avoid these issues.\n         *\n         * This should be fine on Chromium, but\n         * when you set pointer-events: none\n         * it applies to active gestures which is not\n         * something WebKit does.\n         */\n        endIO = new IntersectionObserver(ev => ioCallback('end', ev), {\n          threshold: mode === 'ios' ? [0.7, 1] : 1,\n          root: calendarBodyRef\n        });\n        endIO.observe(endMonth);\n        startIO = new IntersectionObserver(ev => ioCallback('start', ev), {\n          threshold: mode === 'ios' ? [0.7, 1] : 1,\n          root: calendarBodyRef\n        });\n        startIO.observe(startMonth);\n        this.destroyCalendarIO = () => {\n          endIO === null || endIO === void 0 ? void 0 : endIO.disconnect();\n          startIO === null || startIO === void 0 ? void 0 : startIO.disconnect();\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyListeners = () => {\n      const { destroyCalendarIO, destroyKeyboardMO } = this;\n      if (destroyCalendarIO !== undefined) {\n        destroyCalendarIO();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    /**\n     * When doing subsequent presentations of an inline\n     * overlay, the IO callback will fire again causing\n     * the calendar to go back one month. We need to listen\n     * for the presentation of the overlay so we can properly\n     * cancel that IO callback.\n     */\n    this.initializeOverlayListener = () => {\n      const overlay = this.el.closest('ion-popover, ion-modal');\n      if (overlay === null) {\n        return;\n      }\n      overlay.addEventListener('willPresent', () => {\n        this.overlayIsPresenting = true;\n      });\n    };\n    this.processValue = (value) => {\n      const valueToProcess = value || getToday();\n      const { month, day, year, hour, minute, tzOffset } = parseDate(valueToProcess);\n      this.workingParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm: hour >= 12 ? 'pm' : 'am'\n      };\n      this.activePartsClone = this.activeParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm: hour >= 12 ? 'pm' : 'am'\n      };\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null && this.value !== '';\n    };\n    this.nextMonth = () => {\n      const { calendarBodyRef } = this;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: nextMonth.offsetWidth * 2,\n        behavior: 'smooth'\n      });\n    };\n    this.prevMonth = () => {\n      const { calendarBodyRef } = this;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    if (this.hasValue()) {\n      /**\n       * Clones the value of the `activeParts` to the private clone, to update\n       * the date display on the current render cycle without causing another render.\n       *\n       * This allows us to update the current value's date/time display without\n       * refocusing or shifting the user's display (leaves the user in place).\n       */\n      const { month, day, year, hour, minute } = parseDate(this.value);\n      this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), { month,\n        day,\n        year,\n        hour,\n        minute });\n    }\n    this.emitStyle();\n    this.ionChange.emit({\n      value: this.value\n    });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    /**\n     * Prevent convertDataToISO from doing any\n     * kind of transformation based on timezone\n     * This cancels out any change it attempts to make\n     *\n     * Important: Take the timezone offset based on\n     * the date that is currently selected, otherwise\n     * there can be 1 hr difference when dealing w/ DST\n     */\n    const date = new Date(convertDataToISO(this.workingParts));\n    this.workingParts.tzOffset = date.getTimezoneOffset() * -1;\n    this.value = convertDataToISO(this.workingParts);\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    let visibleIO;\n    const visibleCallback = (entries) => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeCalendarIOListeners();\n      this.initializeKeyboardListeners();\n      this.initializeOverlayListener();\n      /**\n       * TODO: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01 });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    let hiddenIO;\n    const hiddenCallback = (entries) => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyListeners();\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0 });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n    root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n  }\n  componentWillLoad() {\n    this.processValue(this.value);\n    this.processMinParts();\n    this.processMaxParts();\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'interactive': true,\n      'datetime': true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  renderFooter() {\n    const { showDefaultButtons, showClearButton } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton\n      } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true) }, this.cancelText), h(\"div\", null, showClearButton && h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick() }, this.clearText), showDefaultButtons && h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true) }, this.doneText))))))));\n  }\n  renderYearView() {\n    const { presentation, workingParts } = this;\n    const calendarYears = getCalendarYears(this.todayParts, this.minParts, this.maxParts, this.parsedYearValues);\n    const showMonth = presentation !== 'year';\n    const showYear = presentation !== 'month';\n    const months = getPickerMonths(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues);\n    const years = calendarYears.map(year => {\n      return {\n        text: `${year}`,\n        value: year\n      };\n    });\n    return (h(\"div\", { class: \"datetime-year\" }, h(\"div\", { class: \"datetime-year-body\" }, h(\"ion-picker-internal\", null, showMonth &&\n      h(\"ion-picker-column-internal\", { color: this.color, items: months, value: workingParts.month, onIonChange: (ev) => {\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month: ev.detail.value }));\n          if (presentation === 'month' || presentation === 'month-year') {\n            this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { month: ev.detail.value }));\n          }\n          ev.stopPropagation();\n        } }), showYear &&\n      h(\"ion-picker-column-internal\", { color: this.color, items: years, value: workingParts.year, onIonChange: (ev) => {\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { year: ev.detail.value }));\n          if (presentation === 'year' || presentation === 'month-year') {\n            this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { year: ev.detail.value }));\n          }\n          ev.stopPropagation();\n        } })))));\n  }\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { button: true, detail: false, lines: \"none\", onClick: () => this.toggleMonthAndYearView() }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), \" \", h(\"ion-icon\", { icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { onClick: () => this.prevMonth() }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronBack, lazy: false })), h(\"ion-button\", { onClick: () => this.nextMonth() }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronForward, lazy: false }))))), h(\"div\", { class: \"calendar-days-of-week\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map(d => {\n      return h(\"div\", { class: \"day-of-week\" }, d);\n    }))));\n  }\n  renderMonth(month, year) {\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isMonthDisabled = !yearAllowed || !monthAllowed;\n    return (h(\"div\", { class: \"calendar-month\" }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const { day, dayOfWeek } = dateObject;\n      const referenceParts = { month, day, year };\n      const { isActive, isToday, ariaLabel, ariaSelected, disabled } = getCalendarDayState(this.locale, referenceParts, this.activePartsClone, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      return (h(\"button\", { tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isMonthDisabled || disabled, class: {\n          'calendar-day-padding': day === null,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-today': isToday\n        }, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n          if (day === null) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n            day,\n            year }));\n          this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { month,\n            day,\n            year }));\n        } }, day));\n    }))));\n  }\n  renderCalendarBody() {\n    return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: el => this.calendarBodyRef = el, tabindex: \"0\" }, generateMonths(this.workingParts).map(({ month, year }) => {\n      return this.renderMonth(month, year);\n    })));\n  }\n  renderCalendar(mode) {\n    return (h(\"div\", { class: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return (h(\"slot\", { name: \"time-label\" }, \"Time\"));\n  }\n  renderTimePicker(hoursItems, minutesItems, ampmItems, use24Hour) {\n    const { color, activePartsClone, workingParts } = this;\n    return (h(\"ion-picker-internal\", null, h(\"ion-picker-column-internal\", { color: color, value: activePartsClone.hour, items: hoursItems, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { hour: ev.detail.value }));\n        ev.stopPropagation();\n      } }), h(\"ion-picker-column-internal\", { color: color, value: activePartsClone.minute, items: minutesItems, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { minute: ev.detail.value }));\n        ev.stopPropagation();\n      } }), !use24Hour && h(\"ion-picker-column-internal\", { color: color, value: activePartsClone.ampm, items: ampmItems, onIonChange: (ev) => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { ampm: ev.detail.value, hour }));\n        ev.stopPropagation();\n      } })));\n  }\n  renderTimeOverlay(hoursItems, minutesItems, ampmItems, use24Hour) {\n    return [\n      h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n      h(\"button\", { class: {\n          'time-body': true,\n          'time-body-active': this.isTimePopoverOpen\n        }, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", onClick: async (ev) => {\n          const { popoverRef } = this;\n          if (popoverRef) {\n            this.isTimePopoverOpen = true;\n            popoverRef.present(ev);\n            await popoverRef.onWillDismiss();\n            this.isTimePopoverOpen = false;\n          }\n        } }, getFormattedTime(this.activePartsClone, use24Hour)),\n      h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, style: {\n          '--offset-y': '-10px'\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true, ref: el => this.popoverRef = el }, this.renderTimePicker(hoursItems, minutesItems, ampmItems, use24Hour))\n    ];\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const { workingParts, presentation } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    const use24Hour = is24Hour(this.locale, this.hourCycle);\n    const { hours, minutes, am, pm } = generateTime(this.workingParts, use24Hour ? 'h23' : 'h12', this.minParts, this.maxParts, this.parsedHourValues, this.parsedMinuteValues);\n    const hoursItems = hours.map(hour => {\n      return {\n        text: getFormattedHour(hour, use24Hour),\n        value: getInternalHourValue(hour, use24Hour, workingParts.ampm)\n      };\n    });\n    const minutesItems = minutes.map(minute => {\n      return {\n        text: addTimePadding(minute),\n        value: minute\n      };\n    });\n    const ampmItems = [];\n    if (am) {\n      ampmItems.push({\n        text: 'AM',\n        value: 'am'\n      });\n    }\n    if (pm) {\n      ampmItems.push({\n        text: 'PM',\n        value: 'pm'\n      });\n    }\n    return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderTimePicker(hoursItems, minutesItems, ampmItems, use24Hour) : this.renderTimeOverlay(hoursItems, minutesItems, ampmItems, use24Hour)));\n  }\n  renderCalendarViewHeader(mode) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), mode === 'md' && h(\"div\", { class: \"datetime-selected-date\" }, getMonthAndDay(this.locale, this.activeParts))));\n  }\n  renderDatetime(mode) {\n    const { presentation } = this;\n    switch (presentation) {\n      case 'date-time':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderYearView(),\n          this.renderTime(),\n          this.renderFooter()\n        ];\n      case 'time-date':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderTime(),\n          this.renderCalendar(mode),\n          this.renderYearView(),\n          this.renderFooter()\n        ];\n      case 'time':\n        return [\n          this.renderTime(),\n          this.renderFooter()\n        ];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [\n          this.renderYearView(),\n          this.renderFooter()\n        ];\n      default:\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderYearView(),\n          this.renderFooter()\n        ];\n    }\n  }\n  render() {\n    const { name, value, disabled, el, color, isPresented, readonly, showMonthAndYear, presentation, size } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    renderHiddenInput(true, el, name, value, disabled);\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true\n      })) }, this.renderDatetime(mode)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"yearValues\": [\"yearValuesChanged\"],\n    \"monthValues\": [\"monthValuesChanged\"],\n    \"dayValues\": [\"dayValuesChanged\"],\n    \"hourValues\": [\"hourValuesChanged\"],\n    \"minuteValues\": [\"minuteValuesChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet datetimeIds = 0;\nDatetime.style = {\n  ios: datetimeIosCss,\n  md: datetimeMdCss\n};\n\nexport { Datetime as ion_datetime };\n"],"sourceRoot":"webpack:///","file":"795.8cbd2c245bf818c5.js"}