{"version":3,"file":"199.3403b66f8bd8a576.js","mappings":"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","names":["Tab","constructor","hostRef","registerInstance","this","loaded","active","componentWillLoad","e","setActive","prepareLazyLoaded","changeActive","isActive","component","attachComponent","delegate","el","console","error","Promise","resolve","undefined","render","tab","h","Host","role","t","class","getElement","watchers","style","Tabs","ionNavWillLoad","createEvent","ionTabsWillChange","ionTabsDidChange","transitioning","useRouter","onTabClicked","ev","href","detail","router","document","querySelector","push","select","closest","tabs","length","emit","componentWillRender","tabBar","selectedTab","getTab","shouldSwitch","notifyRouter","tabSwitch","getSelected","setRouteId","id","changed","element","markVisible","getRouteId","_a","tabId","reject","leavingTab","navChanged","Array","from","querySelectorAll","onIonTabButtonClick","name","tabEl","find"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-88bdeaae.js';\nimport { a as attachComponent } from './framework-delegate-ce4f806c.js';\nimport './helpers-4d272360.js';\n\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\n\nconst Tab = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.loaded = false;\n    /** @internal */\n    this.active = false;\n  }\n  async componentWillLoad() {\n    if (this.active) {\n      await this.setActive();\n    }\n  }\n  /** Set the active component for the tab */\n  async setActive() {\n    await this.prepareLazyLoaded();\n    this.active = true;\n  }\n  changeActive(isActive) {\n    if (isActive) {\n      this.prepareLazyLoaded();\n    }\n  }\n  prepareLazyLoaded() {\n    if (!this.loaded && this.component != null) {\n      this.loaded = true;\n      try {\n        return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n      }\n      catch (e) {\n        console.error(e);\n      }\n    }\n    return Promise.resolve(undefined);\n  }\n  render() {\n    const { tab, active, component } = this;\n    return (h(Host, { role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\n        'ion-page': component === undefined,\n        'tab-hidden': !active,\n      } }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"active\": [\"changeActive\"]\n  }; }\n};\nTab.style = tabCss;\n\nconst tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\n\nconst Tabs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n    this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n    this.transitioning = false;\n    /** @internal */\n    this.useRouter = false;\n    this.onTabClicked = (ev) => {\n      const { href, tab } = ev.detail;\n      if (this.useRouter && href !== undefined) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n          router.push(href);\n        }\n      }\n      else {\n        this.select(tab);\n      }\n    };\n  }\n  async componentWillLoad() {\n    if (!this.useRouter) {\n      this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n    }\n    if (!this.useRouter) {\n      const tabs = this.tabs;\n      if (tabs.length > 0) {\n        await this.select(tabs[0]);\n      }\n    }\n    this.ionNavWillLoad.emit();\n  }\n  componentWillRender() {\n    const tabBar = this.el.querySelector('ion-tab-bar');\n    if (tabBar) {\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  }\n  /**\n   * Select a tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async select(tab) {\n    const selectedTab = getTab(this.tabs, tab);\n    if (!this.shouldSwitch(selectedTab)) {\n      return false;\n    }\n    await this.setActive(selectedTab);\n    await this.notifyRouter();\n    this.tabSwitch();\n    return true;\n  }\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async getTab(tab) {\n    return getTab(this.tabs, tab);\n  }\n  /**\n   * Get the currently selected tab.\n   */\n  getSelected() {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  }\n  /** @internal */\n  async setRouteId(id) {\n    const selectedTab = getTab(this.tabs, id);\n    if (!this.shouldSwitch(selectedTab)) {\n      return { changed: false, element: this.selectedTab };\n    }\n    await this.setActive(selectedTab);\n    return {\n      changed: true,\n      element: this.selectedTab,\n      markVisible: () => this.tabSwitch(),\n    };\n  }\n  /** @internal */\n  async getRouteId() {\n    var _a;\n    const tabId = (_a = this.selectedTab) === null || _a === void 0 ? void 0 : _a.tab;\n    return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n  }\n  setActive(selectedTab) {\n    if (this.transitioning) {\n      return Promise.reject('transitioning already happening');\n    }\n    this.transitioning = true;\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n    selectedTab.active = true;\n    return Promise.resolve();\n  }\n  tabSwitch() {\n    const selectedTab = this.selectedTab;\n    const leavingTab = this.leavingTab;\n    this.leavingTab = undefined;\n    this.transitioning = false;\n    if (!selectedTab) {\n      return;\n    }\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n      this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n    }\n  }\n  notifyRouter() {\n    if (this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        return router.navChanged('forward');\n      }\n    }\n    return Promise.resolve(false);\n  }\n  shouldSwitch(selectedTab) {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n  }\n  get tabs() {\n    return Array.from(this.el.querySelectorAll('ion-tab'));\n  }\n  render() {\n    return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n  }\n  get el() { return getElement(this); }\n};\nconst getTab = (tabs, tab) => {\n  const tabEl = typeof tab === 'string' ? tabs.find((t) => t.tab === tab) : tab;\n  if (!tabEl) {\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n  return tabEl;\n};\nTabs.style = tabsCss;\n\nexport { Tab as ion_tab, Tabs as ion_tabs };\n"]}