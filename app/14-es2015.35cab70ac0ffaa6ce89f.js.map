{"version":3,"sources":["webpack:///src/app/page/settings/settings.page.html","webpack:///src/app/page/settings/settings-routing.module.ts","webpack:///src/app/page/settings/settings.page.ts","webpack:///src/app/page/settings/settings.module.ts"],"names":["routes","path","component","SettingsPage","modalController","kvsService","clipboardService","this","createFormGroup","modal","create","componentProps","url","present","kvs","volume","formGroup","get","value","showStatistics","clipboardIntegration","showHelp","SettingsPageRoutingModule","forChild","SettingsPageModule"],"mappings":"wSAgCI,qBACE,oBAAW,gCAAqB,OAChC,wBACF,QC9BJ,MAAMA,EAAiB,CACnB,CACIC,KAAM,GACNC,UCKF,M,MAAOC,EACT,YACYC,EACAC,EACDC,GAFC,KAAAF,kBACA,KAAAC,aACD,KAAAC,mBAGX,WACIC,KAAKC,kBAGH,W,kDACF,MAAMC,QAAcF,KAAKH,gBAAgBM,OAAO,CAC5CR,UAAW,IACXS,eAAgB,CACZC,IAAK,kCAGPH,EAAMI,YAGhB,mB,MACIN,KAAKF,WAAWS,IAAIC,OAASR,KAAKS,UAAUC,IAAI,UAAWC,MAC3DX,KAAKF,WAAWS,IAAIK,eAAiBZ,KAAKS,UAAUC,IAAI,kBAAmBC,MAC3EX,KAAKF,WAAWS,IAAIM,qBAAiE,QAA7C,EAAGb,KAAKS,UAAUC,IAAI,+BAAuB,eAAEC,MAGnF,kBACJX,KAAKS,UAAY,IAAI,IAAU,CAC3BD,OAAQ,IAAI,IAAYR,KAAKF,WAAWS,IAAIC,QAC5CI,eAAgB,IAAI,IAAYZ,KAAKF,WAAWS,IAAIK,gBACpDC,qBAAsB,IAAI,IAAYb,KAAKF,WAAWS,IAAIM,yB,6CA/BzDjB,GAAY,gC,uBAAZA,EAAY,kZFbzB,uBACE,sBACE,oBAAW,mBAAQ,OAEnB,wBACE,uBAAY,+BAAS,EAAAkB,aACnB,qBACF,OAEA,yBACF,OACF,OACF,OAEA,sBACE,uBACE,uBACE,uBAAwB,oBAAQ,OAClC,OACF,OAEA,kBACE,sBACE,qBAAW,kBAAM,OACjB,uBACF,OAEA,sBACE,qBAAW,2BAAe,OAC1B,wBACF,OAEA,6BAIF,OAEF,Q,MAtCY,uBAqBJ,uCAWqB,wD,8GEnBvB,KDGC,IAAD,Q,MAAOC,G,6CAAAA,I,uBAAAA,I,2BAHA,CAAC,IAAaC,SAASvB,IACtB,O,GAER,G,gBEKC,IAAD,Q,MAAOwB,G,6CAAAA,I,uBAAAA,I,2BAXA,CACL,IACA,IACA,IACA,EACA,IACA,IACA,Q,GAIF","file":"x","sourcesContent":["<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Settings</ion-title>\n\n    <ion-buttons slot=\"secondary\">\n      <ion-button (click)=\"showHelp()\">\n        <ion-icon name=\"help-outline\"></ion-icon>\n      </ion-button>\n\n      <app-pwa-prompt></app-pwa-prompt>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Settings</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <form [formGroup]=\"formGroup\">\n    <ion-item lines=\"inset\">\n      <ion-label>Volume</ion-label>\n      <ion-range min=\"0\" max=\"1\" step=\"0.1\" formControlName=\"volume\"></ion-range>\n    </ion-item>\n\n    <ion-item lines=\"inset\">\n      <ion-label>Show statistics</ion-label>\n      <ion-toggle formControlName=\"showStatistics\"></ion-toggle>\n    </ion-item>\n\n    <ion-item lines=\"inset\" *ngIf=\"clipboardService.isSupported()\">\n      <ion-label>Clipboard integration</ion-label>\n      <ion-toggle formControlName=\"clipboardIntegration\"></ion-toggle>\n    </ion-item>\n  </form>\n\n</ion-content>\n","import { RouterModule, Routes } from '@angular/router';\n\nimport { NgModule } from '@angular/core';\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsPage,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { ClipboardService } from './../../service/clipboard.service';\nimport { HelpComponent } from 'src/app/component/help/help.component';\nimport { KvsService } from './../../service/kvs.service';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.page.html',\n    styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n    constructor(\n        private modalController: ModalController,\n        private kvsService: KvsService,\n        public clipboardService: ClipboardService\n    ) {}\n\n    ngOnInit(): void {\n        this.createFormGroup();\n    }\n\n    async showHelp(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: HelpComponent,\n            componentProps: {\n                url: 'assets/doc/settings.md',\n            },\n        });\n        await modal.present();\n    }\n\n    ionViewWillLeave(): void {\n        this.kvsService.kvs.volume = this.formGroup.get('volume')!.value;\n        this.kvsService.kvs.showStatistics = this.formGroup.get('showStatistics')!.value;\n        this.kvsService.kvs.clipboardIntegration = this.formGroup.get('clipboardIntegration')?.value;\n    }\n\n    private createFormGroup() {\n        this.formGroup = new FormGroup({\n            volume: new FormControl(this.kvsService.kvs.volume),\n            showStatistics: new FormControl(this.kvsService.kvs.showStatistics),\n            clipboardIntegration: new FormControl(this.kvsService.kvs.clipboardIntegration),\n        });\n    }\n\n    formGroup!: FormGroup;\n}\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { SettingsPage } from './settings.page';\nimport { SettingsPageRoutingModule } from './settings-routing.module';\nimport { SharedComponentModule } from './../../component/shared-component.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SettingsPageRoutingModule,\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    declarations: [SettingsPage],\n})\nexport class SettingsPageModule {}\n"]}