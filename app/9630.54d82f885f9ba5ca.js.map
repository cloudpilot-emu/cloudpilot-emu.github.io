{"version":3,"file":"9630.54d82f885f9ba5ca.js","mappings":"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","names":["win","window","undefined","document","animationPrefix","convertCamelCaseToHypen","str","replace","toLowerCase","getAnimationPrefix","el","style","animationName","webkitAnimationName","setStyleProperty","element","propertyName","value","prefix","startsWith","setProperty","removeStyleProperty","removeProperty","keyframeIds","addClassToArray","classes","className","classNameToAppend","Array","isArray","createAnimation","animationId","_delay","_duration","_easing","_iterations","_fill","_direction","parentAnimation","cssAnimationsTimerFallback","forceDirectionValue","forceDurationValue","forceDelayValue","keyframeName","ani","_keyframes","beforeAddClasses","beforeRemoveClasses","initialized","beforeStylesValue","afterAddClasses","afterRemoveClasses","afterStylesValue","numAnimationsRunning","shouldForceLinearEasing","shouldForceSyncPlayback","willComplete","finished","shouldCalculateNumAnimations","paused","id","onFinishCallbacks","onFinishOneTimeCallbacks","onStopOneTimeCallbacks","elements","childAnimations","stylesheets","_beforeAddReadFunctions","_beforeAddWriteFunctions","_afterAddReadFunctions","_afterAddWriteFunctions","webAnimations","supportsAnimationEffect","AnimationEffect","supportsWebAnimations","Element","prototype","animate","getWebAnimations","clearCallback","callbackToRemove","callbackObjects","index","findIndex","callbackObject","c","splice","onFinish","callback","opts","oneTimeCallback","push","o","cleanUpElements","forEach","animation","cancel","length","elementsArray","slice","raf","cleanUpStyleSheets","stylesheet","parentNode","removeChild","getFill","getDirection","getEasing","getDuration","getIterations","getDelay","animationFinish","afterAnimation","clearCSSAnimationsTimeout","currentStep","addClasses","removeClasses","styles","elementClassList","classList","add","remove","property","hasOwnProperty","onFinishCallback","initializeCSSAnimation","toggleAnimationName","processedKeyframes","keyframes","keyframe","key","newKey","processKeyframes","keyframeRules","generateKeyframeRules","map","offset","frameString","join","indexOf","generateKeyframeName","createKeyframeStylesheet","_a","styleContainer","rootNode","getRootNode","head","getStyleContainer","keyframePrefix","existingStylesheet","querySelector","ownerDocument","createElement","textContent","appendChild","iterationsCount","Infinity","toString","initializeAnimation","beforeAnimation","delay","duration","easing","iterations","fill","direction","pause","onfinish","setAnimationStep","step","Math","min","max","currentTime","effect","getComputedTiming","animationDuration","updateWebAnimation","updateTiming","updateCSSAnimation","update","deep","pauseAnimation","onAnimationEndFallback","clearTimeout","play","Promise","resolve","sync","onStopCallback","onStop","playCSSAnimations","animationDelay","animationIterations","isFinite","setTimeout","animationEnd","unRegTrans","passive","onTransitionEnd","ev","target","addEventListener","removeEventListener","unregister","from","firstFrame","n","to","lastFrame","fromTo","fromValue","toValue","parent","stop","destroy","clearStyleSheets","childAnimation","cleanUp","keyframeValues","different","keyframeEffect","setKeyframes","newEffect","KeyframeEffect","getTiming","updateKeyframes","addAnimation","animationToAdd","addElement","nodeType","i","console","error","animationFill","animationDirection","animationEasing","getKeyframes","afterAddRead","readFn","afterAddWrite","writeFn","afterClearStyles","propertyNames","afterStyles","afterRemoveClass","afterAddClass","beforeAddRead","beforeAddWrite","beforeClearStyles","beforeStyles","beforeRemoveClass","beforeAddClass","isRunning","progressStart","forceLinearEasing","progressStep","progressEnd","playTo","dur"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/components/index5.js","./node_modules/@ionic/core/components/animation.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst win = typeof window !== 'undefined' ? window : undefined;\nconst doc = typeof document !== 'undefined' ? document : undefined;\n\nexport { doc as d, win as w };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index5.js';\nimport { r as raf } from './helpers.js';\n\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = (keyframes) => {\n    keyframes.forEach((keyframe) => {\n        for (const key in keyframe) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (keyframe.hasOwnProperty(key)) {\n                const value = keyframe[key];\n                if (key === 'easing') {\n                    const newKey = 'animation-timing-function';\n                    keyframe[newKey] = value;\n                    delete keyframe[key];\n                }\n                else {\n                    const newKey = convertCamelCaseToHypen(key);\n                    if (newKey !== key) {\n                        keyframe[newKey] = value;\n                        delete keyframe[key];\n                    }\n                }\n            }\n        }\n    });\n    return keyframes;\n};\nconst convertCamelCaseToHypen = (str) => {\n    return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = (el) => {\n    if (animationPrefix === undefined) {\n        const supportsUnprefixed = el.style.animationName !== undefined;\n        const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n        animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n    }\n    return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n    const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n    element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n    const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n    element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n    let unRegTrans;\n    const opts = { passive: true };\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n        el.addEventListener('animationend', onTransitionEnd, opts);\n        unRegTrans = () => {\n            el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n            el.removeEventListener('animationend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\n// TODO(FW-2832): type\nconst generateKeyframeRules = (keyframes = []) => {\n    return keyframes\n        .map((keyframe) => {\n        const offset = keyframe.offset;\n        const frameString = [];\n        for (const property in keyframe) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n                frameString.push(`${property}: ${keyframe[property]};`);\n            }\n        }\n        return `${offset * 100}% { ${frameString.join(' ')} }`;\n    })\n        .join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n    let index = keyframeIds.indexOf(keyframeRules);\n    if (index < 0) {\n        index = keyframeIds.push(keyframeRules) - 1;\n    }\n    return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n    // getRootNode is not always available in SSR environments.\n    // TODO(FW-2832): types\n    const rootNode = element.getRootNode !== undefined ? element.getRootNode() : element;\n    return rootNode.head || rootNode;\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n    var _a;\n    const styleContainer = getStyleContainer(element);\n    const keyframePrefix = getAnimationPrefix(element);\n    const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n    if (existingStylesheet) {\n        return existingStylesheet;\n    }\n    const stylesheet = ((_a = element.ownerDocument) !== null && _a !== void 0 ? _a : document).createElement('style');\n    stylesheet.id = keyframeName;\n    stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n    styleContainer.appendChild(stylesheet);\n    return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n    if (className !== undefined) {\n        const classNameToAppend = Array.isArray(className) ? className : [className];\n        return [...classes, ...classNameToAppend];\n    }\n    return classes;\n};\n\nconst createAnimation = (animationId) => {\n    let _delay;\n    let _duration;\n    let _easing;\n    let _iterations;\n    let _fill;\n    let _direction;\n    let _keyframes = [];\n    let beforeAddClasses = [];\n    let beforeRemoveClasses = [];\n    let initialized = false;\n    let parentAnimation;\n    let beforeStylesValue = {};\n    let afterAddClasses = [];\n    let afterRemoveClasses = [];\n    let afterStylesValue = {};\n    let numAnimationsRunning = 0;\n    let shouldForceLinearEasing = false;\n    let shouldForceSyncPlayback = false;\n    let cssAnimationsTimerFallback;\n    let forceDirectionValue;\n    let forceDurationValue;\n    let forceDelayValue;\n    let willComplete = true;\n    let finished = false;\n    let shouldCalculateNumAnimations = true;\n    let keyframeName;\n    let ani;\n    let paused = false;\n    const id = animationId;\n    const onFinishCallbacks = [];\n    const onFinishOneTimeCallbacks = [];\n    const onStopOneTimeCallbacks = [];\n    const elements = [];\n    const childAnimations = [];\n    const stylesheets = [];\n    const _beforeAddReadFunctions = [];\n    const _beforeAddWriteFunctions = [];\n    const _afterAddReadFunctions = [];\n    const _afterAddWriteFunctions = [];\n    const webAnimations = [];\n    const supportsAnimationEffect = typeof AnimationEffect === 'function' ||\n        (win !== undefined && typeof win.AnimationEffect === 'function');\n    const supportsWebAnimations = typeof Element === 'function' &&\n        typeof Element.prototype.animate === 'function' &&\n        supportsAnimationEffect;\n    const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n    const getWebAnimations = () => {\n        return webAnimations;\n    };\n    const destroy = (clearStyleSheets) => {\n        childAnimations.forEach((childAnimation) => {\n            childAnimation.destroy(clearStyleSheets);\n        });\n        cleanUp(clearStyleSheets);\n        elements.length = 0;\n        childAnimations.length = 0;\n        _keyframes.length = 0;\n        clearOnFinish();\n        initialized = false;\n        shouldCalculateNumAnimations = true;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations, removes\n     * any animation properties from the\n     * animation's elements, and removes the\n     * animation's stylesheets from the DOM.\n     */\n    const cleanUp = (clearStyleSheets) => {\n        cleanUpElements();\n        if (clearStyleSheets) {\n            cleanUpStyleSheets();\n        }\n    };\n    const resetFlags = () => {\n        shouldForceLinearEasing = false;\n        shouldForceSyncPlayback = false;\n        shouldCalculateNumAnimations = true;\n        forceDirectionValue = undefined;\n        forceDurationValue = undefined;\n        forceDelayValue = undefined;\n        numAnimationsRunning = 0;\n        finished = false;\n        willComplete = true;\n        paused = false;\n    };\n    const isRunning = () => {\n        return numAnimationsRunning !== 0 && !paused;\n    };\n    /**\n     * @internal\n     * Remove a callback from a chosen callback array\n     * @param callbackToRemove: A reference to the callback that should be removed\n     * @param callbackObjects: An array of callbacks that callbackToRemove should be removed from.\n     */\n    const clearCallback = (callbackToRemove, callbackObjects) => {\n        const index = callbackObjects.findIndex((callbackObject) => callbackObject.c === callbackToRemove);\n        if (index > -1) {\n            callbackObjects.splice(index, 1);\n        }\n    };\n    /**\n     * @internal\n     * Add a callback to be fired when an animation is stopped/cancelled.\n     * @param callback: A reference to the callback that should be fired\n     * @param opts: Any options associated with this particular callback\n     */\n    const onStop = (callback, opts) => {\n        onStopOneTimeCallbacks.push({ c: callback, o: opts });\n        return ani;\n    };\n    const onFinish = (callback, opts) => {\n        const callbacks = (opts === null || opts === void 0 ? void 0 : opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n        callbacks.push({ c: callback, o: opts });\n        return ani;\n    };\n    const clearOnFinish = () => {\n        onFinishCallbacks.length = 0;\n        onFinishOneTimeCallbacks.length = 0;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations and removes\n     * any animation properties from the\n     * the animation's elements.\n     */\n    const cleanUpElements = () => {\n        if (supportsWebAnimations) {\n            webAnimations.forEach((animation) => {\n                animation.cancel();\n            });\n            webAnimations.length = 0;\n        }\n        else {\n            const elementsArray = elements.slice();\n            raf(() => {\n                elementsArray.forEach((element) => {\n                    removeStyleProperty(element, 'animation-name');\n                    removeStyleProperty(element, 'animation-duration');\n                    removeStyleProperty(element, 'animation-timing-function');\n                    removeStyleProperty(element, 'animation-iteration-count');\n                    removeStyleProperty(element, 'animation-delay');\n                    removeStyleProperty(element, 'animation-play-state');\n                    removeStyleProperty(element, 'animation-fill-mode');\n                    removeStyleProperty(element, 'animation-direction');\n                });\n            });\n        }\n    };\n    /**\n     * Removes the animation's stylesheets\n     * from the DOM.\n     */\n    const cleanUpStyleSheets = () => {\n        stylesheets.forEach((stylesheet) => {\n            /**\n             * When sharing stylesheets, it's possible\n             * for another animation to have already\n             * cleaned up a particular stylesheet\n             */\n            if (stylesheet === null || stylesheet === void 0 ? void 0 : stylesheet.parentNode) {\n                stylesheet.parentNode.removeChild(stylesheet);\n            }\n        });\n        stylesheets.length = 0;\n    };\n    const beforeAddRead = (readFn) => {\n        _beforeAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const beforeAddWrite = (writeFn) => {\n        _beforeAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const afterAddRead = (readFn) => {\n        _afterAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const afterAddWrite = (writeFn) => {\n        _afterAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const beforeAddClass = (className) => {\n        beforeAddClasses = addClassToArray(beforeAddClasses, className);\n        return ani;\n    };\n    const beforeRemoveClass = (className) => {\n        beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n        return ani;\n    };\n    /**\n     * Set CSS inline styles to the animation's\n     * elements before the animation begins.\n     */\n    const beforeStyles = (styles = {}) => {\n        beforeStylesValue = styles;\n        return ani;\n    };\n    /**\n     * Clear CSS inline styles from the animation's\n     * elements before the animation begins.\n     */\n    const beforeClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            beforeStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const afterAddClass = (className) => {\n        afterAddClasses = addClassToArray(afterAddClasses, className);\n        return ani;\n    };\n    const afterRemoveClass = (className) => {\n        afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n        return ani;\n    };\n    const afterStyles = (styles = {}) => {\n        afterStylesValue = styles;\n        return ani;\n    };\n    const afterClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            afterStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const getFill = () => {\n        if (_fill !== undefined) {\n            return _fill;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getFill();\n        }\n        return 'both';\n    };\n    const getDirection = () => {\n        if (forceDirectionValue !== undefined) {\n            return forceDirectionValue;\n        }\n        if (_direction !== undefined) {\n            return _direction;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDirection();\n        }\n        return 'normal';\n    };\n    const getEasing = () => {\n        if (shouldForceLinearEasing) {\n            return 'linear';\n        }\n        if (_easing !== undefined) {\n            return _easing;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getEasing();\n        }\n        return 'linear';\n    };\n    const getDuration = () => {\n        if (shouldForceSyncPlayback) {\n            return 0;\n        }\n        if (forceDurationValue !== undefined) {\n            return forceDurationValue;\n        }\n        if (_duration !== undefined) {\n            return _duration;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDuration();\n        }\n        return 0;\n    };\n    const getIterations = () => {\n        if (_iterations !== undefined) {\n            return _iterations;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getIterations();\n        }\n        return 1;\n    };\n    const getDelay = () => {\n        if (forceDelayValue !== undefined) {\n            return forceDelayValue;\n        }\n        if (_delay !== undefined) {\n            return _delay;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDelay();\n        }\n        return 0;\n    };\n    const getKeyframes = () => {\n        return _keyframes;\n    };\n    const direction = (animationDirection) => {\n        _direction = animationDirection;\n        update(true);\n        return ani;\n    };\n    const fill = (animationFill) => {\n        _fill = animationFill;\n        update(true);\n        return ani;\n    };\n    const delay = (animationDelay) => {\n        _delay = animationDelay;\n        update(true);\n        return ani;\n    };\n    const easing = (animationEasing) => {\n        _easing = animationEasing;\n        update(true);\n        return ani;\n    };\n    const duration = (animationDuration) => {\n        /**\n         * CSS Animation Durations of 0ms work fine on Chrome\n         * but do not run on Safari, so force it to 1ms to\n         * get it to run on both platforms.\n         */\n        if (!supportsWebAnimations && animationDuration === 0) {\n            animationDuration = 1;\n        }\n        _duration = animationDuration;\n        update(true);\n        return ani;\n    };\n    const iterations = (animationIterations) => {\n        _iterations = animationIterations;\n        update(true);\n        return ani;\n    };\n    const parent = (animation) => {\n        parentAnimation = animation;\n        return ani;\n    };\n    const addElement = (el) => {\n        if (el != null) {\n            if (el.nodeType === 1) {\n                elements.push(el);\n            }\n            else if (el.length >= 0) {\n                for (let i = 0; i < el.length; i++) {\n                    elements.push(el[i]);\n                }\n            }\n            else {\n                console.error('Invalid addElement value');\n            }\n        }\n        return ani;\n    };\n    const addAnimation = (animationToAdd) => {\n        if (animationToAdd != null) {\n            if (Array.isArray(animationToAdd)) {\n                for (const animation of animationToAdd) {\n                    animation.parent(ani);\n                    childAnimations.push(animation);\n                }\n            }\n            else {\n                animationToAdd.parent(ani);\n                childAnimations.push(animationToAdd);\n            }\n        }\n        return ani;\n    };\n    const keyframes = (keyframeValues) => {\n        const different = _keyframes !== keyframeValues;\n        _keyframes = keyframeValues;\n        if (different) {\n            updateKeyframes(_keyframes);\n        }\n        return ani;\n    };\n    const updateKeyframes = (keyframeValues) => {\n        if (supportsWebAnimations) {\n            getWebAnimations().forEach((animation) => {\n                /**\n                 * animation.effect's type is AnimationEffect.\n                 * However, in this case we have a more specific\n                 * type of AnimationEffect called KeyframeEffect which\n                 * inherits from AnimationEffect. As a result,\n                 * we cast animation.effect to KeyframeEffect.\n                 */\n                const keyframeEffect = animation.effect;\n                /**\n                 * setKeyframes is not supported in all browser\n                 * versions that Ionic supports, so we need to\n                 * check for support before using it.\n                 */\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                if (keyframeEffect.setKeyframes) {\n                    keyframeEffect.setKeyframes(keyframeValues);\n                }\n                else {\n                    const newEffect = new KeyframeEffect(keyframeEffect.target, keyframeValues, keyframeEffect.getTiming());\n                    animation.effect = newEffect;\n                }\n            });\n        }\n        else {\n            initializeCSSAnimation();\n        }\n    };\n    /**\n     * Run all \"before\" animation hooks.\n     */\n    const beforeAnimation = () => {\n        // Runs all before read callbacks\n        _beforeAddReadFunctions.forEach((callback) => callback());\n        // Runs all before write callbacks\n        _beforeAddWriteFunctions.forEach((callback) => callback());\n        // Updates styles and classes before animation runs\n        const addClasses = beforeAddClasses;\n        const removeClasses = beforeRemoveClasses;\n        const styles = beforeStylesValue;\n        elements.forEach((el) => {\n            const elementClassList = el.classList;\n            addClasses.forEach((c) => elementClassList.add(c));\n            removeClasses.forEach((c) => elementClassList.remove(c));\n            for (const property in styles) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n    };\n    /**\n     * Run all \"after\" animation hooks.\n     */\n    const afterAnimation = () => {\n        clearCSSAnimationsTimeout();\n        // Runs all after read callbacks\n        _afterAddReadFunctions.forEach((callback) => callback());\n        // Runs all after write callbacks\n        _afterAddWriteFunctions.forEach((callback) => callback());\n        // Updates styles and classes before animation ends\n        const currentStep = willComplete ? 1 : 0;\n        const addClasses = afterAddClasses;\n        const removeClasses = afterRemoveClasses;\n        const styles = afterStylesValue;\n        elements.forEach((el) => {\n            const elementClassList = el.classList;\n            addClasses.forEach((c) => elementClassList.add(c));\n            removeClasses.forEach((c) => elementClassList.remove(c));\n            for (const property in styles) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n        /**\n         * Clean up any value coercion before\n         * the user callbacks fire otherwise\n         * they may get stale values. For example,\n         * if someone calls progressStart(0) the\n         * animation may still be reversed.\n         */\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n        onFinishCallbacks.forEach((onFinishCallback) => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.forEach((onFinishCallback) => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.length = 0;\n        shouldCalculateNumAnimations = true;\n        if (willComplete) {\n            finished = true;\n        }\n        willComplete = true;\n    };\n    const animationFinish = () => {\n        if (numAnimationsRunning === 0) {\n            return;\n        }\n        numAnimationsRunning--;\n        if (numAnimationsRunning === 0) {\n            afterAnimation();\n            if (parentAnimation) {\n                parentAnimation.animationFinish();\n            }\n        }\n    };\n    const initializeCSSAnimation = (toggleAnimationName = true) => {\n        cleanUpStyleSheets();\n        const processedKeyframes = processKeyframes(_keyframes);\n        elements.forEach((element) => {\n            if (processedKeyframes.length > 0) {\n                const keyframeRules = generateKeyframeRules(processedKeyframes);\n                keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n                const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n                stylesheets.push(stylesheet);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill());\n                setStyleProperty(element, 'animation-direction', getDirection());\n                const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                setStyleProperty(element, 'animation-play-state', 'paused');\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', stylesheet.id || null);\n                });\n            }\n        });\n    };\n    const initializeWebAnimation = () => {\n        elements.forEach((element) => {\n            const animation = element.animate(_keyframes, {\n                id,\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection(),\n            });\n            animation.pause();\n            webAnimations.push(animation);\n        });\n        if (webAnimations.length > 0) {\n            webAnimations[0].onfinish = () => {\n                animationFinish();\n            };\n        }\n    };\n    const initializeAnimation = (toggleAnimationName = true) => {\n        beforeAnimation();\n        if (_keyframes.length > 0) {\n            if (supportsWebAnimations) {\n                initializeWebAnimation();\n            }\n            else {\n                initializeCSSAnimation(toggleAnimationName);\n            }\n        }\n        initialized = true;\n    };\n    const setAnimationStep = (step) => {\n        step = Math.min(Math.max(step, 0), 0.9999);\n        if (supportsWebAnimations) {\n            webAnimations.forEach((animation) => {\n                // When creating the animation the delay is guaranteed to be set to a number.\n                animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n                animation.pause();\n            });\n        }\n        else {\n            const animationDuration = `-${getDuration() * step}ms`;\n            elements.forEach((element) => {\n                if (_keyframes.length > 0) {\n                    setStyleProperty(element, 'animation-delay', animationDuration);\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                }\n            });\n        }\n    };\n    const updateWebAnimation = (step) => {\n        webAnimations.forEach((animation) => {\n            animation.effect.updateTiming({\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection(),\n            });\n        });\n        if (step !== undefined) {\n            setAnimationStep(step);\n        }\n    };\n    const updateCSSAnimation = (toggleAnimationName = true, step) => {\n        raf(() => {\n            elements.forEach((element) => {\n                setStyleProperty(element, 'animation-name', keyframeName || null);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n                setStyleProperty(element, 'animation-direction', getDirection() || null);\n                const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', keyframeName || null);\n                });\n            });\n        });\n    };\n    const update = (deep = false, toggleAnimationName = true, step) => {\n        if (deep) {\n            childAnimations.forEach((animation) => {\n                animation.update(deep, toggleAnimationName, step);\n            });\n        }\n        if (supportsWebAnimations) {\n            updateWebAnimation(step);\n        }\n        else {\n            updateCSSAnimation(toggleAnimationName, step);\n        }\n        return ani;\n    };\n    const progressStart = (forceLinearEasing = false, step) => {\n        childAnimations.forEach((animation) => {\n            animation.progressStart(forceLinearEasing, step);\n        });\n        pauseAnimation();\n        shouldForceLinearEasing = forceLinearEasing;\n        if (!initialized) {\n            initializeAnimation();\n        }\n        update(false, true, step);\n        return ani;\n    };\n    const progressStep = (step) => {\n        childAnimations.forEach((animation) => {\n            animation.progressStep(step);\n        });\n        setAnimationStep(step);\n        return ani;\n    };\n    const progressEnd = (playTo, step, dur) => {\n        shouldForceLinearEasing = false;\n        childAnimations.forEach((animation) => {\n            animation.progressEnd(playTo, step, dur);\n        });\n        if (dur !== undefined) {\n            forceDurationValue = dur;\n        }\n        finished = false;\n        willComplete = true;\n        if (playTo === 0) {\n            forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n            if (forceDirectionValue === 'reverse') {\n                willComplete = false;\n            }\n            if (supportsWebAnimations) {\n                update();\n                setAnimationStep(1 - step);\n            }\n            else {\n                forceDelayValue = (1 - step) * getDuration() * -1;\n                update(false, false);\n            }\n        }\n        else if (playTo === 1) {\n            if (supportsWebAnimations) {\n                update();\n                setAnimationStep(step);\n            }\n            else {\n                forceDelayValue = step * getDuration() * -1;\n                update(false, false);\n            }\n        }\n        if (playTo !== undefined && !parentAnimation) {\n            play();\n        }\n        return ani;\n    };\n    const pauseAnimation = () => {\n        if (initialized) {\n            if (supportsWebAnimations) {\n                webAnimations.forEach((animation) => {\n                    animation.pause();\n                });\n            }\n            else {\n                elements.forEach((element) => {\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                });\n            }\n            paused = true;\n        }\n    };\n    const pause = () => {\n        childAnimations.forEach((animation) => {\n            animation.pause();\n        });\n        pauseAnimation();\n        return ani;\n    };\n    const onAnimationEndFallback = () => {\n        cssAnimationsTimerFallback = undefined;\n        animationFinish();\n    };\n    const clearCSSAnimationsTimeout = () => {\n        if (cssAnimationsTimerFallback) {\n            clearTimeout(cssAnimationsTimerFallback);\n        }\n    };\n    const playCSSAnimations = () => {\n        clearCSSAnimationsTimeout();\n        raf(() => {\n            elements.forEach((element) => {\n                if (_keyframes.length > 0) {\n                    setStyleProperty(element, 'animation-play-state', 'running');\n                }\n            });\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n        else {\n            /**\n             * This is a catchall in the event that a CSS Animation did not finish.\n             * The Web Animations API has mechanisms in place for preventing this.\n             * CSS Animations will not fire an `animationend` event\n             * for elements with `display: none`. The Web Animations API\n             * accounts for this, but using raw CSS Animations requires\n             * this workaround.\n             */\n            const animationDelay = getDelay() || 0;\n            const animationDuration = getDuration() || 0;\n            const animationIterations = getIterations() || 1;\n            // No need to set a timeout when animation has infinite iterations\n            if (isFinite(animationIterations)) {\n                cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n            }\n            animationEnd(elements[0], () => {\n                clearCSSAnimationsTimeout();\n                /**\n                 * Ensure that clean up\n                 * is always done a frame\n                 * before the onFinish handlers\n                 * are fired. Otherwise, there\n                 * may be flickering if a new\n                 * animation is started on the same\n                 * element too quickly\n                 */\n                raf(() => {\n                    clearCSSAnimationPlayState();\n                    raf(animationFinish);\n                });\n            });\n        }\n    };\n    const clearCSSAnimationPlayState = () => {\n        elements.forEach((element) => {\n            removeStyleProperty(element, 'animation-duration');\n            removeStyleProperty(element, 'animation-delay');\n            removeStyleProperty(element, 'animation-play-state');\n        });\n    };\n    const playWebAnimations = () => {\n        webAnimations.forEach((animation) => {\n            animation.play();\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n    };\n    const resetAnimation = () => {\n        if (supportsWebAnimations) {\n            setAnimationStep(0);\n            updateWebAnimation();\n        }\n        else {\n            updateCSSAnimation();\n        }\n    };\n    const play = (opts) => {\n        return new Promise((resolve) => {\n            if (opts === null || opts === void 0 ? void 0 : opts.sync) {\n                shouldForceSyncPlayback = true;\n                onFinish(() => (shouldForceSyncPlayback = false), { oneTimeCallback: true });\n            }\n            if (!initialized) {\n                initializeAnimation();\n            }\n            if (finished) {\n                resetAnimation();\n                finished = false;\n            }\n            if (shouldCalculateNumAnimations) {\n                numAnimationsRunning = childAnimations.length + 1;\n                shouldCalculateNumAnimations = false;\n            }\n            /**\n             * When one of these callbacks fires we\n             * need to clear the other's callback otherwise\n             * you can potentially get these callbacks\n             * firing multiple times if the play method\n             * is subsequently called.\n             * Example:\n             * animation.play() (onStop and onFinish callbacks are registered)\n             * animation.stop() (onStop callback is fired, onFinish is not)\n             * animation.play() (onStop and onFinish callbacks are registered)\n             * Total onStop callbacks: 1\n             * Total onFinish callbacks: 2\n             */\n            const onStopCallback = () => {\n                clearCallback(onFinishCallback, onFinishOneTimeCallbacks);\n                resolve();\n            };\n            const onFinishCallback = () => {\n                clearCallback(onStopCallback, onStopOneTimeCallbacks);\n                resolve();\n            };\n            /**\n             * The play method resolves when an animation\n             * run either finishes or is cancelled.\n             */\n            onFinish(onFinishCallback, { oneTimeCallback: true });\n            onStop(onStopCallback, { oneTimeCallback: true });\n            childAnimations.forEach((animation) => {\n                animation.play();\n            });\n            if (supportsWebAnimations) {\n                playWebAnimations();\n            }\n            else {\n                playCSSAnimations();\n            }\n            paused = false;\n        });\n    };\n    /**\n     * Stops an animation and resets it state to the\n     * beginning. This does not fire any onFinish\n     * callbacks because the animation did not finish.\n     * However, since the animation was not destroyed\n     * (i.e. the animation could run again) we do not\n     * clear the onFinish callbacks.\n     */\n    const stop = () => {\n        childAnimations.forEach((animation) => {\n            animation.stop();\n        });\n        if (initialized) {\n            cleanUpElements();\n            initialized = false;\n        }\n        resetFlags();\n        onStopOneTimeCallbacks.forEach((onStopCallback) => onStopCallback.c(0, ani));\n        onStopOneTimeCallbacks.length = 0;\n    };\n    const from = (property, value) => {\n        const firstFrame = _keyframes[0];\n        if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n            firstFrame[property] = value;\n        }\n        else {\n            _keyframes = [{ offset: 0, [property]: value }, ..._keyframes];\n        }\n        return ani;\n    };\n    const to = (property, value) => {\n        const lastFrame = _keyframes[_keyframes.length - 1];\n        if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n            lastFrame[property] = value;\n        }\n        else {\n            _keyframes = [..._keyframes, { offset: 1, [property]: value }];\n        }\n        return ani;\n    };\n    const fromTo = (property, fromValue, toValue) => {\n        return from(property, fromValue).to(property, toValue);\n    };\n    return (ani = {\n        parentAnimation,\n        elements,\n        childAnimations,\n        id,\n        animationFinish,\n        from,\n        to,\n        fromTo,\n        parent,\n        play,\n        pause,\n        stop,\n        destroy,\n        keyframes,\n        addAnimation,\n        addElement,\n        update,\n        fill,\n        direction,\n        iterations,\n        duration,\n        easing,\n        delay,\n        getWebAnimations,\n        getKeyframes,\n        getFill,\n        getDirection,\n        getDelay,\n        getIterations,\n        getEasing,\n        getDuration,\n        afterAddRead,\n        afterAddWrite,\n        afterClearStyles,\n        afterStyles,\n        afterRemoveClass,\n        afterAddClass,\n        beforeAddRead,\n        beforeAddWrite,\n        beforeClearStyles,\n        beforeStyles,\n        beforeRemoveClass,\n        beforeAddClass,\n        onFinish,\n        isRunning,\n        progressStart,\n        progressStep,\n        progressEnd,\n    });\n};\n\nexport { createAnimation as c };\n"],"x_google_ignoreList":[0,1]}