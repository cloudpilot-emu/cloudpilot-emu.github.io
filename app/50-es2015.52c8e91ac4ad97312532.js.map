{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js"],"names":["Tab","hostRef","this","loaded","active","setActive","prepareLazyLoaded","isActive","component","a","delegate","el","e","console","error","Promise","resolve","undefined","tab","role","class","style","Tabs","ionNavWillLoad","ionTabsWillChange","ionTabsDidChange","transitioning","useRouter","onTabClicked","ev","href","detail","router","document","querySelector","push","select","closest","tabs","length","emit","tabBar","selectedTab","getTab","shouldSwitch","notifyRouter","tabSwitch","id","changed","element","markVisible","tabId","reject","leavingTab","navChanged","Array","from","querySelectorAll","onIonTabButtonClick","name","tabEl","find","t"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-7a8b7a1c.js';\nimport { a as attachComponent } from './framework-delegate-4392cd63.js';\nimport './helpers-dd7e4b7b.js';\n\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\n\nconst Tab = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.loaded = false;\n    /** @internal */\n    this.active = false;\n  }\n  async componentWillLoad() {\n    if (this.active) {\n      await this.setActive();\n    }\n  }\n  /** Set the active component for the tab */\n  async setActive() {\n    await this.prepareLazyLoaded();\n    this.active = true;\n  }\n  changeActive(isActive) {\n    if (isActive) {\n      this.prepareLazyLoaded();\n    }\n  }\n  prepareLazyLoaded() {\n    if (!this.loaded && this.component != null) {\n      this.loaded = true;\n      try {\n        return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n      }\n      catch (e) {\n        console.error(e);\n      }\n    }\n    return Promise.resolve(undefined);\n  }\n  render() {\n    const { tab, active, component } = this;\n    return (h(Host, { role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\n        'ion-page': component === undefined,\n        'tab-hidden': !active\n      } }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"active\": [\"changeActive\"]\n  }; }\n};\nTab.style = tabCss;\n\nconst tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\n\nconst Tabs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n    this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n    this.transitioning = false;\n    /** @internal */\n    this.useRouter = false;\n    this.onTabClicked = (ev) => {\n      const { href, tab } = ev.detail;\n      if (this.useRouter && href !== undefined) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n          router.push(href);\n        }\n      }\n      else {\n        this.select(tab);\n      }\n    };\n  }\n  async componentWillLoad() {\n    if (!this.useRouter) {\n      this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n    }\n    if (!this.useRouter) {\n      const tabs = this.tabs;\n      if (tabs.length > 0) {\n        await this.select(tabs[0]);\n      }\n    }\n    this.ionNavWillLoad.emit();\n  }\n  componentWillRender() {\n    const tabBar = this.el.querySelector('ion-tab-bar');\n    if (tabBar) {\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  }\n  /**\n   * Select a tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async select(tab) {\n    const selectedTab = getTab(this.tabs, tab);\n    if (!this.shouldSwitch(selectedTab)) {\n      return false;\n    }\n    await this.setActive(selectedTab);\n    await this.notifyRouter();\n    this.tabSwitch();\n    return true;\n  }\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async getTab(tab) {\n    return getTab(this.tabs, tab);\n  }\n  /**\n   * Get the currently selected tab.\n   */\n  getSelected() {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  }\n  /** @internal */\n  async setRouteId(id) {\n    const selectedTab = getTab(this.tabs, id);\n    if (!this.shouldSwitch(selectedTab)) {\n      return { changed: false, element: this.selectedTab };\n    }\n    await this.setActive(selectedTab);\n    return {\n      changed: true,\n      element: this.selectedTab,\n      markVisible: () => this.tabSwitch(),\n    };\n  }\n  /** @internal */\n  async getRouteId() {\n    const tabId = this.selectedTab && this.selectedTab.tab;\n    return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n  }\n  setActive(selectedTab) {\n    if (this.transitioning) {\n      return Promise.reject('transitioning already happening');\n    }\n    this.transitioning = true;\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n    selectedTab.active = true;\n    return Promise.resolve();\n  }\n  tabSwitch() {\n    const selectedTab = this.selectedTab;\n    const leavingTab = this.leavingTab;\n    this.leavingTab = undefined;\n    this.transitioning = false;\n    if (!selectedTab) {\n      return;\n    }\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n      this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n    }\n  }\n  notifyRouter() {\n    if (this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        return router.navChanged('forward');\n      }\n    }\n    return Promise.resolve(false);\n  }\n  shouldSwitch(selectedTab) {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n  }\n  get tabs() {\n    return Array.from(this.el.querySelectorAll('ion-tab'));\n  }\n  render() {\n    return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n  }\n  get el() { return getElement(this); }\n};\nconst getTab = (tabs, tab) => {\n  const tabEl = (typeof tab === 'string')\n    ? tabs.find(t => t.tab === tab)\n    : tab;\n  if (!tabEl) {\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n  return tabEl;\n};\nTabs.style = tabsCss;\n\nexport { Tab as ion_tab, Tabs as ion_tabs };\n"]}