{"version":3,"file":"1615.2534a776164364f8.js","mappings":"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","names":["Checkbox","constructor","hostRef","registerInstance","this","ionChange","createEvent","ionFocus","ionBlur","ionStyle","inputId","checkboxIds","inheritedAttributes","hasLoggedDeprecationWarning","setChecked","state","isChecked","checked","emit","value","toggleChecked","ev","preventDefault","setFocus","indeterminate","onFocus","onBlur","color","undefined","name","disabled","labelPlacement","justify","legacy","connectedCallback","legacyFormController","createLegacyFormController","el","componentWillLoad","emitStyle","hasLegacyControl","Object","assign","inheritAriaAttributes","styleChanged","style","focusEl","focus","render","renderLegacyCheckbox","renderCheckbox","getSVGPath","mode","getIonMode","path","renderHiddenInput","h","Host","class","createColorClasses","g","hostContext","interactive","type","id","onChange","ref","textContent","viewBox","part","printIonWarning","label","labelId","labelText","getAriaLabel","role","m","htmlFor","d","getElement","watchers","ios","md","selector","closest","cssClassMap","length","getClassMap","classes","map","getClassList","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","_ref","_asyncToGenerator","url","direction","animation","test","router","document","querySelector","push","_x","_x2","_x3","_x4","apply","arguments"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js","./node_modules/@ionic/core/dist/esm/theme-17531cdf.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, H as Host, f as getElement } from './index-847f2fde.js';\nimport { c as createLegacyFormController } from './form-controller-ed77647a.js';\nimport { i as inheritAriaAttributes, d as renderHiddenInput, e as getAriaLabel } from './helpers-3379ba19.js';\nimport { p as printIonWarning } from './index-595d62c9.js';\nimport { c as createColorClasses, h as hostContext } from './theme-17531cdf.js';\nimport { b as getIonMode } from './ionic-global-1ef19007.js';\n\nconst checkboxIosCss = \":host{--checkbox-background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.in-item){width:100%;height:100%}:host([slot=start]:not(.legacy-checkbox)),:host([slot=end]:not(.legacy-checkbox)){width:auto}:host(.legacy-checkbox){width:var(--size);height:var(--size)}:host(.ion-color){--checkbox-background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}:host(.legacy-checkbox) label{top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}@supports (inset-inline-start: 0){:host(.legacy-checkbox) label{inset-inline-start:0}}@supports not (inset-inline-start: 0){:host(.legacy-checkbox) label{left:0}:host-context([dir=rtl]):host(.legacy-checkbox) label,:host-context([dir=rtl]).legacy-checkbox label{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){:host(.legacy-checkbox) label:dir(rtl){left:unset;right:unset;right:0}}}:host(.legacy-checkbox) label::-moz-focus-inner{border:0}.checkbox-wrapper{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;height:inherit;cursor:inherit}.label-text-wrapper{pointer-events:none;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item:not(.legacy-checkbox)) .label-text-wrapper{margin-top:10px;margin-bottom:10px}.label-text-wrapper-hidden{display:none}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.checkbox-icon{border-radius:var(--border-radius);position:relative;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--checkbox-background);-webkit-box-sizing:border-box;box-sizing:border-box}:host(.legacy-checkbox) .checkbox-icon{display:block;width:100%;height:100%}:host(:not(.legacy-checkbox)) .checkbox-icon{width:var(--size);height:var(--size)}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-justify-space-between) .checkbox-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.checkbox-justify-start) .checkbox-wrapper{-ms-flex-pack:start;justify-content:start}:host(.checkbox-justify-end) .checkbox-wrapper{-ms-flex-pack:end;justify-content:end}:host(.checkbox-label-placement-start) .checkbox-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.checkbox-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-end) .checkbox-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.checkbox-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--checkbox-background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--checkbox-background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px}:host(.checkbox-disabled){opacity:0.3}:host(.in-item.legacy-checkbox){-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}:host(.in-item.legacy-checkbox[slot=start]){-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:8px;margin-bottom:8px}\";\n\nconst checkboxMdCss = \":host{--checkbox-background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.in-item){width:100%;height:100%}:host([slot=start]:not(.legacy-checkbox)),:host([slot=end]:not(.legacy-checkbox)){width:auto}:host(.legacy-checkbox){width:var(--size);height:var(--size)}:host(.ion-color){--checkbox-background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}:host(.legacy-checkbox) label{top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}@supports (inset-inline-start: 0){:host(.legacy-checkbox) label{inset-inline-start:0}}@supports not (inset-inline-start: 0){:host(.legacy-checkbox) label{left:0}:host-context([dir=rtl]):host(.legacy-checkbox) label,:host-context([dir=rtl]).legacy-checkbox label{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){:host(.legacy-checkbox) label:dir(rtl){left:unset;right:unset;right:0}}}:host(.legacy-checkbox) label::-moz-focus-inner{border:0}.checkbox-wrapper{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;height:inherit;cursor:inherit}.label-text-wrapper{pointer-events:none;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item:not(.legacy-checkbox)) .label-text-wrapper{margin-top:10px;margin-bottom:10px}.label-text-wrapper-hidden{display:none}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.checkbox-icon{border-radius:var(--border-radius);position:relative;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--checkbox-background);-webkit-box-sizing:border-box;box-sizing:border-box}:host(.legacy-checkbox) .checkbox-icon{display:block;width:100%;height:100%}:host(:not(.legacy-checkbox)) .checkbox-icon{width:var(--size);height:var(--size)}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-justify-space-between) .checkbox-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.checkbox-justify-start) .checkbox-wrapper{-ms-flex-pack:start;justify-content:start}:host(.checkbox-justify-end) .checkbox-wrapper{-ms-flex-pack:end;justify-content:end}:host(.checkbox-label-placement-start) .checkbox-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.checkbox-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-end) .checkbox-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.checkbox-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--checkbox-background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--checkmark-width:3;--checkbox-background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.legacy-checkbox.checkbox-disabled),:host(.checkbox-disabled) .label-text-wrapper{opacity:0.38}:host(.checkbox-disabled) .native-wrapper{opacity:0.63}:host(.in-item.legacy-checkbox){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item.legacy-checkbox[slot=start]){-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px;margin-top:18px;margin-bottom:18px}\";\n\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    this.inheritedAttributes = {};\n    // TODO(FW-3100): remove this\n    // This flag ensures we log the deprecation warning at most once.\n    this.hasLoggedDeprecationWarning = false;\n    /**\n     * Sets the checked property and emits\n     * the ionChange event. Use this to update the\n     * checked state in response to user-generated\n     * actions such as a click.\n     */\n    this.setChecked = (state) => {\n      const isChecked = (this.checked = state);\n      this.ionChange.emit({\n        checked: isChecked,\n        value: this.value,\n      });\n    };\n    this.toggleChecked = (ev) => {\n      ev.preventDefault();\n      this.setFocus();\n      this.setChecked(!this.checked);\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.color = undefined;\n    this.name = this.inputId;\n    this.checked = false;\n    this.indeterminate = false;\n    this.disabled = false;\n    this.value = 'on';\n    this.labelPlacement = 'start';\n    this.justify = 'space-between';\n    this.legacy = undefined;\n  }\n  // TODO(FW-3100): remove this\n  connectedCallback() {\n    this.legacyFormController = createLegacyFormController(this.el);\n  }\n  componentWillLoad() {\n    this.emitStyle();\n    // TODO(FW-3100): remove check\n    if (!this.legacyFormController.hasLegacyControl()) {\n      this.inheritedAttributes = Object.assign({}, inheritAriaAttributes(this.el));\n    }\n  }\n  styleChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    const style = {\n      'interactive-disabled': this.disabled,\n    };\n    // TODO(FW-3100): remove this\n    if (this.legacyFormController.hasLegacyControl()) {\n      style['checkbox-checked'] = this.checked;\n    }\n    this.ionStyle.emit(style);\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  // TODO(FW-3100): run contents of renderCheckbox directly instead\n  render() {\n    const { legacyFormController } = this;\n    return legacyFormController.hasLegacyControl() ? this.renderLegacyCheckbox() : this.renderCheckbox();\n  }\n  renderCheckbox() {\n    const { color, checked, disabled, el, getSVGPath, indeterminate, inheritedAttributes, inputId, justify, labelPlacement, name, value, } = this;\n    const mode = getIonMode(this);\n    const path = getSVGPath(mode, indeterminate);\n    renderHiddenInput(true, el, name, checked ? value : '', disabled);\n    return (h(Host, { class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        interactive: true,\n        [`checkbox-justify-${justify}`]: true,\n        [`checkbox-label-placement-${labelPlacement}`]: true,\n      }) }, h(\"label\", { class: \"checkbox-wrapper\" }, h(\"input\", Object.assign({ type: \"checkbox\", checked: checked ? true : undefined, disabled: disabled, id: inputId, onChange: this.toggleChecked, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) }, inheritedAttributes)), h(\"div\", { class: {\n        'label-text-wrapper': true,\n        'label-text-wrapper-hidden': el.textContent === '',\n      } }, h(\"slot\", null)), h(\"div\", { class: \"native-wrapper\" }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path)))));\n  }\n  // TODO(FW-3100): remove this\n  renderLegacyCheckbox() {\n    if (!this.hasLoggedDeprecationWarning) {\n      printIonWarning(`ion-checkbox now requires providing a label with either the default slot or the \"aria-label\" attribute. To migrate, remove any usage of \"ion-label\" and pass the label text to either the component or the \"aria-label\" attribute.\n\nExample: <ion-checkbox>Label</ion-checkbox>\nExample with aria-label: <ion-checkbox aria-label=\"Label\"></ion-checkbox>\n\nDevelopers can use the \"legacy\" property to continue using the legacy form markup. This property will be removed in an upcoming major release of Ionic where this form control will use the modern form markup.`, this.el);\n      if (this.legacy) {\n        printIonWarning(`ion-checkbox is being used with the \"legacy\" property enabled which will forcibly enable the legacy form markup. This property will be removed in an upcoming major release of Ionic where this form control will use the modern form markup.\nDevelopers can dismiss this warning by removing their usage of the \"legacy\" property and using the new checkbox syntax.`, this.el);\n      }\n      this.hasLoggedDeprecationWarning = true;\n    }\n    const { color, checked, disabled, el, getSVGPath, indeterminate, inputId, name, value } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    const path = getSVGPath(mode, indeterminate);\n    renderHiddenInput(true, el, name, checked ? value : '', disabled);\n    return (h(Host, { \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"checkbox\", class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        'legacy-checkbox': true,\n        interactive: true,\n      }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onChange: this.toggleChecked, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) })));\n  }\n  getSVGPath(mode, indeterminate) {\n    let path = indeterminate ? (h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })) : (h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" }));\n    if (mode === 'md') {\n      path = indeterminate ? (h(\"path\", { d: \"M2 12H22\", part: \"mark\" })) : (h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" }));\n    }\n    return path;\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"styleChanged\"],\n    \"disabled\": [\"styleChanged\"]\n  }; }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}