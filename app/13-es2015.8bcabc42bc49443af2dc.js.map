{"version":3,"sources":["webpack:///src/app/page/emulation/context-menu/context-menu.component.ts","webpack:///src/app/page/emulation/context-menu/context-menu.component.html","webpack:///src/app/page/emulation/helper/EventHandler.ts","webpack:///src/app/page/emulation/emulation.page.html","webpack:///src/app/page/emulation/emulation-routing.module.ts","webpack:///src/app/page/emulation/emulation.page.ts","webpack:///src/app/page/emulation/emulation.module.ts"],"names":["ContextMenuComponent","emulationService","onClick","showHelp","this","reset","resetNoExtensions","resetHard","engagePower","power","help","canvas","canvasHelper","handleMouseDown","e","button","coords","eventToPalmCoordinates","area","determineArea","interactionMouse","handlePointerMove","determineButton","handleButtonDown","drawButtons","activeButtons","handleMouseMove","buttons","handeMouseUp","interaction","undefined","handleButtonUp","handlePointerUp","handleTouchStart","i","changedTouches","length","touch","item","interactionsTouch","set","identifier","cancelable","preventDefault","handleTouchMove","get","handleTouchEnd","delete","handleKeyDown","keyCode","key","charCodeAt","ctrlKey","Map","bound","addEventListener","window","removeEventListener","clip","bb","getBoundingClientRect","contentX","contentY","contentWidth","contentHeight","width","height","top","left","x","Math","floor","clientX","y","clientY","Array","from","values","filter","map","push","routes","path","component","EmulationPage","emulationState","storageService","kvsService","audioService","popoverController","modalController","alertService","fileService","loadingController","ngZone","onNewFrame","drawEmulationCanvas","canvasElt","canvasRef","nativeElement","CanvasHelper","eventHandler","canvasWidth","devicePixelRatio","canvasHeight","session","getCurrentSession","storedSession","getSession","clear","getCanvas","newFrameEvent","addHandler","resume","runOutsideAngular","bind","pause","removeHandler","release","popover","create","event","backdropDismiss","showBackdrop","componentProps","dismiss","present","openFiles","processFilesForInstallation","modal","url","isRunning","isPowerOff","isUiInitialized","name","isInitialized","isMuted","kvs","volume","muted","mute","initialize","files","loader","message","filesSuccess","filesFail","file","test","installFile","content","header","slice","join","installFiles","openContextMenu","EmulationPageRoutingModule","forChild","EmulationPageModule"],"mappings":"2PASO,IAAD,Q,MAAOA,EACT,YAAmBC,GAAA,KAAAA,mBAmCnB,KAAAC,QAAsB,OAGtB,KAAAC,SAAuB,OApCvB,YAEA,QACIC,KAAKH,iBAAiBI,QAEtBD,KAAKF,UAGT,oBACIE,KAAKH,iBAAiBK,oBAEtBF,KAAKF,UAGT,YACIE,KAAKH,iBAAiBM,YAEtBH,KAAKF,UAGT,QACIE,KAAKH,iBAAiBO,cAEtBJ,KAAKF,UAGT,OACIE,KAAKD,WAELC,KAAKF,W,6CAhCAF,GAAoB,Y,uBAApBA,EAAoB,6NCTjC,mBACE,qBAAkC,+BAAS,EAAAS,UACzC,kBACF,OACA,qBAAkC,+BAAS,EAAAJ,UACzC,kBACF,OACA,qBAAkC,+BAAS,EAAAC,sBACzC,kCACF,OACA,qBAAkC,+BAAS,EAAAC,cACzC,uBACF,OACA,qBAAkC,+BAAS,EAAAG,SACzC,kBACF,OACF,Q,MAfmB,0BAAgB,4CAGhB,0BAAgB,4CAGhB,0BAAgB,4CAGhB,0BAAgB,4CAGhB,4B,sCDJb,GE0CC,MAAM,EACT,YACYC,EACAV,EACAW,GAFA,KAAAD,SACA,KAAAV,mBACA,KAAAW,eAqCJ,KAAAC,gBAAmBC,IACvB,GAAiB,IAAbA,EAAEC,OAAc,OAEpB,MAAMC,EAASZ,KAAKa,uBAAuBH,GAC3C,IAAKE,EAAQ,OAEb,MAAME,EAAOd,KAAKe,cAAcH,GAEhC,GAAa,IAATE,EACAd,KAAKgB,iBAAmB,CAAEF,QAC1Bd,KAAKH,iBAAiBoB,qBAAqBL,OACxC,CACH,MAAMD,EAASX,KAAKkB,gBAAgBN,GACpCZ,KAAKgB,iBAAmB,CAAEF,OAAMH,UAEhCX,KAAKH,iBAAiBsB,iBAAiBR,GAEvCX,KAAKQ,aAAaY,YAAYpB,KAAKqB,mBAInC,KAAAC,gBAAmBZ,I,MAEvB,KAAkB,EAAZA,EAAEa,UAA8C,KAAN,QAArB,EAAAvB,KAAKgB,wBAAgB,eAAEF,MAA0B,OAE5E,MAAMF,EAASZ,KAAKa,uBAAuBH,GAAG,GACzCE,GAELZ,KAAKH,iBAAiBoB,qBAAqBL,IAGvC,KAAAY,aAAgBd,IACpB,GAAiB,IAAbA,EAAEC,OAAc,OAEpB,MAAMc,EAAczB,KAAKgB,iBAGzB,OAFAhB,KAAKgB,sBAAmBU,EAEhBD,aAAW,EAAXA,EAAaX,MACjB,KAAK,EACDd,KAAKH,iBAAiB8B,eAAeF,EAAYd,QAEjDX,KAAKQ,aAAaY,YAAYpB,KAAKqB,iBAEnC,MAEJ,KAAK,EACDrB,KAAKH,iBAAiB+B,oBAM1B,KAAAC,iBAAoBnB,IACxB,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAAEqB,eAAeC,OAAQF,IAAK,CAC9C,MAAMG,EAAQvB,EAAEqB,eAAeG,KAAKJ,GACpC,IAAKG,EAAO,SAEZ,MAAMrB,EAASZ,KAAKa,uBAAuBoB,GAC3C,IAAKrB,EAAQ,SAEb,MAAME,EAAOd,KAAKe,cAAcH,GAChC,GAAa,IAATE,EACAd,KAAKmC,kBAAkBC,IAAIH,EAAMI,WAAY,CAAEvB,SAC/Cd,KAAKH,iBAAiBoB,qBAAqBL,OACxC,CACH,MAAMD,EAASX,KAAKkB,gBAAgBN,GACpCZ,KAAKmC,kBAAkBC,IAAIH,EAAMI,WAAY,CAAEvB,OAAMH,WAErDX,KAAKH,iBAAiBsB,iBAAiBR,GAEvCX,KAAKQ,aAAaY,YAAYpB,KAAKqB,mBAItB,IAAjBX,EAAE4B,YAAsB5B,EAAE6B,kBAG1B,KAAAC,gBAAmB9B,I,MACvB,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAAEqB,eAAeC,OAAQF,IAAK,CAC9C,MAAMG,EAAQvB,EAAEqB,eAAeG,KAAKJ,GACpC,GAAKG,GAEiD,KAAN,QAA5C,EAAAjC,KAAKmC,kBAAkBM,IAAIR,EAAMI,mBAAW,eAAEvB,MAA0B,CACxE,MAAMF,EAASZ,KAAKa,uBAAuBoB,GAAO,GAClD,IAAKrB,EAAQ,SAEbZ,KAAKH,iBAAiBoB,qBAAqBL,KAI9B,IAAjBF,EAAE4B,YAAsB5B,EAAE6B,kBAG1B,KAAAG,eAAkBhC,IACtB,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAAEqB,eAAeC,OAAQF,IAAK,CAC9C,MAAMG,EAAQvB,EAAEqB,eAAeG,KAAKJ,GACpC,IAAKG,EAAO,SAEZ,MAAMR,EAAczB,KAAKmC,kBAAkBM,IAAIR,EAAMI,YAGrD,OAFArC,KAAKmC,kBAAkBQ,OAAOV,EAAMI,YAE5BZ,aAAW,EAAXA,EAAaX,MACjB,KAAK,EACDd,KAAKH,iBAAiB8B,eAAeF,EAAYd,QAEjDX,KAAKQ,aAAaY,YAAYpB,KAAKqB,iBAEnC,MAEJ,KAAK,EACDrB,KAAKH,iBAAiB+B,oBAMb,IAAjBlB,EAAE4B,YAAsB5B,EAAE6B,kBAG1B,KAAAK,cAAiBlC,IACrB,MAAMmC,EA/Ld,SAAmBC,GACf,GAAmB,IAAfA,EAAId,QAAgBc,EAAIC,WAAW,IAAM,IAAK,OAAOD,EAAIC,WAAW,GAExE,OAAQD,GACJ,IAAK,YACD,OAAO,GAEX,IAAK,aACD,OAAO,GAEX,IAAK,UACD,OAAO,GAEX,IAAK,YACD,OAAO,GAEX,IAAK,YACD,OAAO,EAEX,IAAK,MACD,OAAO,EAEX,IAAK,QACD,OAAO,GAEX,QACI,QA1BZ,CA+LkCpC,EAAEoC,KAEvBpC,EAAEsC,cAAuBtB,IAAZmB,IACd7C,KAAKH,iBAAiB+C,cAAcC,GACpCnC,EAAE6B,mBA6EF,KAAAJ,kBAAoB,IAAIc,IACxB,KAAAC,OAAQ,EA5OhB,OACQlD,KAAKkD,QAETlD,KAAKO,OAAO4C,iBAAiB,YAAanD,KAAKS,iBAC/C2C,OAAOD,iBAAiB,UAAWnD,KAAKwB,cACxC4B,OAAOD,iBAAiB,YAAanD,KAAKsB,iBAE1CtB,KAAKO,OAAO4C,iBAAiB,aAAcnD,KAAK6B,kBAChD7B,KAAKO,OAAO4C,iBAAiB,YAAanD,KAAKwC,iBAC/CxC,KAAKO,OAAO4C,iBAAiB,WAAYnD,KAAK0C,gBAC9C1C,KAAKO,OAAO4C,iBAAiB,cAAenD,KAAK0C,gBAEjDU,OAAOD,iBAAiB,UAAWnD,KAAK4C,eAExC5C,KAAKkD,OAAQ,GAGjB,UACSlD,KAAKkD,QAEVlD,KAAKO,OAAO8C,oBAAoB,YAAarD,KAAKS,iBAClD2C,OAAOC,oBAAoB,UAAWrD,KAAKwB,cAC3C4B,OAAOC,oBAAoB,YAAarD,KAAKsB,iBAE7CtB,KAAKO,OAAO8C,oBAAoB,aAAcrD,KAAK6B,kBACnD7B,KAAKO,OAAO8C,oBAAoB,YAAarD,KAAKwC,iBAClDxC,KAAKO,OAAO8C,oBAAoB,WAAYrD,KAAK0C,gBACjD1C,KAAKO,OAAO8C,oBAAoB,cAAerD,KAAK0C,gBAEpDU,OAAOC,oBAAoB,UAAWrD,KAAK4C,eAE3C5C,KAAKkD,OAAQ,GAmIT,uBAAuBxC,EAAuB4C,GAAO,GACzD,MAAMC,EAAKvD,KAAKO,OAAOiD,wBAEvB,IAAIC,EACAC,EACAC,EACAC,EAIAL,EAAGM,MAAQN,EAAGO,OAAS,IAAQ,KAC/BF,EAAgBL,EAAGO,OACnBH,EAAgB,IAAQ,IAAUJ,EAAGO,OACrCJ,EAAWH,EAAGQ,IACdN,EAAWF,EAAGS,MAAQT,EAAGM,MAAQF,GAAgB,IAEjDA,EAAeJ,EAAGM,MAClBD,EAAiB,IAAS,IAASL,EAAGM,MACtCJ,EAAWF,EAAGS,KACdN,EAAWH,EAAGQ,KAAOR,EAAGO,OAASF,GAAiB,GAItD,IAAIK,EAAIC,KAAKC,OAASzD,EAAE0D,QAAUX,GAAYE,EAAgB,IAAS,KAAS,IAAS,IACrFU,EAAIH,KAAKC,OAASzD,EAAE4D,QAAUZ,GAAYE,EAAiB,IAAU,KAAS,IAAS,IAa3F,GAFIS,GAAK,MAAKA,GAAK,GAEff,EACIW,EAAI,IAAGA,EAAI,GACXA,EAAI,MAAKA,EAAI,KACbI,EAAI,IAAGA,EAAI,GACXA,EAAI,MAAKA,EAAI,UAEjB,GAAIJ,EAAI,GAAKA,GAAK,KAAOI,EAAI,GAAKA,GAAK,IAAK,OAGhD,MAAO,CAACJ,EAAGI,GAGP,eAAe,CAAEA,IACrB,OAAOA,GAAK,IAAM,EAAe,EAG7B,iBAAiBJ,EAAGI,IACxB,OAAIJ,GAAK,IAAY,EACjBA,GAAK,IAAY,EACjBA,GAAK,GAAWI,GAAK,IAAM,EAAkB,EAC7CJ,GAAK,GAAW,EAEb,EAGH,gB,MACJ,MAAM1C,EAAUgD,MAAMC,KAAKxE,KAAKmC,kBAAkBsC,UAC7CC,OAAQ5C,GAAiB,IAAXA,EAAEhB,MAChB6D,IAAK7C,GAAOA,EAAwBnB,QAIzC,OAF+B,KAAN,QAArB,EAAAX,KAAKgB,wBAAgB,eAAEF,OAAuBS,EAAQqD,KAAK5E,KAAKgB,iBAAiBL,QAE9EY,G,kJClRT,uBAA2C,oDAAc,KACvD,sBACF,Q,uCACA,uBAA4C,oDAAc,KACxD,sBACF,Q,sBAYJ,iBACE,cAAK,8BAAmB,OAC1B,QC7BF,MAAMsD,EAAiB,CACnB,CACIC,KAAM,GACNC,UCcF,M,MAAOC,EACT,YACWnF,EACAoF,EACCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAVD,KAAA7F,mBACA,KAAAoF,iBACC,KAAAC,iBACA,KAAAC,aACA,KAAAC,eACA,KAAAC,oBACA,KAAAC,kBACA,KAAAC,eACA,KAAAC,cACA,KAAAC,oBACA,KAAAC,SA+GJ,KAAAC,WAAcpF,IAClBP,KAAKQ,aAAaoF,oBAAoBrF,IA7G1C,kBACI,MAAMsF,EAAY7F,KAAK8F,UAAUC,cACjC/F,KAAKQ,aAAe,IAAIwF,EAAA,EAAaH,GACrC7F,KAAKiG,aAAe,IAAI,EAAaJ,EAAW7F,KAAKH,iBAAkBG,KAAKQ,cAGhF,kBACI,OAAO,IAGX,mBACI,OAAO,IAGX,eACI,OAAOR,KAAKkG,YAAcC,iBAAmB,KAGjD,gBACI,OAAOnG,KAAKoG,aAAeD,iBAAmB,KAG5C,kB,kDACF,IAAIE,EAAUrG,KAAKiF,eAAeqB,oBAClC,MAAMC,EAAgB,cAEjBF,QAA6B3E,IAAlB6E,IACZF,QAAgBrG,KAAKkF,eAAesB,WAAWD,IAEnDvG,KAAKQ,aAAaiG,MAAMJ,GACxBrG,KAAK2F,WAAW3F,KAAKH,iBAAiB6G,aAEtC1G,KAAKH,iBAAiB8G,cAAcC,WAAW5G,KAAK2F,YAEpD3F,KAAKH,iBAAiBgH,SAEtB7G,KAAK0F,OAAOoB,kBAAkB,IAAM9G,KAAKiG,aAAac,UAG1D,mBACI/G,KAAKH,iBAAiBmH,QAEtBhH,KAAKH,iBAAiB8G,cAAcM,cAAcjH,KAAK2F,YAEvD3F,KAAKiG,aAAaiB,UAGhB,gBAAgBxG,G,kDAClB,MAAMyG,QAAgBnH,KAAKqF,kBAAkB+B,OAAO,CAChDrC,UAAW,EACXsC,MAAO3G,EACP4G,iBAAiB,EACjBC,cAAc,EACdC,eAAgB,CACZ1H,QAAS,IAAMqH,EAAQM,UACvB1H,SAAU,IAAMC,KAAKD,cAI7BoH,EAAQO,YAGZ,eACI1H,KAAKwF,YAAYmC,UAAU3H,KAAK4H,4BAA4Bb,KAAK/G,OAG/D,W,kDACF,MAAM6H,QAAc7H,KAAKsF,gBAAgB8B,OAAO,CAC5CrC,UAAW,IACXyC,eAAgB,CACZM,IAAK,mCAGPD,EAAMH,YAGhB,0BACI,OACK1H,KAAKH,iBAAiBkI,aACvB/H,KAAKH,iBAAiBmI,eACrBhI,KAAKH,iBAAiBoI,kBAI/B,Y,MACI,OAA8C,QAAvC,EAAAjI,KAAKiF,eAAeqB,2BAAmB,eAAE4B,OAAQ,GAG5D,cACI,OAAQlI,KAAKoF,aAAa+C,iBAAmBnI,KAAKoF,aAAagD,UAGnE,iBACI,OAAOpI,KAAKmF,WAAWkD,IAAIC,QAAU,EAGzC,KAAKC,GACGA,EACAvI,KAAKoF,aAAaoD,MAAK,GAEnBxI,KAAKoF,aAAa+C,gBAClBnI,KAAKoF,aAAaoD,MAAK,GAEvBxI,KAAKoF,aAAaqD,aAShB,4BAA4BC,G,kDACtC,MAAMC,QAAe3I,KAAKyF,kBAAkB2B,OAAO,CAC/CwB,QAAS,wBAEPD,EAAOjB,UAEb,MAAMmB,EAA8B,GAC9BC,EAA2B,GAEjC,IACI,IAAK,MAAMC,KAAQL,EACV,gBAAgBM,KAAKD,EAAKb,OAMgC,UAApDlI,KAAKH,iBAAiBoJ,YAAYF,EAAKG,UAC9CL,EAAajE,KAAKmE,EAAKb,MANvBY,EAAUlE,KAAKmE,EAAKb,M,QAY5BS,EAAOlB,UAGX,IAAImB,EAoCAO,EAlCJ,OAAQN,EAAa7G,QACjB,KAAK,EACD4G,EAAU,GACV,MAEJ,KAAK,EACDA,EAAU,mBAAmBC,EAAa,iBAC1C,MAEJ,QACID,EAAU,mBAAmBC,EAAa7G,2BAMlD,OAFI8G,EAAU9G,OAAS,IAAG4G,GAAW,cAE7BE,EAAU9G,QACd,KAAK,EACD,MAEJ,KAAK,EACD4G,GAAW,mBAAmBE,EAAU,aACxC,MAEJ,QACIF,GAAW,mBAAmBE,EACzBM,MAAM,EAAGN,EAAU9G,OAAS,EAAI,EAAI8G,EAAU9G,OAAS,GACvDqH,KAAK,aACNP,EAAU9G,OAAS,EAAI8G,EAAU9G,OAAS,EAAI,cAAgB8G,EAAUA,EAAU9G,OAAS,aASnGmH,EADqB,IAArBL,EAAU9G,OACD,0BACsB,IAAxB6G,EAAa7G,OACX,sBAEA,sBAGbhC,KAAKuF,aAAaqD,QAAQO,EAAQP,M,6CAxM7B5D,GAAa,gH,uBAAbA,EAAa,sD,GAAA,K,udFtB1B,qBACE,sBACE,oBAAW,QAAS,OAEpB,wBACE,uBAA6C,+BAAS,EAAAsE,iBACpD,qBACF,OACF,OAEA,wBACE,uBAAY,gCAAS,EAAAC,gBAAA,KACnB,qBACF,OAEA,8BAGA,8BAGF,OACF,OACF,OAEA,uBAEE,iBACE,sBAEF,OAEA,wBAIF,Q,MAlCe,sBAGG,+CAUC,8CAGA,+CASsB,2EACyB,iCAAwB,qBAAxB,CAAwB,+DAAtE,4BAAqB,yBAIJ,6D,2gBEV/B,KDNC,IAAD,Q,MAAOC,G,6CAAAA,I,uBAAAA,I,2BAHA,CAAC,IAAaC,SAAS5E,IACtB,O,GAER,G,4BEHC,IAAD,Q,MAAO6E,G,6CAAAA,I,uBAAAA,I,2BAHA,CAAC,IAAc,IAAa,IAAa,EAA4B,Q,GAG5E","file":"x","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\nimport { EmulationService } from './../../../service/emulation.service';\n\n@Component({\n    selector: 'app-emulation-context-menu',\n    templateUrl: './context-menu.component.html',\n    styleUrls: ['./context-menu.component.scss'],\n})\nexport class ContextMenuComponent implements OnInit {\n    constructor(public emulationService: EmulationService) {}\n\n    ngOnInit(): void {}\n\n    reset(): void {\n        this.emulationService.reset();\n\n        this.onClick();\n    }\n\n    resetNoExtensions(): void {\n        this.emulationService.resetNoExtensions();\n\n        this.onClick();\n    }\n\n    resetHard(): void {\n        this.emulationService.resetHard();\n\n        this.onClick();\n    }\n\n    power(): void {\n        this.emulationService.engagePower();\n\n        this.onClick();\n    }\n\n    help(): void {\n        this.showHelp();\n\n        this.onClick();\n    }\n\n    @Input()\n    onClick: () => void = () => undefined;\n\n    @Input()\n    showHelp: () => void = () => undefined;\n}\n","<ion-list>\n  <ion-item button [detail]=\"false\" (click)=\"power()\" [disabled]=\"!emulationService.isRunning()\">\n    Power\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"reset()\" [disabled]=\"!emulationService.isRunning()\">\n    Reset\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"resetNoExtensions()\" [disabled]=\"!emulationService.isRunning()\">\n    Reset (no extensions)\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"resetHard()\" [disabled]=\"!emulationService.isRunning()\">\n    Hard reset\n  </ion-item>\n  <ion-item button [detail]=\"false\" (click)=\"help()\">\n    Help\n  </ion-item>\n</ion-list>\n","import { BORDER, CanvasHelper, HEIGHT, SCALE, WIDTH } from './CanvasHelper';\n\nimport { EmulationService } from './../../../service/emulation.service';\nimport { PalmButton } from '../../../../../../src';\n\nconst enum Area {\n    silkscreen,\n    buttons,\n}\n\ninterface InteractionSilkscreen {\n    area: Area.silkscreen;\n}\n\ninterface InteractionButton {\n    area: Area.buttons;\n    button: PalmButton;\n}\n\ntype Interaction = InteractionSilkscreen | InteractionButton;\n\nfunction keyToCode(key: string): number | undefined {\n    if (key.length === 1 && key.charCodeAt(0) <= 255) return key.charCodeAt(0);\n\n    switch (key) {\n        case 'ArrowLeft':\n            return 0x1c;\n\n        case 'ArrowRight':\n            return 0x1d;\n\n        case 'ArrowUp':\n            return 0x1e;\n\n        case 'ArrowDown':\n            return 0x1f;\n\n        case 'Backspace':\n            return 0x08;\n\n        case 'Tab':\n            return 0x09;\n\n        case 'Enter':\n            return 0x0a;\n\n        default:\n            return undefined;\n    }\n}\n\nexport class EventHandler {\n    constructor(\n        private canvas: HTMLCanvasElement,\n        private emulationService: EmulationService,\n        private canvasHelper: CanvasHelper\n    ) {}\n\n    bind(): void {\n        if (this.bound) return;\n\n        this.canvas.addEventListener('mousedown', this.handleMouseDown);\n        window.addEventListener('mouseup', this.handeMouseUp);\n        window.addEventListener('mousemove', this.handleMouseMove);\n\n        this.canvas.addEventListener('touchstart', this.handleTouchStart);\n        this.canvas.addEventListener('touchmove', this.handleTouchMove);\n        this.canvas.addEventListener('touchend', this.handleTouchEnd);\n        this.canvas.addEventListener('touchcancel', this.handleTouchEnd);\n\n        window.addEventListener('keydown', this.handleKeyDown);\n\n        this.bound = true;\n    }\n\n    release(): void {\n        if (!this.bound) return;\n\n        this.canvas.removeEventListener('mousedown', this.handleMouseDown);\n        window.removeEventListener('mouseup', this.handeMouseUp);\n        window.removeEventListener('mousemove', this.handleMouseMove);\n\n        this.canvas.removeEventListener('touchstart', this.handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this.handleTouchMove);\n        this.canvas.removeEventListener('touchend', this.handleTouchEnd);\n        this.canvas.removeEventListener('touchcancel', this.handleTouchEnd);\n\n        window.removeEventListener('keydown', this.handleKeyDown);\n\n        this.bound = false;\n    }\n\n    private handleMouseDown = (e: MouseEvent): void => {\n        if (e.button !== 0) return;\n\n        const coords = this.eventToPalmCoordinates(e);\n        if (!coords) return;\n\n        const area = this.determineArea(coords);\n\n        if (area === Area.silkscreen) {\n            this.interactionMouse = { area };\n            this.emulationService.handlePointerMove(...coords);\n        } else {\n            const button = this.determineButton(coords);\n            this.interactionMouse = { area, button };\n\n            this.emulationService.handleButtonDown(button);\n\n            this.canvasHelper.drawButtons(this.activeButtons());\n        }\n    };\n\n    private handleMouseMove = (e: MouseEvent): void => {\n        // tslint:disable-next-line: no-bitwise\n        if (!(e.buttons & 0x01) || this.interactionMouse?.area !== Area.silkscreen) return;\n\n        const coords = this.eventToPalmCoordinates(e, true);\n        if (!coords) return;\n\n        this.emulationService.handlePointerMove(...coords);\n    };\n\n    private handeMouseUp = (e: MouseEvent): void => {\n        if (e.button !== 0) return;\n\n        const interaction = this.interactionMouse;\n        this.interactionMouse = undefined;\n\n        switch (interaction?.area) {\n            case Area.buttons:\n                this.emulationService.handleButtonUp(interaction.button);\n\n                this.canvasHelper.drawButtons(this.activeButtons());\n\n                break;\n\n            case Area.silkscreen:\n                this.emulationService.handlePointerUp();\n\n                break;\n        }\n    };\n\n    private handleTouchStart = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!touch) continue;\n\n            const coords = this.eventToPalmCoordinates(touch);\n            if (!coords) continue;\n\n            const area = this.determineArea(coords);\n            if (area === Area.silkscreen) {\n                this.interactionsTouch.set(touch.identifier, { area });\n                this.emulationService.handlePointerMove(...coords);\n            } else {\n                const button = this.determineButton(coords);\n                this.interactionsTouch.set(touch.identifier, { area, button });\n\n                this.emulationService.handleButtonDown(button);\n\n                this.canvasHelper.drawButtons(this.activeButtons());\n            }\n        }\n\n        if (e.cancelable !== false) e.preventDefault();\n    };\n\n    private handleTouchMove = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!touch) continue;\n\n            if (this.interactionsTouch.get(touch.identifier)?.area === Area.silkscreen) {\n                const coords = this.eventToPalmCoordinates(touch, true);\n                if (!coords) continue;\n\n                this.emulationService.handlePointerMove(...coords);\n            }\n        }\n\n        if (e.cancelable !== false) e.preventDefault();\n    };\n\n    private handleTouchEnd = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!touch) continue;\n\n            const interaction = this.interactionsTouch.get(touch.identifier);\n            this.interactionsTouch.delete(touch.identifier);\n\n            switch (interaction?.area) {\n                case Area.buttons:\n                    this.emulationService.handleButtonUp(interaction.button);\n\n                    this.canvasHelper.drawButtons(this.activeButtons());\n\n                    break;\n\n                case Area.silkscreen:\n                    this.emulationService.handlePointerUp();\n\n                    break;\n            }\n        }\n\n        if (e.cancelable !== false) e.preventDefault();\n    };\n\n    private handleKeyDown = (e: KeyboardEvent): void => {\n        const keyCode = keyToCode(e.key);\n\n        if (!e.ctrlKey && keyCode !== undefined) {\n            this.emulationService.handleKeyDown(keyCode);\n            e.preventDefault();\n        }\n    };\n\n    private eventToPalmCoordinates(e: MouseEvent | Touch, clip = false): [number, number] | undefined {\n        const bb = this.canvas.getBoundingClientRect();\n\n        let contentX: number;\n        let contentY: number;\n        let contentWidth: number;\n        let contentHeight: number;\n\n        // CSS object-fit keeps the aspect ratio of the canvas content, but the canvas itself\n        // looses aspect and fills the container -> manually calculate the metrics for the content\n        if (bb.width / bb.height > WIDTH / HEIGHT) {\n            contentHeight = bb.height;\n            contentWidth = (WIDTH / HEIGHT) * bb.height;\n            contentY = bb.top;\n            contentX = bb.left + (bb.width - contentWidth) / 2;\n        } else {\n            contentWidth = bb.width;\n            contentHeight = (HEIGHT / WIDTH) * bb.width;\n            contentX = bb.left;\n            contentY = bb.top + (bb.height - contentHeight) / 2;\n        }\n\n        // Compensate for the border\n        let x = Math.floor((((e.clientX - contentX) / contentWidth) * WIDTH) / SCALE) - BORDER / SCALE;\n        let y = Math.floor((((e.clientY - contentY) / contentHeight) * HEIGHT) / SCALE) - BORDER / SCALE;\n\n        // The canvas layout inside the border is as follows:\n        //\n        // * 0 .. 159   : LCD\n        // * 160        : separator\n        // * 161 .. 220 : silkscreen\n        // * 221 .. 250 : buttons\n        //\n        // we map this to 160x250 lines by mapping the separator to the silkscreen\n\n        if (y >= 161) y -= 1;\n\n        if (clip) {\n            if (x < 0) x = 0;\n            if (x > 159) x = 159;\n            if (y < 0) y = 0;\n            if (y > 249) y = 249;\n        } else {\n            if (x < 0 || x >= 160 || y < 0 || y >= 250) return undefined;\n        }\n\n        return [x, y];\n    }\n\n    private determineArea([, y]: [number, number]): Area {\n        return y >= 220 ? Area.buttons : Area.silkscreen;\n    }\n\n    private determineButton([x, y]: [number, number]): PalmButton {\n        if (x >= 130) return PalmButton.notes;\n        if (x >= 100) return PalmButton.todo;\n        if (x >= 60) return y >= 236 ? PalmButton.down : PalmButton.up;\n        if (x >= 30) return PalmButton.phone;\n\n        return PalmButton.cal;\n    }\n\n    private activeButtons(): Array<PalmButton> {\n        const buttons = Array.from(this.interactionsTouch.values())\n            .filter((i) => i.area === Area.buttons)\n            .map((i) => (i as InteractionButton).button);\n\n        if (this.interactionMouse?.area === Area.buttons) buttons.push(this.interactionMouse.button);\n\n        return buttons;\n    }\n\n    private interactionMouse: Interaction | undefined;\n    private interactionsTouch = new Map<number, Interaction>();\n    private bound = false;\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>{{title}}</ion-title>\n\n    <ion-buttons slot=\"end\">\n      <ion-button [disabled]=\"installFileDisabled\" (click)=\"installFiles()\">\n        <ion-icon name=\"download-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"openContextMenu($event)\">\n        <ion-icon name=\"ellipsis-vertical-outline\"></ion-icon>\n      </ion-button>\n\n      <ion-button *ngIf=\"isMuted && !isAudioOff\" (click)=\"mute(false)\">\n        <ion-icon name=\"volume-mute-outline\"></ion-icon>\n      </ion-button>\n      <ion-button *ngIf=\"!isMuted && !isAudioOff\" (click)=\"mute(true)\">\n        <ion-icon name=\"volume-high-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <div class=\"container running-session\" [style.display]=\"emulationState.getCurrentSession() ? undefined : 'none'\">\n    <canvas #canvas [width]=\"canvasWidth\" [height]=\"canvasHeight\" [style.width]=\"cssWidth\" [style.height]=\"cssHeight\"\n      [style.display]=\"emulationState.getCurrentSession() ? 'block' : 'none'\"></canvas>\n  </div>\n\n  <div class=\"container no-session\" *ngIf=\" !emulationState.getCurrentSession()\">\n    <div>No session selected</div>\n  </div>\n\n</ion-content>\n","import { RouterModule, Routes } from '@angular/router';\n\nimport { EmulationPage } from './emulation.page';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: EmulationPage,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class EmulationPageRoutingModule {}\n","import { AfterViewInit, Component, ElementRef, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { CanvasHelper, HEIGHT, WIDTH } from './helper/CanvasHelper';\nimport { FileDescriptor, FileService } from 'src/app/service/file.service';\nimport { LoadingController, ModalController, PopoverController } from '@ionic/angular';\nimport { getStoredSession, hasStoredSession } from 'src/app/helper/storedSession';\n\nimport { AlertService } from 'src/app/service/alert.service';\nimport { AudioService } from './../../service/audio.service';\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\nimport { EmulationService } from './../../service/emulation.service';\nimport { EmulationStateService } from './../../service/emulation-state.service';\nimport { EventHandler } from './helper/EventHandler';\nimport { HelpComponent } from 'src/app/component/help/help.component';\nimport { KvsService } from './../../service/kvs.service';\nimport { PalmButton } from '../../../../../src';\nimport { StorageService } from './../../service/storage.service';\n\n@Component({\n    selector: 'app-emulation',\n    templateUrl: './emulation.page.html',\n    styleUrls: ['./emulation.page.scss'],\n})\nexport class EmulationPage implements AfterViewInit {\n    constructor(\n        public emulationService: EmulationService,\n        public emulationState: EmulationStateService,\n        private storageService: StorageService,\n        private kvsService: KvsService,\n        private audioService: AudioService,\n        private popoverController: PopoverController,\n        private modalController: ModalController,\n        private alertService: AlertService,\n        private fileService: FileService,\n        private loadingController: LoadingController,\n        private ngZone: NgZone\n    ) {}\n\n    ngAfterViewInit(): void {\n        const canvasElt = this.canvasRef.nativeElement;\n        this.canvasHelper = new CanvasHelper(canvasElt);\n        this.eventHandler = new EventHandler(canvasElt, this.emulationService, this.canvasHelper);\n    }\n\n    get canvasWidth(): number {\n        return WIDTH;\n    }\n\n    get canvasHeight(): number {\n        return HEIGHT;\n    }\n\n    get cssWidth(): string {\n        return this.canvasWidth / devicePixelRatio + 'px';\n    }\n\n    get cssHeight(): string {\n        return this.canvasHeight / devicePixelRatio + 'px';\n    }\n\n    async ionViewDidEnter(): Promise<void> {\n        let session = this.emulationState.getCurrentSession();\n        const storedSession = getStoredSession();\n\n        if (!session && storedSession !== undefined) {\n            session = await this.storageService.getSession(storedSession);\n        }\n        this.canvasHelper.clear(session);\n        this.onNewFrame(this.emulationService.getCanvas());\n\n        this.emulationService.newFrameEvent.addHandler(this.onNewFrame);\n\n        this.emulationService.resume();\n\n        this.ngZone.runOutsideAngular(() => this.eventHandler.bind());\n    }\n\n    ionViewWillLeave() {\n        this.emulationService.pause();\n\n        this.emulationService.newFrameEvent.removeHandler(this.onNewFrame);\n\n        this.eventHandler.release();\n    }\n\n    async openContextMenu(e: MouseEvent): Promise<void> {\n        const popover = await this.popoverController.create({\n            component: ContextMenuComponent,\n            event: e,\n            backdropDismiss: true,\n            showBackdrop: false,\n            componentProps: {\n                onClick: () => popover.dismiss(),\n                showHelp: () => this.showHelp(),\n            },\n        });\n\n        popover.present();\n    }\n\n    installFiles(): void {\n        this.fileService.openFiles(this.processFilesForInstallation.bind(this));\n    }\n\n    async showHelp(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: HelpComponent,\n            componentProps: {\n                url: 'assets/doc/emulation.md',\n            },\n        });\n        await modal.present();\n    }\n\n    get installFileDisabled(): boolean {\n        return (\n            !this.emulationService.isRunning() ||\n            this.emulationService.isPowerOff() ||\n            !this.emulationService.isUiInitialized()\n        );\n    }\n\n    get title(): string {\n        return this.emulationState.getCurrentSession()?.name || '';\n    }\n\n    get isMuted(): boolean {\n        return !this.audioService.isInitialized() || this.audioService.isMuted();\n    }\n\n    get isAudioOff(): boolean {\n        return this.kvsService.kvs.volume <= 0;\n    }\n\n    mute(muted: boolean): void {\n        if (muted) {\n            this.audioService.mute(true);\n        } else {\n            if (this.audioService.isInitialized()) {\n                this.audioService.mute(false);\n            } else {\n                this.audioService.initialize();\n            }\n        }\n    }\n\n    private onNewFrame = (canvas: HTMLCanvasElement): void => {\n        this.canvasHelper.drawEmulationCanvas(canvas);\n    };\n\n    private async processFilesForInstallation(files: Array<FileDescriptor>): Promise<void> {\n        const loader = await this.loadingController.create({\n            message: 'Installing...',\n        });\n        await loader.present();\n\n        const filesSuccess: Array<string> = [];\n        const filesFail: Array<string> = [];\n\n        try {\n            for (const file of files) {\n                if (!/\\.(prc|pdb)$/i.test(file.name)) {\n                    filesFail.push(file.name);\n\n                    continue;\n                }\n\n                if ((await this.emulationService.installFile(file.content)) == 0) {\n                    filesSuccess.push(file.name);\n                } else {\n                    filesFail.push(file.name);\n                }\n            }\n        } finally {\n            loader.dismiss();\n        }\n\n        let message: string;\n\n        switch (filesSuccess.length) {\n            case 0:\n                message = '';\n                break;\n\n            case 1:\n                message = `Installation of ${filesSuccess[0]} successful.`;\n                break;\n\n            default:\n                message = `Installation of ${filesSuccess.length} files successful.`;\n                break;\n        }\n\n        if (filesFail.length > 0) message += '<br/><br/>';\n\n        switch (filesFail.length) {\n            case 0:\n                break;\n\n            case 1:\n                message += `Installation of ${filesFail[0]} failed.`;\n                break;\n\n            default:\n                message += `Installation of ${filesFail\n                    .slice(0, filesFail.length > 3 ? 3 : filesFail.length - 1)\n                    .join(', ')} and ${\n                    filesFail.length > 3 ? filesFail.length - 3 + ' more files' : filesFail[filesFail.length - 1]\n                } failed.`;\n\n                break;\n        }\n\n        let header;\n\n        if (filesFail.length === 0) {\n            header = 'Installation successful';\n        } else if (filesSuccess.length === 0) {\n            header = 'Installation failed';\n        } else {\n            header = 'Installation errors';\n        }\n\n        this.alertService.message(header, message);\n    }\n\n    @ViewChild('canvas') private canvasRef!: ElementRef<HTMLCanvasElement>;\n    private canvasHelper!: CanvasHelper;\n    private eventHandler!: EventHandler;\n}\n","import { CommonModule } from '@angular/common';\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\nimport { EmulationPage } from './emulation.page';\nimport { EmulationPageRoutingModule } from './emulation-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { SharedComponentModule } from './../../component/shared-component.module';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, IonicModule, EmulationPageRoutingModule, SharedComponentModule],\n    declarations: [EmulationPage, ContextMenuComponent],\n})\nexport class EmulationPageModule {}\n"]}