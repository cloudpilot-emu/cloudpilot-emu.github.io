{"version":3,"file":"1024.64c425e7f7148fbd.js","mappings":"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","names":["hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassMap","classes","map","getClassList","undefined","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","_ref","_asyncToGenerator","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push","_x","_x2","_x3","_x4","apply","this","arguments","Menu","constructor","hostRef","registerInstance","ionWillOpen","createEvent","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","didLoad","operationCancelled","isAnimating","_isOpen","inheritedAttributes","handleFocus","lastOverlay","getPresentedOverlay","contains","trapKeyboardFocus","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","typeChanged","type","oldType","contentEl","classList","remove","add","removeAttribute","menuInnerEl","disabledChanged","updateState","emit","open","sideChanged","swipeGestureChanged","connectedCallback","_this","customElements","whenDefined","config","get","content","contentId","getElementById","printIonError","menuController","_register","menuChanged","gesture","Promise","resolve","then","__webpack_require__","bind","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","componentWillLoad","inheritAriaAttributes","componentDidLoad","_this2","splitPane","isVisible","disconnectedCallback","_this3","close","destroy","_unregister","onSplitPaneChanged","closestSplitPane","target","detail","visible","onBackdropClick","timeStamp","composedPath","includes","stopPropagation","BACKDROP","onKeydown","key","isOpen","isActive","_isActive","animated","setOpen","role","toggle","shouldOpen","_setOpen","doc","lastFocus","focusFirstDescendant","activeElement","focusLastDescendant","_this4","beforeAnimation","loadAnimation","startAnimation","afterAnimation","_this5","width","offsetWidth","isEndSide$1","_createAnimation","getBoolean","duration","fill","_this6","isReversed","mode","getIonMode","easing","easingReverse","ani","play","sync","getDirection","canSwipe","_getOpenSync","checkEdgeSide","window","currentX","GESTURE","progressStart","assert","stepValue","computeDelta","deltaX","progressStep","delta","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","getTimeGivenProgression","clamp","playTo","onFinish","oneTimeCallback","progressEnd","isPlatform","setAttribute","SHOW_MENU","backdropEl","SHOW_BACKDROP","MENU_CONTENT_OPEN","block","_a","unblock","focus","addEventListener","stop","removeEventListener","enable","render","h","Host","onKeyDown","shouldUseCloseWatcher","class","m","part","ref","tappable","getElement","watchers","Math","max","win","posX","innerWidth","style","ios","md","updateVisibility","menu","menuEl","MenuButton","_this7","autoHide","onClick","visibilityChanged","_this8","menuIcon","menuOutline","menuSharp","hidden","attrs","ariaLabel","l","button","icon","lazy","MenuToggle","_this9","t"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/theme-DiVJyqlX.js","./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, e as config, j as printIonError, h, d as Host, g as getElement } from './index-4DxY6_gG.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-hHmYLOfE.js';\nimport { o as getPresentedOverlay, B as BACKDROP, n as focusFirstDescendant, q as focusLastDescendant, G as GESTURE } from './overlays-ZX_4-t_r.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-BTEOs1at.js';\nimport { shouldUseCloseWatcher } from './hardware-back-button-Dhbd-23H.js';\nimport { o as isEndSide, i as inheritAriaAttributes, l as assert, e as clamp } from './helpers-8KSQQGQy.js';\nimport { m as menuController } from './index-CXSTcaAW.js';\nimport { b as getIonMode, a as isPlatform } from './ionic-global-CTSyufhF.js';\nimport { h as hostContext, c as createColorClasses } from './theme-DiVJyqlX.js';\nimport { u as menuOutline, v as menuSharp } from './index-DV3sJJW8.js';\nimport './index-ZjP4CjeZ.js';\nimport './framework-delegate-BLEBgH06.js';\nimport './animation-BvhAtgca.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.didLoad = false;\n        /**\n         * Flag used to determine if an open/close\n         * operation was cancelled. For example, if\n         * an app calls \"menu.open\" then disables the menu\n         * part way through the animation, then this would\n         * be considered a cancelled operation.\n         */\n        this.operationCancelled = false;\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.inheritedAttributes = {};\n        this.handleFocus = (ev) => {\n            /**\n             * Overlays have their own focus trapping listener\n             * so we do not want the two listeners to conflict\n             * with each other. If the top-most overlay that is\n             * open does not contain this ion-menu, then ion-menu's\n             * focus trapping should not run.\n             */\n            const lastOverlay = getPresentedOverlay(document);\n            if (lastOverlay && !lastOverlay.contains(this.el)) {\n                return;\n            }\n            this.trapKeyboardFocus(ev, document);\n        };\n        /**\n         * If true, then the menu should be\n         * visible within a split pane.\n         * If false, then the menu is hidden.\n         * However, the menu-button/menu-toggle\n         * components can be used to open the\n         * menu.\n         */\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen,\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        this.animation = undefined;\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        // TODO: connectedCallback is fired in CE build\n        // before WC is defined. This needs to be fixed in Stencil.\n        if (typeof customElements !== 'undefined' && customElements != null) {\n            await customElements.whenDefined('ion-menu');\n        }\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n        if (content === null) {\n            printIonError('[ion-menu] - Must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        if (this.el.contains(content)) {\n            printIonError(`[ion-menu] - The \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.menuChanged();\n        this.gesture = (await import('./index-CfgBF1SE.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            blurOnStart: true,\n            canStart: (ev) => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    async componentDidLoad() {\n        this.didLoad = true;\n        /**\n         * A menu inside of a split pane is assumed\n         * to be a side pane.\n         *\n         * When the menu is loaded it needs to\n         * see if it should be considered visible inside\n         * of the split pane. If the split pane is\n         * hidden then the menu should be too.\n         */\n        const splitPane = this.el.closest('ion-split-pane');\n        if (splitPane !== null) {\n            this.isPaneVisible = await splitPane.isVisible();\n        }\n        this.menuChanged();\n        this.updateState();\n    }\n    menuChanged() {\n        /**\n         * Inform dependent components such as ion-menu-button\n         * that the menu is ready. Note that we only want to do this\n         * once the menu has been rendered which is why we check for didLoad.\n         */\n        if (this.didLoad) {\n            this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        }\n    }\n    async disconnectedCallback() {\n        /**\n         * The menu should be closed when it is\n         * unmounted from the DOM.\n         * This is an async call, so we need to wait for\n         * this to finish otherwise contentEl\n         * will not have MENU_CONTENT_OPEN removed.\n         */\n        await this.close(false);\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        const closestSplitPane = this.el.closest('ion-split-pane');\n        if (closestSplitPane !== null && closestSplitPane === ev.target) {\n            this.isPaneVisible = ev.detail.visible;\n            this.updateState();\n        }\n    }\n    onBackdropClick(ev) {\n        // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close(undefined, BACKDROP);\n            }\n        }\n    }\n    onKeydown(ev) {\n        if (ev.key === 'Escape') {\n            this.close(undefined, BACKDROP);\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` if the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     *\n     * @param animated If `true`, the menu will animate when opening.\n     * If `false`, the menu will open instantly without animation.\n     * Defaults to `true`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     *\n     * @param animated If `true`, the menu will animate when closing. If `false`,\n     * the menu will close instantly without animation. Defaults to `true`.\n     * @param role The role of the element that is closing the menu.\n     * This can be useful in a button handler for determining which button was\n     * clicked to close the menu. Some examples include:\n     * `\"cancel\"`, `\"destructive\"`, `\"selected\"`, and `\"backdrop\"`.\n     */\n    close(animated = true, role) {\n        return this.setOpen(false, animated, role);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close,\n     * otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     *\n     * @param animated If `true`, the menu will animate when opening/closing.\n     * If `false`, the menu will open/close instantly without animation.\n     * Defaults to `true`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the menu.\n     * If the operation can't be completed successfully, it returns `false`.\n     *\n     * @param shouldOpen If `true`, the menu will open. If `false`, the menu\n     * will close.\n     * @param animated If `true`, the menu will animate when opening/closing.\n     * If `false`, the menu will open/close instantly without animation.\n     * @param role The role of the element that is closing the menu.\n     */\n    setOpen(shouldOpen, animated = true, role) {\n        return menuController._setOpen(this, shouldOpen, animated, role);\n    }\n    trapKeyboardFocus(ev, doc) {\n        const target = ev.target;\n        if (!target) {\n            return;\n        }\n        /**\n         * If the target is inside the menu contents, let the browser\n         * focus as normal and keep a log of the last focused element.\n         */\n        if (this.el.contains(target)) {\n            this.lastFocus = target;\n        }\n        else {\n            /**\n             * Otherwise, we are about to have focus go out of the menu.\n             * Wrap the focus to either the first or last element.\n             */\n            const { el } = this;\n            /**\n             * Once we call `focusFirstDescendant`, another focus event\n             * will fire, which will cause `lastFocus` to be updated\n             * before we can run the code after that. We cache the value\n             * here to avoid that.\n             */\n            focusFirstDescendant(el);\n            /**\n             * If the cached last focused element is the same as the now-\n             * active element, that means the user was on the first element\n             * already and pressed Shift + Tab, so we need to wrap to the\n             * last descendant.\n             */\n            if (this.lastFocus === doc.activeElement) {\n                focusLastDescendant(el);\n            }\n        }\n    }\n    async _setOpen(shouldOpen, animated = true, role) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen, role);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        /**\n         * If the animation was cancelled then\n         * return false because the operation\n         * did not succeed.\n         */\n        if (this.operationCancelled) {\n            this.operationCancelled = false;\n            return false;\n        }\n        this.afterAnimation(shouldOpen, role);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        const isEndSide$1 = isEndSide(this.side);\n        if (width === this.width && this.animation !== undefined && isEndSide$1 === this.isEndSide) {\n            return;\n        }\n        this.width = width;\n        this.isEndSide = isEndSide$1;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        const animation = (this.animation = await menuController._createAnimation(this.type, this));\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction(isReversed ? 'reverse' : 'normal')\n            .easing(isReversed ? easingReverse : easing);\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n        /**\n         * We run this after the play invocation\n         * instead of using ani.onFinish so that\n         * multiple onFinish callbacks do not get\n         * run if an animation is played, stopped,\n         * and then played again.\n         */\n        if (ani.getDirection() === 'reverse') {\n            ani.direction('normal');\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen, GESTURE);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, this._isOpen ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide\n                ? shouldCompleteRight\n                : shouldCompleteLeft\n            : isEndSide\n                ? shouldCompleteLeft\n                : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = shouldComplete ? 0.001 : -1e-3;\n        /**\n         * stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         */\n        const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue +=\n            getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen, GESTURE), { oneTimeCallback: true })\n            .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen, role) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        /**\n         * When the menu is presented on an Android device, TalkBack's focus rings\n         * may appear in the wrong position due to the transition (specifically\n         * `transform` styles). This occurs because the focus rings are initially\n         * displayed at the starting position of the elements before the transition\n         * begins. This workaround ensures the focus rings do not appear in the\n         * incorrect location.\n         *\n         * If this solution is applied to iOS devices, then it leads to a bug where\n         * the overlays cannot be accessed by screen readers. This is due to\n         * VoiceOver not being able to update the accessibility tree when the\n         * `aria-hidden` is removed.\n         */\n        if (isPlatform('android')) {\n            this.el.setAttribute('aria-hidden', 'true');\n        }\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        /**\n         * We add a tabindex here so that focus trapping\n         * still works even if the menu does not have\n         * any focusable elements slotted inside. The\n         * focus trapping utility will fallback to focusing\n         * the menu so focus does not leave when the menu\n         * is open.\n         */\n        this.el.setAttribute('tabindex', '0');\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        // add css class and hide content behind menu from screen readers\n        if (this.contentEl) {\n            this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            /**\n             * When the menu is open and overlaying the main\n             * content, the main content should not be announced\n             * by the screenreader as the menu is the main\n             * focus. This is useful with screenreaders that have\n             * \"read from top\" gestures that read the entire\n             * page from top to bottom when activated.\n             * This should be done before the animation starts\n             * so that users cannot accidentally scroll\n             * the content while dragging a menu open.\n             */\n            this.contentEl.setAttribute('aria-hidden', 'true');\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit({ role });\n        }\n    }\n    afterAnimation(isOpen, role) {\n        var _a;\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            /**\n             * When the menu is presented on an Android device, TalkBack's focus rings\n             * may appear in the wrong position due to the transition (specifically\n             * `transform` styles). The menu is hidden from screen readers during the\n             * transition to prevent this. Once the transition is complete, the menu\n             * is shown again.\n             */\n            if (isPlatform('android')) {\n                this.el.removeAttribute('aria-hidden');\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n            /**\n             * Move focus to the menu to prepare focus trapping, as long as\n             * it isn't already focused. Use the host element instead of the\n             * first descendant to avoid the scroll position jumping around.\n             */\n            const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n            if (focusedMenu !== this.el) {\n                this.el.focus();\n            }\n            // start focus trapping\n            document.addEventListener('focus', this.handleFocus, true);\n        }\n        else {\n            this.el.removeAttribute('aria-hidden');\n            // remove css classes and unhide content from screen readers\n            this.el.classList.remove(SHOW_MENU);\n            /**\n             * Remove tabindex from the menu component\n             * so that is cannot be tabbed to.\n             */\n            this.el.removeAttribute('tabindex');\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n                /**\n                 * Remove aria-hidden so screen readers\n                 * can announce the main content again\n                 * now that the menu is not the main focus.\n                 */\n                this.contentEl.removeAttribute('aria-hidden');\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit({ role });\n            // undo focus trapping so multiple menus don't collide\n            document.removeEventListener('focus', this.handleFocus, true);\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        /**\n         * If the menu is disabled but it is still open\n         * then we should close the menu immediately.\n         * Additionally, if the menu is in the process\n         * of animating {open, close} and the menu is disabled\n         * then it should still be closed immediately.\n         */\n        if (!isActive) {\n            /**\n             * It is possible to disable the menu while\n             * it is mid-animation. When this happens, we\n             * need to set the operationCancelled flag\n             * so that this._setOpen knows to return false\n             * and not run the \"afterAnimation\" callback.\n             */\n            if (this.isAnimating) {\n                this.operationCancelled = true;\n            }\n            /**\n             * If the menu is disabled then we should\n             * forcibly close the menu even if it is open.\n             */\n            this.afterAnimation(false, GESTURE);\n        }\n    }\n    render() {\n        const { type, disabled, el, isPaneVisible, inheritedAttributes, side } = this;\n        const mode = getIonMode(this);\n        /**\n         * If the Close Watcher is enabled then\n         * the ionBackButton listener in the menu controller\n         * will handle closing the menu when Escape is pressed.\n         */\n        return (h(Host, { key: 'a5c75aa40a34530b56ee3b98d706a5ac5ae300de', onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown, role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                [`menu-side-${side}`]: true,\n                'menu-pane-visible': isPaneVisible,\n                'split-pane-side': hostContext('ion-split-pane', el),\n            } }, h(\"div\", { key: '3f5f70acd4d3ed6bb445122f4f01d73db738a75f', class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", { key: '3161326c9330e7f7441299c428b87a91b31a83e9' })), h(\"ion-backdrop\", { key: '917b50f38489bdf03d0c642af8b4e4e172c7dc4c', ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n    ios: menuIosCss,\n    md: menuMdCss\n};\n\n// Given a menu, return whether or not the menu toggle should be visible\nconst updateVisibility = async (menu) => {\n    const menuEl = await menuController.get(menu);\n    return !!(menuEl && (await menuEl.isActive()));\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #0054e9);--padding-start:5px;--padding-end:5px;min-height:32px;font-size:clamp(31px, 1.9375rem, 38.13px)}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\n\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:3rem;height:3rem;font-size:1.5rem}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inheritedAttributes = {};\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled, inheritedAttributes } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? menuOutline : menuSharp);\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type,\n        };\n        const ariaLabel = inheritedAttributes['aria-label'] || 'menu';\n        return (h(Host, { key: '9f0f0e50d39a6872508220c58e64bb2092a0d7ef', onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                button: true, // ion-buttons target .button\n                'menu-button-hidden': hidden,\n                'menu-button-disabled': disabled,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }) }, h(\"button\", Object.assign({ key: 'ffebf7083d23501839970059ef8e411b571de197' }, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }), h(\"span\", { key: 'cab0c1c763b3ce33ef11dba1d230f66126e59424', class: \"button-inner\" }, h(\"slot\", { key: 'ccfd2be8479b75b5c63e97e1ca7dfe203e9b36ee' }, h(\"ion-icon\", { key: 'ac254fe7f327b08f1ae3fcea89d5cf0e83c9a96c', part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { key: 'f0f17c4ca96e3eed3c1727ee00578d40af8f0115', type: \"unbounded\" }))));\n    }\n    get el() { return getElement(this); }\n};\nMenuButton.style = {\n    ios: menuButtonIosCss,\n    md: menuButtonMdCss\n};\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { key: 'cd567114769a30bd3871ed5d15bf42aed39956e1', onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", { key: '773d4cff95ca75f23578b1e1dca53c9933f28a33' })));\n    }\n};\nMenuToggle.style = menuToggleCss;\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\n"],"x_google_ignoreList":[0,1]}