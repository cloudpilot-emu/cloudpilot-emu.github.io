{"version":3,"file":"3121.645e426ca5c06188.js","mappings":"0JAOA,MAEMA,EAAM,MACVC,YAAYC,IACVC,OAAiBC,KAAMF,GACvBE,KAAKC,kBAAiBC,KAAYF,KAAM,iBAAkB,GAC1DA,KAAKG,iBAAgBD,KAAYF,KAAM,gBAAiB,GACxDA,KAAKI,YAAWF,KAAYF,KAAM,WAAY,GAC9CA,KAAKK,oBAAsB,CAAC,EAC5BL,KAAKM,OAAS,KACZN,KAAKG,cAAcI,MAAK,EAE1BP,KAAKQ,QAAU,KACbR,KAAKI,SAASG,MAAK,EAErBP,KAAKS,aAAUC,EACfV,KAAKW,eAAYD,EACjBV,KAAKY,SAAMF,EACXV,KAAKa,SAAMH,CACb,CACAI,aACEd,KAAKe,OACP,CACAC,oBACEhB,KAAKK,uBAAsBY,KAAkBjB,KAAKkB,GAAI,CAAC,aACzD,CACAC,mBACEnB,KAAKe,OACP,CACAA,aACmBL,IAAbV,KAAKa,aAGEO,OAAW,KACpB,yBAA0BA,QAC1B,8BAA+BA,QAC/B,mBAAoBA,OAAOC,0BAA0BC,WACrDtB,KAAKuB,WACLvB,KAAKwB,GAAK,IAAIC,qBAAsBC,IAM9BA,EAAKA,EAAKC,OAAS,GAAGC,iBACxB5B,KAAK6B,OACL7B,KAAKuB,WAAS,GAGlBvB,KAAKwB,GAAGM,QAAQ9B,KAAKkB,KAIrBa,WAAW,IAAM/B,KAAK6B,OAAQ,KAElC,CACAA,OACE7B,KAAKW,UAAYX,KAAKQ,QACtBR,KAAKS,QAAUT,KAAKa,IACpBb,KAAKC,eAAeM,MACtB,CACAgB,WACMvB,KAAKwB,KACPxB,KAAKwB,GAAGQ,aACRhC,KAAKwB,QAAKd,EAEd,CACAuB,SACE,MAAQxB,UAASG,MAAKN,SAAQK,YAAWN,uBAAwBL,MACzDkC,aAAc7B,EACtB,SAAQ8B,KAAEC,IAAM,CAAEC,SAAOC,KAAWtC,QAAM,EAAGmC,KAAE,MAAO,CAAEI,SAAU,QAAS1B,IAAKJ,EAASG,IAAKA,EAAKN,OAAQA,EAAQE,QAASG,EAAW6B,KAAM,QAASN,UAAWO,EAAYP,KAC/K,CACA,MAAIhB,GAAO,SAAOwB,KAAW1C,KAAO,CACpC,mBAAW2C,GAAa,MAAO,CAC7B9B,IAAO,CAAC,cACP,GASC4B,EAAeP,IACnB,OAAQA,GACN,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,QACE,OACJ,EAEFtC,EAAIgD,MA9FW","names":["Img","constructor","hostRef","registerInstance","this","ionImgWillLoad","createEvent","ionImgDidLoad","ionError","inheritedAttributes","onLoad","emit","onError","loadSrc","undefined","loadError","alt","src","srcChanged","addIO","componentWillLoad","inheritAttributes","el","componentDidLoad","window","IntersectionObserverEntry","prototype","removeIO","io","IntersectionObserver","data","length","isIntersecting","load","observe","setTimeout","disconnect","render","draggable","h","Host","class","getIonMode","decoding","part","isDraggable","getElement","watchers","style"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, H as Host, f as getElement } from './index-847f2fde.js';\nimport { k as inheritAttributes } from './helpers-3379ba19.js';\nimport { b as getIonMode } from './ionic-global-1ef19007.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n    this.ionError = createEvent(this, \"ionError\", 7);\n    this.inheritedAttributes = {};\n    this.onLoad = () => {\n      this.ionImgDidLoad.emit();\n    };\n    this.onError = () => {\n      this.ionError.emit();\n    };\n    this.loadSrc = undefined;\n    this.loadError = undefined;\n    this.alt = undefined;\n    this.src = undefined;\n  }\n  srcChanged() {\n    this.addIO();\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['draggable']);\n  }\n  componentDidLoad() {\n    this.addIO();\n  }\n  addIO() {\n    if (this.src === undefined) {\n      return;\n    }\n    if (typeof window !== 'undefined' &&\n      'IntersectionObserver' in window &&\n      'IntersectionObserverEntry' in window &&\n      'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n      this.removeIO();\n      this.io = new IntersectionObserver((data) => {\n        /**\n         * On slower devices, it is possible for an intersection observer entry to contain multiple\n         * objects in the array. This happens when quickly scrolling an image into view and then out of\n         * view. In this case, the last object represents the current state of the component.\n         */\n        if (data[data.length - 1].isIntersecting) {\n          this.load();\n          this.removeIO();\n        }\n      });\n      this.io.observe(this.el);\n    }\n    else {\n      // fall back to setTimeout for Safari and IE\n      setTimeout(() => this.load(), 200);\n    }\n  }\n  load() {\n    this.loadError = this.onError;\n    this.loadSrc = this.src;\n    this.ionImgWillLoad.emit();\n  }\n  removeIO() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  render() {\n    const { loadSrc, alt, onLoad, loadError, inheritedAttributes } = this;\n    const { draggable } = inheritedAttributes;\n    return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: loadSrc, alt: alt, onLoad: onLoad, onError: loadError, part: \"image\", draggable: isDraggable(draggable) })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"src\": [\"srcChanged\"]\n  }; }\n};\n/**\n * Enumerated strings must be set as booleans\n * as Stencil will not render 'false' in the DOM.\n * The need to explicitly render draggable=\"true\"\n * as only certain elements are draggable by default.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable.\n */\nconst isDraggable = (draggable) => {\n  switch (draggable) {\n    case 'true':\n      return true;\n    case 'false':\n      return false;\n    default:\n      return undefined;\n  }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"],"x_google_ignoreList":[0]}